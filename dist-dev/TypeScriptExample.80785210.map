{"version":3,"sources":["..\\node_modules\\process\\browser.js","..\\node_modules\\conbo\\lib\\conbo.js","app\\model\\MyModel.ts","app\\view\\View1.ts","app\\view\\View2.ts","app\\core\\MyRouter.ts","app\\core\\MyContext.ts","app\\view\\InputView.ts","app\\view\\OutputView.ts","app\\TypeScriptExample.ts","..\\node_modules\\parcel-bundler\\src\\builtins\\bundle-url.js","..\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","bundleURL","getBundleURLCached","getBundleURL","err","matches","stack","match","getBaseURL","url","replace","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","document","querySelectorAll"],"mappingshB;AACA,SAASC,kBAAT,GAA8B;AAC5B,MAAI,CAACD,SAAL,EAAgB;AACdA,gBAAYE,cAAZ;AACD;;AAED,SAAOF,SAAP;AACD;;AAED,SAASE,YAAT,GAAwB;AACtB;AACA,MAAI;AACF,UAAM,IAAIxD,KAAJ,EAAN;AACD,GAFD,CAEE,OAAOyD,GAAP,EAAY;AACZ,QAAIC,UAAU,CAAC,KAAKD,IAAIE,KAAV,EAAiBC,KAAjB,CAAuB,gCAAvB,CAAd;AACA,QAAIF,OAAJ,EAAa;AACX,aAAOG,WAAWH,QAAQ,CAAR,CAAX,CAAP;AACD;AACF;;AAED,SAAO,GAAP;AACD;;AAED,SAASG,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAO,CAAC,KAAKA,GAAN,EAAWC,OAAX,CAAmB,uCAAnB,EAA4D,IAA5D,IAAoE,GAA3E;AACD;;AAEDnE,QAAQ4D,YAAR,GAAuBD,kBAAvB;AACA3D,QAAQiE,UAAR,GAAqBA,UAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA,IAAIG,SAASC,QAAQ,cAAR,CAAb;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,UAAUD,KAAKE,SAAL,EAAd;AACAD,UAAQE,MAAR,GAAiB,YAAY;AAC3BH,SAAKI,MAAL;AACD,GAFD;AAGAH,UAAQI,IAAR,GAAeL,KAAKK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,KAAKC,GAAL,EAA/C;AACAR,OAAKS,UAAL,CAAgBC,YAAhB,CAA6BT,OAA7B,EAAsCD,KAAKW,WAA3C;AACD;;AAED,IAAIC,aAAa,IAAjB;AACA,SAASC,SAAT,GAAqB;AACnB,MAAID,UAAJ,EAAgB;AACd;AACD;;AAEDA,eAAa7E,WAAW,YAAY;AAClC,QAAI+E,QAAQC,SAASC,gBAAT,CAA0B,wBAA1B,CAAZ;AACA,SAAK,IAAI1D,IAAI,CAAb,EAAgBA,IAAIwD,MAAMlE,MAA1B,EAAkCU,GAAlC,EAAuC;AACrC,UAAIuC,OAAOH,UAAP,CAAkBoB,MAAMxD,CAAN,EAAS+C,IAA3B,MAAqCR,OAAOR,YAAP,EAAzC,EAAgE;AAC9DU,mBAAWe,MAAMxD,CAAN,CAAX;AACD;AACF;;AAEDsD,iBAAa,IAAb;AACD,GATY,EASV,EATU,CAAb;AAUD;;AAEDpF,OAAOC,OAAP,GAAiBoF,SAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AX7BA;AACA,IAAItF,UAAUC,OAAOC,OAAP,GAAiB,EAA/B;;AAEA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAJ;AACA,IAAIC,kBAAJ;;AAEA,SAASC,gBAAT,GAA4B;AACxB,UAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;AACD,SAASC,mBAAT,GAAgC;AAC5B,UAAM,IAAID,KAAJ,CAAU,mCAAV,CAAN;AACH;AACA,aAAY;AACT,QAAI;AACA,YAAI,OAAOE,UAAP,KAAsB,UAA1B,EAAsC;AAClCL,+BAAmBK,UAAnB;AACH,SAFD,MAEO;AACHL,+BAAmBE,gBAAnB;AACH;AACJ,KAND,CAME,OAAOI,CAAP,EAAU;AACRN,2BAAmBE,gBAAnB;AACH;AACD,QAAI;AACA,YAAI,OAAOK,YAAP,KAAwB,UAA5B,EAAwC;AACpCN,iCAAqBM,YAArB;AACH,SAFD,MAEO;AACHN,iCAAqBG,mBAArB;AACH;AACJ,KAND,CAME,OAAOE,CAAP,EAAU;AACRL,6BAAqBG,mBAArB;AACH;AACJ,CAnBA,GAAD;AAoBA,SAASI,UAAT,CAAoBC,GAApB,EAAyB;AACrB,QAAIT,qBAAqBK,UAAzB,EAAqC;AACjC;AACA,eAAOA,WAAWI,GAAX,EAAgB,CAAhB,CAAP;AACH;AACD;AACA,QAAI,CAACT,qBAAqBE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEK,UAApE,EAAgF;AAC5EL,2BAAmBK,UAAnB;AACA,eAAOA,WAAWI,GAAX,EAAgB,CAAhB,CAAP;AACH;AACD,QAAI;AACA;AACA,eAAOT,iBAAiBS,GAAjB,EAAsB,CAAtB,CAAP;AACH,KAHD,CAGE,OAAMH,CAAN,EAAQ;AACN,YAAI;AACA;AACA,mBAAON,iBAAiBU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH,SAHD,CAGE,OAAMH,CAAN,EAAQ;AACN;AACA,mBAAON,iBAAiBU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH;AACJ;AAGJ;AACD,SAASE,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,QAAIX,uBAAuBM,YAA3B,EAAyC;AACrC;AACA,eAAOA,aAAaK,MAAb,CAAP;AACH;AACD;AACA,QAAI,CAACX,uBAAuBG,mBAAvB,IAA8C,CAACH,kBAAhD,KAAuEM,YAA3E,EAAyF;AACrFN,6BAAqBM,YAArB;AACA,eAAOA,aAAaK,MAAb,CAAP;AACH;AACD,QAAI;AACA;AACA,eAAOX,mBAAmBW,MAAnB,CAAP;AACH,KAHD,CAGE,OAAON,CAAP,EAAS;AACP,YAAI;AACA;AACA,mBAAOL,mBAAmBS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH,SAHD,CAGE,OAAON,CAAP,EAAS;AACP;AACA;AACA,mBAAOL,mBAAmBS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH;AACJ;AAIJ;AACD,IAAIC,QAAQ,EAAZ;AACA,IAAIC,WAAW,KAAf;AACA,IAAIC,YAAJ;AACA,IAAIC,aAAa,CAAC,CAAlB;;AAEA,SAASC,eAAT,GAA2B;AACvB,QAAI,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;AAC5B;AACH;AACDD,eAAW,KAAX;AACA,QAAIC,aAAaG,MAAjB,EAAyB;AACrBL,gBAAQE,aAAaI,MAAb,CAAoBN,KAApB,CAAR;AACH,KAFD,MAEO;AACHG,qBAAa,CAAC,CAAd;AACH;AACD,QAAIH,MAAMK,MAAV,EAAkB;AACdE;AACH;AACJ;;AAED,SAASA,UAAT,GAAsB;AAClB,QAAIN,QAAJ,EAAc;AACV;AACH;AACD,QAAIO,UAAUb,WAAWS,eAAX,CAAd;AACAH,eAAW,IAAX;;AAEA,QAAIQ,MAAMT,MAAMK,MAAhB;AACA,WAAMI,GAAN,EAAW;AACPP,uBAAeF,KAAf;AACAA,gBAAQ,EAAR;AACA,eAAO,EAAEG,UAAF,GAAeM,GAAtB,EAA2B;AACvB,gBAAIP,YAAJ,EAAkB;AACdA,6BAAaC,UAAb,EAAyBO,GAAzB;AACH;AACJ;AACDP,qBAAa,CAAC,CAAd;AACAM,cAAMT,MAAMK,MAAZ;AACH;AACDH,mBAAe,IAAf;AACAD,eAAW,KAAX;AACAH,oBAAgBU,OAAhB;AACH;;AAEDxB,QAAQ2B,QAAR,GAAmB,UAAUf,GAAV,EAAe;AAC9B,QAAIgB,OAAO,IAAIC,KAAJ,CAAUC,UAAUT,MAAV,GAAmB,CAA7B,CAAX;AACA,QAAIS,UAAUT,MAAV,GAAmB,CAAvB,EAA0B;AACtB,aAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAID,UAAUT,MAA9B,EAAsCU,GAAtC,EAA2C;AACvCH,iBAAKG,IAAI,CAAT,IAAcD,UAAUC,CAAV,CAAd;AACH;AACJ;AACDf,UAAMgB,IAAN,CAAW,IAAIC,IAAJ,CAASrB,GAAT,EAAcgB,IAAd,CAAX;AACA,QAAIZ,MAAMK,MAAN,KAAiB,CAAjB,IAAsB,CAACJ,QAA3B,EAAqC;AACjCN,mBAAWY,UAAX;AACH;AACJ,CAXD;;AAaA;AACA,SAASU,IAAT,CAAcrB,GAAd,EAAmBsB,KAAnB,EAA0B;AACtB,SAAKtB,GAAL,GAAWA,GAAX;AACA,SAAKsB,KAAL,GAAaA,KAAb;AACH;AACDD,KAAKE,SAAL,CAAeT,GAAf,GAAqB,YAAY;AAC7B,SAAKd,GAAL,CAASwB,KAAT,CAAe,IAAf,EAAqB,KAAKF,KAA1B;AACH,CAFD;AAGAlC,QAAQqC,KAAR,GAAgB,SAAhB;AACArC,QAAQsC,OAAR,GAAkB,IAAlB;AACAtC,QAAQuC,GAAR,GAAc,EAAd;AACAvC,QAAQwC,IAAR,GAAe,EAAf;AACAxC,QAAQyC,OAAR,GAAkB,EAAlB,EAAsB;AACtBzC,QAAQ0C,QAAR,GAAmB,EAAnB;;AAEA,SAASC,IAAT,GAAgB,CAAE;;AAElB3C,QAAQ4C,EAAR,GAAaD,IAAb;AACA3C,QAAQ6C,WAAR,GAAsBF,IAAtB;AACA3C,QAAQ8C,IAAR,GAAeH,IAAf;AACA3C,QAAQ+C,GAAR,GAAcJ,IAAd;AACA3C,QAAQgD,cAAR,GAAyBL,IAAzB;AACA3C,QAAQiD,kBAAR,GAA6BN,IAA7B;AACA3C,QAAQkD,IAAR,GAAeP,IAAf;AACA3C,QAAQmD,eAAR,GAA0BR,IAA1B;AACA3C,QAAQoD,mBAAR,GAA8BT,IAA9B;;AAEA3C,QAAQqD,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AAAE,WAAO,EAAP;AAAW,CAAjD;;AAEAtD,QAAQuD,OAAR,GAAkB,UAAUD,IAAV,EAAgB;AAC9B,UAAM,IAAIhD,KAAJ,CAAU,kCAAV,CAAN;AACH,CAFD;;AAIAN,QAAQwD,GAAR,GAAc,YAAY;AAAE,WAAO,GAAP;AAAY,CAAxC;AACAxD,QAAQyD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,UAAM,IAAIpD,KAAJ,CAAU,gCAAV,CAAN;AACH,CAFD;AAGAN,QAAQ2D,KAAR,GAAgB,YAAW;AAAE,WAAO,CAAP;AAAW,CAAxvvlOA,IAAA,UAAA,QAAA,OAAA,CAAA;AJwlOA,AIvlOA,IAAA,UAAA,QAAA,eAAA,CAAA;AJwlOA,AIvlOA,IAAA,UAAA,QAAA,eAAA,CAAA;AJwlOA,AIrlOA,IAAA,WAAA,UAAA,MAAA,EAAA;AJslOA,AItlOsC,cAAA,QAAA,EAAA,MAAA;AJulOtC,AIvlOA,aAAA,QAAA,GAAA;AJwlOA;AACA,AIviOC;AJwiOD,AIplOC,aAAA,SAAA,CAAA,YAAA,GAAA,UAAa,OAAb,EAAwB;AJqlOzB,AInlOE,aAAK,OAAL,GAAe,QAAQ,OAAvB;AJolOF,AInlOE,aAAK,SAAL,GAAiB,KAAK,OAAL,CAAa,GAA9B;AJolOF,AIllOE,aAAK,OAAL,CAAa,SAAb,CAAuB,OAAvB,IAAkC,QAAA,OAAlC;AJmlOF,AIllOE,aAAK,OAAL,CAAa,SAAb,CAAuB,OAAvB,IAAkC,QAAA,OAAlC;AJmlOF,AIhlOE,aAAK,MAAL,GACA;AJglOF,AI/kOG,iBAAI,EADL;AJilOF,AI/kOG,qBAAQ,OAFT;AJklOF,AI/kOG,qBAAQ;AJglOX,AInlOE,SADA;AJqlOF,AI/kOE,KAfD;AJ+lOD,AI9kOW,aAAA,SAAA,CAAA,UAAA,GAAV,YAAA;AJ+kOD,AI7kOE,aACE,gBADF,CACmB,QAAA,UAAA,CAAW,KAD9B,EACqC,KAAK,YAD1C,EACwD,IADxD,EAEE,gBAFF,CAEmB,QAAA,UAAA,CAAW,KAF9B,EAEqC,KAAK,YAF1C,EAEwD,IAFxD,EAGE,KAHF;AJ8kOF,AIzkOE,KAPS;AJilOX,AIxkOW,aAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,KAAvB,EAAwC;AJykOzC,AItkOE,YAAG,CAAC,CAAC,KAAK,WAAV,EAAuB;AJukOzB,AItkOG,iBAAK,WAAL,CAAiB,MAAjB;AJukOH,AItkOG;AJukOH,AItkOE,YAAG,KAAK,OAAR,EAAiB,QAAQ,GAAR,CAAY,oCAAZ,EAAkD,KAAK,OAAL,CAAa,SAAb,CAAuB,MAAM,IAA7B,CAAlD;AJukOnB,AItkOE,YAAG,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,SAAb,CAAuB,MAAM,IAA7B,CAAnB,EAAuD;AJukOzD,AItkOG,iBAAK,WAAL,GAAmB,IAAI,KAAK,OAAL,CAAa,SAAb,CAAuB,MAAM,IAA7B,CAAJ,CAAuC,KAAK,OAA5C,CAAnB;AJukOH,AItkOG,SAFD,MAEO;AJukOT,AItkOG,iBAAK,WAAL,GAAmB,IAAnB;AJukOH,AItkOG;AJukOH,AIrkOE,YAAG,CAAC,CAAC,KAAK,WAAP,IAAsB,KAAK,SAAL,CAAe,IAAxC,EAA8C,KAAK,SAAL,CAAe,UAAf,CAA0B,KAAK,WAA/B;AJskOhD,AIrkOE,KAdS;AJolOX,AIrkOW,aAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,IAAvB,EAAkC,IAAlC,EAA6C,IAA7C,EAAsD;AJskOvD,AIrkOE,gBAAQ,IAAR,CAAa,sCAAb;AJskOF,AIrkOE,KAFS;AJwkOX,AIrkOA,WAAA,QAAA;AJskOA,AIxnOA,CAAA,CAAsC,QAAA,MAAtC,CAAA;AJynhSA,IAAA,UAAA,QAAA,OAAA,CAAA;AAGA,IAAA,YAAA,UAAA,MAAA,EAAA;AAAuC,cAAA,SAAA,EAAA,MAAA;AAAvC,aAAA,SAAA,GAAA;;AAYC;AARU,cAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AAEC,aAAK,OAAL,GAAe,GAAf;AACA,aAAK,QAAL,GAAgB,oKAAhB;AAIA,KAPS;AAFF,eAAA,CAAP,QAAA,MAAO,CAAA,qBAAA,WAAA,QAAA;AAFY,gBAAS,WAAA,CAD7B,QAAA,QAAA,CAAS,0BAAT,EAAqC,WAArC,CAC6B,CAAA,EAAT,SAAS,CAAT;AAYrB,WAAA,SAAA;AAZA,CAAA,CAAuC,QAAA,IAAvC,CAAA;kBAAqrB,IAAA,UAAA,QAAA,OAAA,CAAA;AAGA,IAAA,QAAA,UAAA,MAAA,EAAA;AAAmC,cAAA,KAAA,EAAA,MAAA;AAAnC,aAAA,KAAA,GAAA;;AASC;AALU,UAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AAEC,aAAK,OAAL,GAAe,GAAf;AACA,aAAK,QAAL,GAAgB,QAAhB;AACA,KAJS;AAFF,eAAA,CAAP,QAAA,MAAO,CAAA,iBAAA,WAAA,QAAA;AAFY,YAAK,WAAA,CADzB,QAAA,QAAA,CAAS,0BAAT,EAAqC,OAArC,CACyB,CAAA,EAAL,KAAK,CAAL;AASrB,WAAA,KAAA;AATA,CAAA,CAAmC,QAAA,IAAnC,CAAA;kBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHrB,IAAA,UAAA,QAAA,OAAA,CAAA;AAGA,IAAA,QAAA,UAAA,MAAA,EAAA;AAAmC,cAAA,KAAA,EAAA,MAAA;AAAnC,aAAA,KAAA,GAAA;;AASC;AALU,UAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AAEC,aAAK,OAAL,GAAe,GAAf;AACA,aAAK,QAAL,GAAgB,QAAhB;AACA,KAJS;AAFF,eAAA,CAAP,QAAA,MAAO,CAAA,iBAAA,WAAA,QAAA;AAFY,YAAK,WAAA,CADzB,QAAA,QAAA,CAAS,0BAAT,EAAqC,OAArC,CACyB,CAAA,EAAL,KAAK,CAAL;AASrB,WAAA,KAAA;AATA,CAAA,CAAmC,QAAA,IAAnC,CAAA;kBAAqrB,IAAA,UAAA,QAAA,OAAA,CAAA;AAEA,IAAA,YAAA,QAAA,kBAAA,CAAA;AACA,IAAA,aAAA,QAAA,YAAA,CAAA;AAEA,IAAA,YAAA,UAAA,MAAA,EAAA;AAAuC,cAAA,SAAA,EAAA,MAAA;AAAvC,aAAA,SAAA,GAAA;;AAOC;AALU,cAAA,SAAA,CAAA,UAAA,GAAV,YAAA;AAEC,aAAK,YAAL,CAAkB,SAAlB,EAA6B,UAAA,OAA7B;AACA,aAAK,YAAL,CAAkB,UAAlB,EAA8B,WAAA,OAA9B,EAAwC,EAAC,SAAQ,IAAT,EAAxC;AACA,KAJS;AAKX,WAAA,SAAA;AAPA,CAAA,CAAuC,QAAA,OAAvcAAA,QAAA,kBAAA,CAAA;AACA,IAAA,cAAA,QAAA,kBAAA,CAAA;AACA,IAAA,eAAA,QAAA,mBAAA,CAAA;AAIA,IAAA,oBAAA,UAAA,MAAA,EAAA;AAA+C,cAAA,iBAAA,EAAA,MAAA;AAA/C,aAAA,iBAAA,GAAA;;AAsBC;AAlBU,sBAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AAEC,aAAK,SAAL,GAAiB,MAAM,0BAAN,CAAjB;AACA,aAAK,YAAL,GAAoB,YAAA,OAApB;AACA,KAJS;AAMA,sBAAA,SAAA,CAAA,UAAA,GAAV,YAAA;AAEC,gBAAQ,IAAR,CAAa,sDAAb;AACA,aAAK,QAAL,CAAc,OAAd,CAAsB,GAAtB;AAEA,aAAK,UAAL,CAEC,IAAI,aAAA,OAAJ,CAAe,KAAK,OAApB,CAFD,EAGC,IAAI,YAAA,OAAJ,CAAc,KAAK,OAAnB,CAHD;AAKA,KAVS;AARF,eAAA,CAAP,QAAA,MAAO,CAAA,6BAAA,YAAA,QAAA;AAFY,wBAAiB,WAAA,CADrC,QAAA,QAAA,CAAS,0BAAT,EAAqC,mBAArC,CACqC,CAAA,EAAjB,iBAAiB,CAAjB;AAsBrB,WAAA,iBAAA;AAtBA,CAAA,CAA+C,QAAA,WAA/C,CAAA;kBAAqrB,IAAA,UAAA,QAAA,OAAA,CAAA;AAEA,IAAA,UAAA,UAAA,MAAA,EAAA;AAAqC,cAAA,OAAA,EAAA,MAAA;AAArC,aAAA,OAAA,GAAA;AAAA,YAAA,QAAA,WAAA,IAAA,IAAA,OAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAEQ,cAAA,IAAA,GAAc,oBAAd;;AACP;AAAD,WAAA,OAAA;AAHA,CAAA,CAAqC,QAAA,IAAraAAA,UAAA,MAAA,EAAA;AAAwC,cAAA,UAAA,EAAA,MAAA;AAAxC,aAAA,UAAA,GAAA;;AAcC;AAVU,eAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AAEC,aAAK,OAAL,GAAe,IAAf;AACA,aAAK,QAAL,GAAgB,oCAAhB;AACA,KAJS;AAMH,eAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,IAAjB,EAA4B;AAE3B,eAAO,QAAQ,UAAf;AACA,KAHM;AARC,eAAA,CAAP,QAAA,MAAO,CAAA,sBAAA,WAAA,QAAA;AAFY,iBAAU,WAAA,CAD9B,QAAA,QAAA,CAAS,0BAAT,EAAqC,YAArC,CAC8B,CAAA,EAAV,UAAU,CAAV;AAcrB,WAAA,UAAA;AAdA,CAAA,CAAwC,QAAA,IAAxC,CAAA;kBAAqB","file":"TypeScriptExample.80785210.map","sourceRoot":"..\\src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(global, factory, undefined)\r\n{\r\n\tvar doc;\r\n\ttry { global = window; doc = document; } catch(e) {}\r\n\r\n    // AMD (recommended)\r\n    if (typeof define == 'function' && define.amd) \r\n\t{\r\n\t\tdefine('conbo', function()\r\n\t\t{\r\n\t\t\treturn factory(global, doc);\r\n\t\t});\r\n\t}\r\n\t// Common.js & Node.js\r\n\telse if (typeof module != 'undefined' && module.exports)\r\n\t{\r\n   \t\tmodule.exports = factory(global, doc);\r\n\t\texports[\"default\"] = module.exports;\r\n\t\texports.__esModule = true;\r\n    }\r\n\t// Global\r\n\telse\r\n\t{\r\n\t\tglobal.conbo = factory(global, doc);\r\n\t}\r\n\t\r\n})(this, function(window, document, undefined)\r\n{\r\n\t'use strict';\r\n\t\r\n/*! \r\n * ConboJS: Lightweight MVx application framework for JavaScript\r\n * http://conbo.mesmotronic.com/\r\n * \r\n * Copyright (c) 2017 Mesmotronic Limited\r\n * Released under the MIT license\r\n * http://www.mesmotronic.com/legal/mit\r\n */\r\n\r\n/**\r\n * @private\r\n */\r\nvar __namespaces = {};\r\n\r\n/**\r\n * ConboJS is a lightweight MVx application framework for JavaScript featuring \r\n * dependency injection, context and encapsulation, data binding, command \r\n * pattern and an event model which enables callback scoping and consistent \r\n * event handling\r\n * \r\n * All ConboJS classes, methods and properties live within the conbo namespace\r\n * \r\n * @namespace \tconbo\r\n */\r\n\r\n/**\r\n * Create or access a ConboJS namespace\r\n * \r\n * @variation\t2\r\n * @function\tconbo\r\n * @param\t\t{string}\tnamespace - The selected namespace\r\n * @param\t\t{...*}\t\t[globals] - Globals to minify followed by function to execute, with each of the globals as parameters\r\n * @returns\t\t{conbo.Namespace}\r\n * \t\t\t\r\n * @example\r\n * // Conbo can replace the standard minification pattern with modular namespace definitions\r\n * // If an Object is returned, its contents will be added to the namespace\r\n * conbo('com.example.namespace', window, document, conbo, function(window, document, conbo, undefined)\r\n * {\r\n *  // The executed function is scoped to the namespace\r\n * \tvar ns = this;\r\n * \t\r\n * \t// ... Your code here ...\r\n * \r\n * \t// Optionally, return an Object containing values to be added to the namespace\r\n *  return { MyApp, MyView };\r\n * });  \r\n * \r\n * @example\r\n * // Retrieve a namespace and import classes defined elsewhere\r\n * var ns = conbo('com.example.namespace');\r\n * ns.import({ MyApp, MyView });\r\n */\r\nvar conbo = function(namespace)\r\n{\r\n\tif (!namespace || !conbo.isString(namespace))\r\n\t{\r\n\t\tconbo.warn('First parameter must be the namespace string, received', namespace);\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (!__namespaces[namespace])\r\n\t{\r\n\t\t__namespaces[namespace] = new conbo.Namespace();\r\n\t}\r\n\t\r\n\tvar ns = __namespaces[namespace],\r\n\t\tparams = conbo.rest(arguments),\r\n\t\tfunc = params.pop()\r\n\t\t;\r\n\t\r\n\tif (conbo.isFunction(func))\r\n\t{\r\n\t\tvar obj = func.apply(ns, params);\r\n\t\t\r\n\t\tif (conbo.isObject(obj) && !conbo.isArray(obj))\r\n\t\t{\r\n\t\t\tns.import(obj);\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn ns;\r\n};\r\n\r\n/**\r\n * Internal reference to self for use with ES2015 import statements\r\n * \r\n * @memberof\tconbo\r\n * @type\t\t{conbo}\r\n * \r\n * @example \r\n * import { conbo } from 'conbo';\r\n */\r\nconbo.conbo = conbo;\r\n\r\n/**\r\n * The current ConboJS version number in the format major.minor.build\r\n * @memberof\tconbo\r\n * @type\t \t{string}\r\n */\r\nconbo.VERSION = '4.2.10';\r\n\t\r\n/**\r\n * A string containing the framework name and version number, e.g. \"ConboJS v1.2.3\"\r\n * @memberof\tconbo\r\n * @returns \t{string}\r\n */\r\nconbo.toString = function() \r\n{ \r\n\treturn 'ConboJS '+this.VERSION; \r\n};\r\n\r\n/**\r\n * Lightweight Promise polyfill based on promiscuous\r\n */\r\nif (!window.Promise)\r\n{\r\n\t(function(func, obj)\r\n\t{\r\n\t\tfunction is(type, item) { return (typeof item)[0] == type; }\r\n\r\n\t\tfunction Promise(callback, handler) \r\n\t\t{\r\n\t\t\thandler = function pendingHandler(resolved, rejected, value, queue, then, i) \r\n\t\t\t{\r\n\t\t\t\tqueue = pendingHandler.q;\r\n\r\n\t\t\t\tif (resolved != is) \r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise(function(resolve, reject)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tqueue.push({ p: this, r: resolve, j: reject, 1: resolved, 0: rejected });\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value && (is(func, value) | is(obj, value))) \r\n\t\t\t\t{\r\n\t\t\t\t\ttry { then = value.then; }\r\n\t\t\t\t\tcatch (reason) { rejected = 0; value = reason; }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (is(func, then)) \r\n\t\t\t\t{\r\n\t\t\t\t\ttry { then.call(value, transferState(1), rejected = transferState(0)); }\r\n\t\t\t\t\tcatch (reason) { rejected(reason); }\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\thandler = function(Resolved, Rejected) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (!is(func, (Resolved = rejected ? Resolved : Rejected))) return callback;\r\n\t\t\t\t\t\treturn Promise(function(resolve, reject) { finalize(this, resolve, reject, value, Resolved); });\r\n\t\t\t\t\t};\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\twhile (i < queue.length) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthen = queue[i++];\r\n\t\t\t\t\t\tif (!is(func, resolved = then[rejected])) (rejected ? then.r : then.j)(value);\r\n\t\t\t\t\t\telse finalize(then.p, then.r, then.j, value, resolved);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction transferState(resolved) \r\n\t\t\t\t{\r\n\t\t\t\t\treturn function(value) { then && (then = 0, pendingHandler(is, resolved, value)); };\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\thandler.q = [];\r\n\r\n\t\t\tcallback.call(callback = \r\n\t\t\t\t{\r\n\t\t\t\t\tthen: function(resolved, rejected)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn handler(resolved, rejected); \r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"catch\": function(rejected)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn handler(0, rejected); \r\n\t\t\t\t\t} \r\n\t\t\t\t},\r\n\t\t\t\tfunction(value)\r\n\t\t\t\t{\r\n\t\t\t\t\thandler(is, 1,\tvalue); \r\n\t\t\t\t},\r\n\t\t\t\tfunction(reason)\r\n\t\t\t\t{\r\n\t\t\t\t\thandler(is, 0, reason);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\treturn callback;\r\n\t\t}\r\n\r\n\t\tfunction finalize(promise, resolve, reject, value, transform) \r\n\t\t{\r\n\t\t\tsetImmediate(function()\r\n\t\t\t{\r\n\t\t\t\ttry \r\n\t\t\t\t{\r\n\t\t\t\t\tvalue = transform(value);\r\n\t\t\t\t\ttransform = value && (is(obj, value) | is(func, value)) && value.then;\r\n\t\t\t\t\tif (!is(func, transform)) resolve(value);\r\n\t\t\t\t\telse if (value == promise) reject(TypeError());\r\n\t\t\t\t\telse transform.call(value, resolve, reject);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error)\r\n\t\t\t\t{\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tPromise.resolve = ResolvedPromise;\r\n\t\t\r\n\t\tfunction ResolvedPromise(value)\r\n\t\t{\r\n\t\t\treturn Promise(function(resolve) { resolve(value); });\r\n\t\t}\r\n\r\n\t\tPromise.reject = function(reason)\r\n\t\t{\r\n\t\t\treturn Promise(function(resolve, reject) { reject(reason); }); \r\n\t\t};\r\n\r\n\t\tPromise.all = function(promises) \r\n\t\t{\r\n\t\t\treturn Promise(function(resolve, reject, count, values) \r\n\t\t\t{\r\n\t\t\t\tvalues = [];\r\n\t\t\t\tcount = promises.length || resolve(values);\r\n\t\t\t\tpromises.map(function(promise, index) \r\n\t\t\t\t{\r\n\t\t\t\t\tResolvedPromise(promise).then(\r\n\t\t\t\t\t\tfunction(value) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalues[index] = value;\r\n\t\t\t\t\t\t\t--count || resolve(values);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\treject);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tPromise.race = function(promises) \r\n\t\t{\r\n\t\t\treturn Promise(function(resolve, reject) \r\n\t\t\t{\r\n\t\t\t\tpromises.map(function(promise) \r\n\t\t\t\t{\r\n\t\t\t\t\tResolvedPromise(promise).then(resolve, reject);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\twindow.Promise = Promise;\r\n\r\n\t})('f', 'o');\r\n}\r\n\r\nconbo.Promise = window.Promise;\r\n\r\n/**\r\n * Constant for JSON content type\r\n * \r\n * @memberof\tconbo\r\n * @constant\r\n * @type\t\t{string}\r\n */\r\nconbo.CONTENT_TYPE_JSON = 'application/json';\r\n\r\n/**\r\n * Constant for form URL-encoded content type\r\n * \r\n * @memberof\tconbo\r\n * @constant\r\n * @type\t\t{string}\r\n */\r\nconbo.CONTENT_TYPE_FORM = 'application/x-www-form-urlencoded';\r\n\r\n/**\r\n * Constant for JSON data type\r\n * \r\n * @memberof\tconbo\r\n * @constant\r\n * @type\t\t{string}\r\n */\r\nconbo.DATA_TYPE_JSON = 'json';\r\n\r\n/**\r\n * Constant for script data type type\r\n * \r\n * @memberof\tconbo\r\n * @constant\r\n * @type\t\t{string}\r\n */\r\nconbo.DATA_TYPE_SCRIPT = 'script';\r\n\r\n/**\r\n * Constant for text data type type\r\n * \r\n * @memberof\tconbo\r\n * @constant\r\n * @type\t\t{string}\r\n */\r\nconbo.DATA_TYPE_TEXT = 'text';\r\n\r\n/*\r\n * Internal utility methods\r\n */\r\n\r\n/**\r\n * Dispatch a property change event from the specified object\r\n * @private\r\n */\r\nvar __dispatchChange = function(obj, propName)\r\n{\r\n\tif (!(obj instanceof conbo.EventDispatcher)) return this;\r\n\t\r\n\tvar options = {property:propName, value:obj[propName]};\r\n\t\r\n\tobj.dispatchEvent(new conbo.ConboEvent('change:'+propName, options));\r\n\tobj.dispatchEvent(new conbo.ConboEvent('change', options));\r\n\t\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Creates a property which can be bound to DOM elements and others\r\n * \r\n * @param\t{Object}\tobj\t- The EventDispatcher object on which the property will be defined\r\n * @param\t{string}\tpropName - The name of the property to be defined\r\n * @param\t{*}\t\t\tvalue - The default value of the property (optional)\r\n * @param\t{Function}\tgetter - The getter function (optional)\r\n * @param\t{Function}\tsetter - The setter function (optional)\r\n * @param\t{boolean}\t[enumerable=true] - Whether of not the property should be enumerable\r\n * @private\r\n */\r\nvar __defineProperty = function(obj, propName, value, getter, setter, enumerable)\r\n{\r\n\tif (conbo.isAccessor(obj, propName))\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tif (conbo.isUndefined(value))\r\n\t{\r\n\t\tvalue = obj[propName];\r\n\t}\r\n\t\r\n\tvar nogs = !getter && !setter;\r\n\t\r\n\tif (arguments.length < 6)\r\n\t{\r\n\t\tenumerable = propName.indexOf('_') !== 0;\r\n\t}\r\n\t\r\n\tif (nogs)\r\n\t{\r\n\t\tgetter = function()\r\n\t\t{\r\n\t\t\treturn value;\r\n\t\t};\r\n\t\r\n\t\tsetter = function(newValue)\r\n\t\t{\r\n\t\t\tif (!conbo.isEqual(newValue, value)) \r\n\t\t\t{\r\n\t\t\t\tvalue = newValue;\r\n\t\t\t\t__dispatchChange(this, propName);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tsetter.bindable = true;\r\n\t}\r\n\telse if (!!setter)\r\n\t{\r\n\t\tsetter = conbo.wrap(setter, function(fn, newValue)\r\n\t\t{\r\n\t\t\tfn.call(this, newValue);\r\n\t\t\t__dispatchChange(this, propName);\r\n\t\t});\r\n\t\t\r\n\t\tsetter.bindable = true;\r\n\t}\r\n\t\r\n\tObject.defineProperty(obj, propName, {enumerable:enumerable, configurable:true, get:getter, set:setter});\r\n\t\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Used by ConboJS to define private and internal properties (usually prefixed \r\n * with an underscore) that can't be enumerated\r\n * \r\n * @private\r\n */\r\nvar __definePrivateProperty = function(obj, propName, value)\r\n{\r\n\tif (arguments.length == 2)\r\n\t{\r\n\t\tvalue = obj[propName];\r\n\t}\r\n\t\r\n\tObject.defineProperty(obj, propName, {enumerable:false, configurable:true, writable:true, value:value});\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Define properties that can't be enumerated\r\n * @private\r\n */\r\nvar __definePrivateProperties = function(obj, values)\r\n{\r\n\tfor (var key in values)\r\n\t{\r\n\t\t__definePrivateProperty(obj, key, values[key]);\r\n\t}\r\n\t\r\n\treturn this;\r\n}\r\n\r\n/**\r\n * Convert enumerable properties of the specified object into non-enumerable ones\r\n * @private\r\n */\r\nvar __denumerate = function(obj)\r\n{\r\n\tvar regExp = arguments[1];\r\n\t\r\n\tvar keys = regExp instanceof RegExp\r\n\t\t? conbo.filter(conbo.keys(obj), function(key) { return regExp.test(key); })\r\n\t\t: (arguments.length > 1 ? conbo.rest(arguments) : conbo.keys(obj));\r\n\t\r\n\tkeys.forEach(function(key)\r\n\t{\r\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, key) \r\n\t\t\t|| {value:obj[key], configurable:true, writable:true};\r\n\t\t\r\n\t\tdescriptor.enumerable = false;\r\n\t\tObject.defineProperty(obj, key, descriptor);\r\n\t});\r\n\t\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Warn developers that the method they are using is deprecated\r\n * @private\r\n */\r\nvar __deprecated = function(message)\r\n{\r\n\tconbo.warn('Deprecation warning: '+message);\r\n};\r\n\r\n/**\r\n * Shortcut for new conbo.ElementProxy(el);\r\n * @private\r\n */\r\nvar __ep = function(el)\r\n{\r\n\treturn new conbo.ElementProxy(el);\r\n};\r\n\r\n/*\r\n * Utility methods: a modified subset of Underscore.js methods and loads of our own\r\n */\r\n\r\n// TODO Remove methods that are now available natively in all target browsers\r\n\r\n(function() \r\n{\r\n\t// Establish the object that gets returned to break out of a loop iteration.\r\n\tvar breaker = false;\r\n\r\n\t// Save bytes in the minified (but not gzipped) version:\r\n\tvar\r\n\t\tArrayProto = Array.prototype, \r\n\t\tObjProto = Object.prototype, \r\n\t\tFuncProto = Function.prototype\r\n\t\t;\r\n\r\n\t// Create quick reference variables for speed access to core prototypes.\r\n\tvar\r\n\t\tpush\t\t\t= ArrayProto.push,\r\n\t\tslice\t\t\t= ArrayProto.slice,\r\n\t\tconcat\t\t\t= ArrayProto.concat,\r\n\t\ttoString\t\t= ObjProto.toString,\r\n\t\thasOwnProperty\t= ObjProto.hasOwnProperty\r\n\t\t;\r\n\r\n\t// All ECMAScript 5 native function implementations that we hope to use\r\n\t// are declared here.\r\n\tvar\r\n\t\tnativeIndexOf\t\t= ArrayProto.indexOf,\r\n\t\tnativeLastIndexOf\t= ArrayProto.lastIndexOf,\r\n\t\tnativeMap\t\t\t= ArrayProto.map,\r\n\t\tnativeReduce\t\t= ArrayProto.reduce,\r\n\t\tnativeReduceRight\t= ArrayProto.reduceRight,\r\n\t\tnativeFilter\t\t= ArrayProto.filter,\r\n\t\tnativeEvery\t\t\t= ArrayProto.every,\r\n\t\tnativeSome\t\t\t= ArrayProto.some,\r\n\t\tnativeIsArray\t\t= Array.isArray,\r\n\t\tnativeKeys\t\t\t= Object.keys\r\n\t\t;\r\n\t\r\n\t// Collection Functions\r\n\t// --------------------\r\n\r\n\t/**\r\n\t * Handles objects, arrays, lists and raw objects using a for loop (because \r\n\t * tests show that a for loop can be twice as fast as a native forEach).\r\n\t * \r\n\t * Return `false` to break the loop.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\titerator - Iterator function with parameters: item, index, list\r\n\t * @param\t\t{Object}\t[scope] - The scope the iterator function should run in\r\n\t * @returns\t\t{void}\r\n\t */\r\n\t conbo.forEach = function(obj, iterator, scope) \r\n\t {\r\n\t\tif (obj == undefined) return;\r\n\t\t\r\n\t\tvar i, length;\r\n\t\t\r\n\t\tif (conbo.isIterable(obj)) \r\n\t\t{\r\n\t\t\tfor (i=0, length=obj.length; i<length; ++i) \r\n\t\t\t{\r\n\t\t\t\tif (iterator.call(scope, obj[i], i, obj) === breaker) return;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar keys = conbo.keys(obj);\r\n\t\t\t\r\n\t\t\tfor (i=0, length=keys.length; i<length; i++) \r\n\t\t\t{\r\n\t\t\t\tif (iterator.call(scope, obj[keys[i]], keys[i], obj) === breaker) return;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn obj;\r\n\t};\r\n\t\r\n\tvar forEach = conbo.forEach;\r\n\t\r\n\t/**\r\n\t * Return the results of applying the iterator to each element.\r\n\t * Delegates to native `map` if available.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @deprecated\tUse Array.prototype.map\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\titerator - Iterator function with parameters: item, index, list\r\n\t * @param\t\t{Object}\t[scope] - The scope the iterator function should run in\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.map = function(obj, iterator, scope) \r\n\t{\r\n\t\tvar results = [];\r\n\t\t\r\n\t\tif (obj == undefined) return results;\r\n\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, scope);\r\n\t\t\r\n\t\tforEach(obj, function(value, index, list) \r\n\t\t{\r\n\t\t\tresults.push(iterator.call(scope, value, index, list));\r\n\t\t});\r\n\t\t\r\n\t\treturn results;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns the index of the first instance of the specified item in the list\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @deprecated\tUse Array.prototype.indexOf\r\n\t * @param\t\t{Object}\tobj - The list to search\r\n\t * @param\t\t{Object}\titem - The value to find the index of\r\n\t * @returns\t\t{number}\r\n\t */\r\n\tconbo.indexOf = function(obj, item)\r\n\t{\r\n\t\treturn nativeIndexOf.call(obj, item);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns the index of the last instance of the specified item in the list\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @deprecated\tUse Array.prototype.lastIndexOf\r\n\t * @param\t\t{Object}\tobj - The list to search\r\n\t * @param\t\t{Object}\titem - The value to find the index of\r\n\t * @returns\t\t{number}\r\n\t */\r\n\tconbo.lastIndexOf = function(obj, item)\r\n\t{\r\n\t\treturn nativeLastIndexOf.call(obj, item);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return the first value which passes a truth test\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\tpredicate - Function that tests each value, returning true or false\r\n\t * @param\t\t{Object}\t[scope] - The scope the predicate function should run in\r\n\t * @returns\t\t{*}\r\n\t */\r\n\tconbo.find = function(obj, predicate, scope) \r\n\t{\r\n\t\tvar result;\r\n\t\t\r\n\t\tconbo.some(obj, function(value, index, list) \r\n\t\t{\r\n\t\t\tif (predicate.call(scope, value, index, list)) \r\n\t\t\t{\r\n\t\t\t\tresult = value;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn result;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return the index of the first value which passes a truth test\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\tpredicate - Function that tests each value, returning true or false\r\n\t * @param\t\t{Object}\t[scope] - The scope the predicate function should run in\r\n\t * @returns\t\t{number}\r\n\t */\r\n\tconbo.findIndex = function(obj, predicate, scope) \r\n\t{\r\n\t\tvar value = conbo.find(obj, predicate, scope);\r\n\t\treturn obj.indexOf(value);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return all the elements that pass a truth test.\r\n\t * Delegates to native `filter` if available.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @deprecated\tUse Array.prototype.filter\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\tpredicate - Function that tests each value, returning true or false\r\n\t * @param\t\t{Object}\t[scope] - The scope the predicate function should run in\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.filter = function(obj, predicate, scope) \r\n\t{\r\n\t\tvar results = [];\r\n\t\t\r\n\t\tif (obj == undefined) return results;\r\n\t\tif (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, scope);\r\n\t\t\r\n\t\tforEach(obj, function(value, index, list) \r\n\t\t{\r\n\t\t\tif (predicate.call(scope, value, index, list)) results.push(value);\r\n\t\t});\r\n\t\t\r\n\t\treturn results;\r\n\t};\r\n\r\n\t/**\r\n\t * Return all the elements for which a truth test fails.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\tpredicate - Function that tests each value, returning true or false\r\n\t * @param\t\t{Object}\t[scope] - The scope the predicate function should run in\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.reject = function(obj, predicate, scope) \r\n\t{\r\n\t\treturn conbo.filter(obj, function(value, index, list) \r\n\t\t{\r\n\t\t\treturn !predicate.call(scope, value, index, list);\r\n\t\t},\r\n\t\tscope);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Determine whether all of the elements match a truth test.\r\n\t * Delegates to native `every` if available.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @deprecated\tUse Array.prototype.every\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\tpredicate - Function that tests each value, returning true or false\r\n\t * @param\t\t{Object}\t[scope] - The scope the predicate function should run in\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.every = function(obj, predicate, scope) \r\n\t{\r\n\t\tpredicate || (predicate = conbo.identity);\r\n\t\t\r\n\t\tvar result = true;\r\n\t\t\r\n\t\tif (obj == undefined) return result;\r\n\t\tif (nativeEvery && obj.every === nativeEvery) return obj.every(predicate, scope);\r\n\t\t\r\n\t\tforEach(obj, function(value, index, list) \r\n\t\t{\r\n\t\t\tif (!(result = result && predicate.call(scope, value, index, list))) return breaker;\r\n\t\t});\r\n\t\t\r\n\t\treturn !!result;\r\n\t};\r\n\r\n\t/**\r\n\t * Determine if at least one element in the object matches a truth test.\r\n\t * Delegates to native `some` if available.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @deprecated\tUse Array.prototype.some\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\tpredicate - Function that tests each value, returning true or false\r\n\t * @param\t\t{Object}\t[scope] - The scope the predicate function should run in\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.some = function(obj, predicate, scope) \r\n\t{\r\n\t\tpredicate || (predicate = conbo.identity);\r\n\t\tvar result = false;\r\n\t\tif (obj == undefined) return result;\r\n\t\tif (nativeSome && obj.some === nativeSome) return obj.some(predicate, scope);\r\n\t\tforEach(obj, function(value, index, list) {\r\n\t\t\tif (result || (result = predicate.call(scope, value, index, list))) return breaker;\r\n\t\t});\r\n\t\treturn !!result;\r\n\t};\r\n\t\r\n\tvar some = conbo.some;\r\n\t\r\n\t/**\r\n\t * Determine if the array or object contains a given value (using `===`).\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\ttarget - The value to match\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.contains = function(obj, target) \r\n\t{\r\n\t\tif (obj == undefined) return false;\r\n\t\treturn obj.indexOf(target) != -1;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoke a method (with arguments) on every item in a collection.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\tmethod - Function to invoke on every item\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.invoke = function(obj, method) \r\n\t{\r\n\t\tvar args = slice.call(arguments, 2);\r\n\t\tvar isFunc = conbo.isFunction(method);\r\n\t\t\r\n\t\treturn conbo.map(obj, function(value) \r\n\t\t{\r\n\t\t\treturn (isFunc ? method : value[method]).apply(value, args);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * Convenience version of a common use case of `map`: fetching a property.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Array of Objects\r\n\t * @param\t\t{string}\tkey - Property name\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.pluck = function(obj, key) \r\n\t{\r\n\t\treturn conbo.map(obj, conbo.property(key));\r\n\t};\r\n\r\n\t/**\r\n\t * Return the maximum element or (element-based computation).\r\n\t * Can't optimize arrays of integers longer than 65,535 elements.\r\n\t * \r\n\t * @see https://bugs.webkit.org/show_bug.cgi?id=80797\r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\t[iterator] - Function that tests each value\r\n\t * @param\t\t{Object}\t[scope] - The scope the iterator function should run in\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.max = function(obj, iterator, scope) \r\n\t{\r\n\t\tif (!iterator && conbo.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) \r\n\t\t{\r\n\t\t\treturn Math.max.apply(Math, obj);\r\n\t\t}\r\n\t\t\r\n\t\tvar result = -Infinity, lastComputed = -Infinity;\r\n\t\t\r\n\t\tforEach(obj, function(value, index, list) \r\n\t\t{\r\n\t\t\tvar computed = iterator ? iterator.call(scope, value, index, list) : value;\r\n\t\t\tif (computed > lastComputed) {\r\n\t\t\t\tresult = value;\r\n\t\t\t\tlastComputed = computed;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * Return the minimum element (or element-based computation).\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to iterate\r\n\t * @param\t\t{Function}\t[iterator] - Function that tests each value\r\n\t * @param\t\t{Object}\t[scope] - The scope the iterator function should run in\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.min = function(obj, iterator, scope) \r\n\t{\r\n\t\tif (!iterator && conbo.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\r\n\t\t\treturn Math.min.apply(Math, obj);\r\n\t\t}\r\n\t\t\r\n\t\tvar result = Infinity, lastComputed = Infinity;\r\n\t\t\r\n\t\tforEach(obj, function(value, index, list) \r\n\t\t{\r\n\t\t\tvar computed = iterator ? iterator.call(scope, value, index, list) : value;\r\n\t\t\t\r\n\t\t\tif (computed < lastComputed) \r\n\t\t\t{\r\n\t\t\t\tresult = value;\r\n\t\t\t\tlastComputed = computed;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * Shuffle an array, using the modern version of the Fisher-Yates shuffle\r\n\t * @see http://en.wikipedia.org/wiki/Fisher–Yates_shuffle\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The list to shuffle\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.shuffle = function(obj) \r\n\t{\r\n\t\tvar rand;\r\n\t\tvar index = 0;\r\n\t\tvar shuffled = [];\r\n\t\t\r\n\t\tforEach(obj, function(value) \r\n\t\t{\r\n\t\t\trand = conbo.random(index++);\r\n\t\t\tshuffled[index - 1] = shuffled[rand];\r\n\t\t\tshuffled[rand] = value;\r\n\t\t});\r\n\t\t\r\n\t\treturn shuffled;\r\n\t};\r\n\r\n\t/**\r\n\t * An internal function to generate lookup iterators.\r\n\t * @private\r\n\t */\r\n\tvar lookupIterator = function(value) \r\n\t{\r\n\t\tif (value == undefined) return conbo.identity;\r\n\t\tif (conbo.isFunction(value)) return value;\r\n\t\treturn conbo.property(value);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Convert anything iterable into an Array\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to convert into an Array \r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.toArray = function(obj) \r\n\t{\r\n\t\tif (!obj) return [];\r\n\t\tif (conbo.isArray(obj)) return slice.call(obj);\r\n\t\tif (conbo.isIterable(obj)) return conbo.map(obj, conbo.identity);\r\n\t\treturn conbo.values(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return the number of elements in an object.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to count the keys of\r\n\t * @returns\t\t{number}\r\n\t */\r\n\tconbo.size = function(obj) \r\n\t{\r\n\t\tif (!obj) return 0;\r\n\t\t\r\n\t\treturn conbo.isIterable(obj)\r\n\t\t\t? obj.length \r\n\t\t\t: conbo.keys(obj).length;\r\n\t};\r\n\t\r\n\t// Array Functions\r\n\t// ---------------\r\n\r\n\t/**\r\n\t * Get the last element of an array. Passing n will return the last N\r\n\t * values in the array. The guard check allows it to work with `conbo.map`.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The array to slice\r\n\t * @param\t\t{Function}\tn - The number of elements to return (default: 1)\r\n\t * @param\t\t{Object}\t[guard] - Optional\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.last = function(array, n, guard) \r\n\t{\r\n\t\tif (array == undefined) return undefined;\r\n\t\tif (n == undefined || guard) return array[array.length - 1];\r\n\t\treturn slice.call(array, Math.max(array.length - n, 0));\r\n\t};\r\n\r\n\t/**\r\n\t * Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\r\n\t * Especially useful on the arguments object. Passing an n will return\r\n\t * the rest N values in the array. The guard\r\n\t * check allows it to work with `conbo.map`.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The array to slice\r\n\t * @param\t\t{Function}\tn - The number of elements to return (default: 1)\r\n\t * @param\t\t{Object}\t[guard] - Optional\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.rest = function(array, n, guard) \r\n\t{\r\n\t\treturn slice.call(array, (n == undefined) || guard ? 1 : n);\r\n\t};\r\n\r\n\t/**\r\n\t * Trim out all falsy values from an array.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The array to trim\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.compact = function(array) \r\n\t{\r\n\t\treturn conbo.filter(array, conbo.identity);\r\n\t};\r\n\r\n\t/**\r\n\t * Internal implementation of a recursive `flatten` function.\r\n\t * @private\r\n\t */\r\n\tvar flatten = function(input, shallow, output) \r\n\t{\r\n\t\tif (shallow && conbo.every(input, conbo.isArray)) \r\n\t\t{\r\n\t\t\treturn concat.apply(output, input);\r\n\t\t}\r\n\t\t\r\n\t\tforEach(input, function(value) \r\n\t\t{\r\n\t\t\tif (conbo.isArray(value) || conbo.isArguments(value)) \r\n\t\t\t{\r\n\t\t\t\tshallow ? push.apply(output, value) : flatten(value, shallow, output);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\toutput.push(value);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn output;\r\n\t};\r\n\r\n\t/**\r\n\t * Flatten out an array, either recursively (by default), or just one level.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The array to flatten\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.flatten = function(array, shallow) \r\n\t{\r\n\t\treturn flatten(array, shallow, []);\r\n\t};\r\n\r\n\t/**\r\n\t * Return a version of the array that does not contain the specified value(s).\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The array to remove the specified values from\r\n\t * @param\t\t{...*}\t\tItems to remove from the array\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.without = function(array) \r\n\t{\r\n\t\treturn conbo.difference(array, slice.call(arguments, 1));\r\n\t};\r\n\r\n\t/**\r\n\t * Split an array into two arrays: one whose elements all satisfy the given\r\n\t * predicate, and one whose elements all do not satisfy the predicate.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The array to split\r\n\t * @param\t\t{Function}\tpredicate - Function to determine a match, returning true or false\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.partition = function(array, predicate) \r\n\t{\r\n\t\tvar pass = [], fail = [];\r\n\t\t\r\n\t\tforEach(array, function(elem) \r\n\t\t{\r\n\t\t\t(predicate(elem) ? pass : fail).push(elem);\r\n\t\t});\r\n\t\t\r\n\t\treturn [pass, fail];\r\n\t};\r\n\r\n\t/**\r\n\t * Produce a duplicate-free version of the array. If the array has already\r\n\t * been sorted, you have the option of using a faster algorithm.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The array to filter\r\n\t * @param\t\t{boolean}\tisSorted - Should the returned array be sorted?\r\n\t * @param\t\t{Object}\titerator - Iterator function\r\n\t * @param\t\t{Object}\t[scope] - The scope the iterator function should run in\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.uniq = function(array, isSorted, iterator, scope) \r\n\t{\r\n\t\tif (conbo.isFunction(isSorted)) \r\n\t\t{\r\n\t\t\tscope = iterator;\r\n\t\t\titerator = isSorted;\r\n\t\t\tisSorted = false;\r\n\t\t}\r\n\t\t\r\n\t\tvar initial = iterator ? conbo.map(array, iterator, scope) : array;\r\n\t\tvar results = [];\r\n\t\tvar seen = [];\r\n\t\t\r\n\t\tforEach(initial, function(value, index) \r\n\t\t{\r\n\t\t\tif (isSorted ? (!index || seen[seen.length - 1] !== value) : !conbo.contains(seen, value)) \r\n\t\t\t{\r\n\t\t\t\tseen.push(value);\r\n\t\t\t\tresults.push(array[index]);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn results;\r\n\t};\r\n\r\n\t/**\r\n\t * Produce an array that contains the union: each distinct element from all of\r\n\t * the passed-in arrays.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{...array}\tarray - Arrays to merge\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.union = function() \r\n\t{\r\n\t\treturn conbo.uniq(conbo.flatten(arguments, true));\r\n\t};\r\n\r\n\t/**\r\n\t * Produce an array that contains every item shared between all the\r\n\t * passed-in arrays.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{...Array}\tarray - Arrays of values\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.intersection = function(array) \r\n\t{\r\n\t\tvar rest = slice.call(arguments, 1);\r\n\t\t\r\n\t\treturn conbo.filter(conbo.uniq(array), function(item) \r\n\t\t{\r\n\t\t\treturn conbo.every(rest, function(other) \r\n\t\t\t{\r\n\t\t\t\treturn conbo.contains(other, item);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Take the difference between one array and a number of other arrays.\r\n\t * Only the elements present in just the first array will remain.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{...array}\tarray - Arrays of compare\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.difference = function(array) \r\n\t{\r\n\t\tvar rest = concat.apply(ArrayProto, slice.call(arguments, 1));\r\n\t\treturn conbo.filter(array, function(value){ return !conbo.contains(rest, value); });\r\n\t};\r\n\r\n\t/**\r\n\t * Converts lists into objects. Pass either a single array of `[key, value]`\r\n\t * pairs, or two parallel arrays of the same length -- one of keys, and one of\r\n\t * the corresponding values.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tlist - List of keys\r\n\t * @param\t\t{Object}\tvalues - List of values\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.object = function(list, values) \r\n\t{\r\n\t\tif (list == undefined) return {};\r\n\t\t\r\n\t\tvar result = {};\r\n\t\t\r\n\t\tfor (var i = 0, length = list.length; i < length; i++) \r\n\t\t{\r\n\t\t\tif (values) \r\n\t\t\t{\r\n\t\t\t\tresult[list[i]] = values[i];\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tresult[list[i][0]] = list[i][1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generate an integer Array containing an arithmetic progression. A port of\r\n\t * the native Python `range()` function.\r\n\t * \r\n\t * @see \t\thttp://docs.python.org/library/functions.html#range\r\n\t * @memberof\tconbo\r\n\t * @param\t\t{number}\tstart - Start\r\n\t * @param\t\t{number}\tstop - Stop\r\n\t * @param\t\t{number}\tstop - Step\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.range = function(start, stop, step) \r\n\t{\r\n\t\tif (arguments.length <= 1) \r\n\t\t{\r\n\t\t\tstop = start || 0;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\tstep = arguments[2] || 1;\r\n\r\n\t\tvar length = Math.max(Math.ceil((stop - start) / step), 0);\r\n\t\tvar idx = 0;\r\n\t\tvar range = new Array(length);\r\n\r\n\t\twhile(idx < length) \r\n\t\t{\r\n\t\t\trange[idx++] = start;\r\n\t\t\tstart += step;\r\n\t\t}\r\n\r\n\t\treturn range;\r\n\t};\r\n\r\n\t// Function (ahem) Functions\r\n\t// ------------------\r\n\r\n\t// Reusable constructor function for prototype setting.\r\n\tvar ctor = function(){};\r\n\r\n\t/**\r\n\t * Bind one or more of an object's methods to that object. Remaining arguments\r\n\t * are the method names to be bound. If no additional arguments are passed,\r\n\t * all of the objects methods that are not native or accessors are bound to it.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to bind methods to\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.bindAll = function(obj)\r\n\t{\r\n\t\tvar funcs;\r\n\t\t\r\n\t\tif (arguments.length > 1)\r\n\t\t{\r\n\t\t\tfuncs = conbo.rest(arguments);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfuncs = conbo.filter(conbo.getFunctionNames(obj, true), function(func)\r\n\t\t\t{\r\n\t\t\t\treturn !conbo.isNative(obj[func]);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tfuncs.forEach(function(func)\r\n\t\t{\r\n\t\t\tobj[func] = obj[func].bind(obj);\r\n\t\t});\r\n\t\t\r\n\t\treturn obj;\r\n\t};\r\n\r\n\t/**\r\n\t * Partially apply a function by creating a version that has had some of its\r\n\t * arguments pre-filled, without changing its dynamic `this` scope.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Function}\tfunc - Method to partially pre-fill\r\n\t * @param\t\t{...*}\t\targs - Arguments to pass to specified method\r\n\t * @returns\t\t{Function}\r\n\t */\r\n\tconbo.partial = function(func) \r\n\t{\r\n\t\tvar boundArgs = slice.call(arguments, 1);\r\n\t\t\r\n\t\treturn function() \r\n\t\t{\r\n\t\t\tvar position = 0;\r\n\t\t\tvar args = boundArgs.slice();\r\n\t\t\t\r\n\t\t\tfor (var i = 0, length = args.length; i < length; i++) \r\n\t\t\t{\r\n\t\t\t\tif (args[i] === conbo) args[i] = arguments[position++];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile (position < arguments.length) args.push(arguments[position++]);\r\n\t\t\treturn func.apply(this, args);\r\n\t\t};\r\n\t};\t\r\n\t\r\n\tvar ready__domContentLoaded = !document || ['complete', 'loaded'].indexOf(document.readyState) != -1;\r\n\t\r\n\t/**\r\n\t * Calls the specified function as soon as the DOM is ready, if it is not already,\r\n\t * otherwise call it at the end of the current callstack\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Function}\tfunc - The function to call\r\n\t * @param\t\t{Object}\t[scope] - The scope in which to run the specified function\r\n\t * @returns\t\t{conbo}\r\n\t */\r\n\tconbo.ready = function(func, scope)\r\n\t{\r\n\t\tvar args = conbo.toArray(arguments);\r\n\t\t\r\n\t\tvar readyHandler = function()\r\n\t\t{\r\n\t\t\tif (document)\r\n\t\t\t{\r\n\t\t\t\tdocument.removeEventListener('DOMContentLoaded', readyHandler);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tready__domContentLoaded = true;\r\n\t\t\tconbo.defer.apply(conbo, args);\r\n\t\t};\r\n\t\t\r\n\t\tready__domContentLoaded\r\n\t\t\t? readyHandler()\r\n\t\t\t: document.addEventListener('DOMContentLoaded', readyHandler);\r\n\t\t\t\r\n\t\treturn conbo;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Defers a function, scheduling it to run after the current call stack has\r\n\t * cleared.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Function}\tfunc - Function to call\r\n\t * @param\t\t{Object}\t[scope] - The scope in which to call the function\r\n\t * @returns\t\t{number}\tID that can be used with clearInterval\r\n\t */\r\n\tconbo.defer = function(func, scope) \r\n\t{\r\n\t\tif (scope)\r\n\t\t{\r\n\t\t\tfunc = func.bind(scope);\r\n\t\t}\r\n\t\t\r\n\t\treturn setTimeout.apply(undefined, [func, 0].concat(conbo.rest(arguments, 2)));\r\n\t};\r\n\r\n\tvar callLater__tasks = [];\r\n\t\r\n\tvar callLater__run = function()\r\n\t{\r\n\t\tvar task;\r\n\t\t\r\n\t\twhile (task = callLater__tasks.shift()) \r\n\t\t{\r\n\t\t\ttask();\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * Calls a function at the start of the next animation frame, useful when \r\n\t * updating multiple elements in the DOM\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Function}\tfunc - Function to call\r\n\t * @param\t\t{Object}\t[scope] - The scope in which to call the function\r\n\t * @returns\t\t{conbo}\r\n\t */\r\n\tconbo.callLater = function(func, scope)\r\n\t{\r\n\t\tif (callLater__run.length === 0)\r\n\t\t{\r\n\t\t\twindow.requestAnimationFrame(callLater__run);\r\n\t\t}\r\n\t\t\r\n\t\tvar task = function()\r\n\t\t{\r\n\t\t\tfunc.apply(scope, conbo.rest(arguments, 2));\r\n\t\t}\r\n\t\t\r\n\t\tcallLater__tasks.push(task);\r\n\t\t\r\n\t\treturn conbo;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns a function that will be executed at most one time, no matter how\r\n\t * often you call it. Useful for lazy initialization.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Function}\tfunc - Function to call\r\n\t * @returns\t\t{Function}\r\n\t */\r\n\tconbo.once = function(func) \r\n\t{\r\n\t\tvar ran = false, memo;\r\n\t\t\r\n\t\treturn function() \r\n\t\t{\r\n\t\t\tif (ran) return memo;\r\n\t\t\tran = true;\r\n\t\t\tmemo = func.apply(this, arguments);\r\n\t\t\tfunc = undefined;\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the first function passed as an argument to the second,\r\n\t * allowing you to adjust arguments, run code before and after, and\r\n\t * conditionally execute the original function.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Function}\tfunc - Function to wrap\r\n\t * @param\t\t{Function}\twrapper - Function to call\r\n\t * @returns\t\t{Function}\r\n\t */\r\n\tconbo.wrap = function(func, wrapper) \r\n\t{\r\n\t\treturn conbo.partial(wrapper, func);\r\n\t};\r\n\t\r\n\t// Object Functions\r\n\t// ----------------\r\n\r\n\t/**\r\n\t * Extends Object.keys to retrieve the names of an object's \r\n\t * enumerable properties\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to get keys from\r\n\t * @param\t\t{boolean}\t[deep] - Retrieve keys from further up the prototype chain?\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.keys = function(obj, deep)\r\n\t{\r\n\t\tif (!obj) return [];\r\n\t\t\r\n\t\tif (deep)\r\n\t\t{\r\n\t\t\tvar keys = [];\r\n\t\t\tfor (var key in obj) { keys.push(key); }\r\n\t\t\treturn keys;\r\n\t\t}\r\n\t\t\r\n\t\treturn nativeKeys(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Extends Object.keys to retrieve the names of an object's \r\n\t * enumerable functions\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see\t\t\t#keys\r\n\t * @param\t\t{Object}\tobj - Object to get keys from\r\n\t * @param\t\t{boolean}\t[deep] - Retrieve keys from further up the prototype chain?\r\n\t * @param\t\t{boolean}\tincludeAccessors - Whether or not to include accessors that contain functions (default: false)\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.functions = function(obj, deep, includeAccessors)\r\n\t{\r\n\t\treturn conbo.filter(conbo.keys(obj, deep), function(name) \r\n\t\t{\r\n\t\t\treturn includeAccessors ? conbo.isFunction(obj[name]) : conbo.isFunc(obj, name);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * Extends Object.keys to retrieve the names of an object's enumerable \r\n\t * variables\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see\t\t\t#keys\r\n\t * @param\t\t{Object}\tobj - Object to get keys from\r\n\t * @param\t\t{boolean}\t[deep] - Retrieve keys from further up the prototype chain?\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.variables = function(obj, deep)\r\n\t{\r\n\t\treturn conbo.difference(conbo.keys(obj, deep), conbo.functions(obj, deep));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Extends Object.getOwnPropertyNames to retrieve the names of every \r\n\t * property of an object, regardless of whether it's enumerable or \r\n\t * unenumerable\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to get keys from\r\n\t * @param\t\t{boolean}\t[deep] - Retrieve keys from further up the prototype chain?\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.getPropertyNames = function(obj, deep)\r\n\t{\r\n\t\tif (!obj) return [];\r\n\t\t\r\n\t\tif (deep)\r\n\t\t{\r\n\t\t\tvar names = [];\r\n\t\t\tdo { names = names.concat(Object.getOwnPropertyNames(obj)); }\r\n\t\t\twhile (obj = Object.getPrototypeOf(obj));\r\n\t\t\treturn conbo.uniq(names);\r\n\t\t}\r\n\t\t\r\n\t\treturn Object.getOwnPropertyNames(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Extends Object.getOwnPropertyNames to retrieves the names of every \r\n\t * function of an object, regardless of whether it's enumerable or \r\n\t * unenumerable\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see\t\t\t#getPropertyNames\r\n\t * @param\t\t{Object}\tobj - Object to get keys from\r\n\t * @param\t\t{boolean}\t[deep] - Retrieve keys from further up the prototype chain?\r\n\t * @param\t\t{boolean}\tincludeAccessors - Whether or not to include accessors that contain functions (default: false)\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.getFunctionNames = function(obj, deep, includeAccessors)\r\n\t{\r\n\t\treturn conbo.filter(conbo.getPropertyNames(obj, deep), function(name) \r\n\t\t{\r\n\t\t\treturn includeAccessors ? conbo.isFunction(obj[name]) : conbo.isFunc(obj, name);\r\n\t\t});\r\n\t},\r\n\t\r\n\t/**\r\n\t * Extends Object.getOwnPropertyNames to retrieves the names of every \r\n\t * variable of an object, regardless of whether it's enumerable or \r\n\t * unenumerable\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see\t\t\t#getPropertyNames\r\n\t * @param\t\t{Object}\tobj - Object to get keys from\r\n\t * @param\t\t{boolean}\t[deep] - Retrieve keys from further up the prototype chain?\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.getVariableNames = function(obj, deep)\r\n\t{\r\n\t\treturn conbo.difference(conbo.getPropertyNames(obj, deep), conbo.getFunctionNames(obj, deep));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Extends Object.getOwnPropertyDescriptor to return a property descriptor \r\n\t * for a property of a given object, regardless of where it is in the \r\n\t * prototype chain\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object containing the property\r\n\t * @param\t\t{string}\tpropName - Name of the property\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.getPropertyDescriptor = function(obj, propName)\r\n\t{\r\n\t\tif (!obj) return;\r\n\t\t\r\n\t\tdo\r\n\t\t{\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, propName);\r\n\t\t\tif (descriptor) return descriptor;\r\n\t\t}\r\n\t\twhile (obj = Object.getPrototypeOf(obj))\r\n\t};\r\n\t\r\n\t/**\r\n\t * Retrieve the values of an object's enumerable properties, optionally \r\n\t * including values further up the prototype chain\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to get values from\r\n\t * @param\t\t{boolean}\t[deep] - Retrieve keys from further up the prototype chain?\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.values = function(obj, deep) \r\n\t{\r\n\t\tvar keys = conbo.keys(obj, deep);\r\n\t\tvar length = keys.length;\r\n\t\tvar values = new Array(length);\r\n\t\t\r\n\t\tfor (var i=0; i<length; i++)\r\n\t\t{\r\n\t\t\tvalues[i] = obj[keys[i]];\r\n\t\t}\r\n\t\t\r\n\t\treturn values;\r\n\t};\r\n\r\n\t/**\r\n\t * Define the values of the given object by cloning all of the properties \r\n\t * of the passed-in object(s), destroying and overwriting the target's \r\n\t * property descriptors and values in the process\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to define properties on\r\n\t * @param\t\t{...*}\t\tsource - Objects containing properties to define \r\n\t * @returns\t\t{Object}\r\n\t * @see\t\t\tconbo.setValues\r\n\t */\r\n\tconbo.defineValues = function(target, source) \r\n\t{\r\n\t\tforEach(slice.call(arguments, 1), function(source) \r\n\t\t{\r\n\t\t\tif (!source) return;\r\n\t\t\t\r\n\t\t\tfor (var propName in source) \r\n\t\t\t{\r\n\t\t\t\tconbo.cloneProperty(source, propName, target);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn target;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Define bindable values on the given object using the property names and\r\n\t * of the passed-in object(s), destroying and overwriting the target's \r\n\t * property descriptors and values in the process\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to define properties on\r\n\t * @param\t\t{...*}\t\tsource - Objects containing properties to defined\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.defineBindableValues = function(target, source) \r\n\t{\r\n\t\tforEach(slice.call(arguments, 1), function(source) \r\n\t\t{\r\n\t\t\tif (!source) return;\r\n\t\t\t\r\n\t\t\tfor (var propName in source) \r\n\t\t\t{\r\n\t\t\t\tdelete target[propName];\r\n\t\t\t\t__defineProperty(target, propName, source[propName]);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn target;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return a copy of the object only containing the whitelisted properties.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Objects to copy properties from\r\n\t * @param\t\t{...string}\tpropName - Property names to copy \r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.pick = function(obj) \r\n\t{\r\n\t\tvar copy = {};\r\n\t\tvar keys = concat.apply(ArrayProto, slice.call(arguments, 1));\r\n\t\t\r\n\t\tforEach(keys, function(key) \r\n\t\t{\r\n\t\t\tif (key in obj)\r\n\t\t\t{\r\n\t\t\t\tconbo.cloneProperty(obj, key, copy);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn copy;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return a copy of the object without the blacklisted properties.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to copy\r\n\t * @param\t\t{...string}\tpropNames - Names of properties to omit\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.omit = function(obj) \r\n\t{\r\n\t\tvar copy = {};\r\n\t\tvar keys = concat.apply(ArrayProto, slice.call(arguments, 1));\r\n\t\t\r\n\t\tfor (var key in obj) \r\n\t\t{\r\n\t\t\tif (!conbo.contains(keys, key))\r\n\t\t\t{\r\n\t\t\t\tconbo.cloneProperty(obj, key, copy);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn copy;\r\n\t};\r\n\r\n\t/**\r\n\t * Fill in an object's missing properties by cloning the properties of the \r\n\t * source object(s) onto the target object, overwriting the target's\r\n\t * property descriptors\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\ttarget - Object to populate\r\n\t * @param\t\t{...Object}\tobj - Objects containing default values\r\n\t * @returns\t\t{Object}\r\n\t * @see\t\t\tconbo.setDefaults\r\n\t */\r\n\tconbo.defineDefaults = function(target) \r\n\t{\r\n\t\tforEach(slice.call(arguments, 1), function(source) \r\n\t\t{\r\n\t\t\tif (source) \r\n\t\t\t{\r\n\t\t\t\tfor (var propName in source) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (target[propName] !== undefined) continue;\r\n\t\t\t\t\tconbo.cloneProperty(source, propName, target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn target;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Fill in missing values on an object by setting the property values on \r\n\t * the target object, without affecting the target's property descriptors\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to populate\r\n\t * @param\t\t{...Object}\tsource - Objects containging default values\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.setDefaults = function(obj) \r\n\t{\r\n\t\tforEach(slice.call(arguments, 1), function(source) \r\n\t\t{\r\n\t\t\tif (source) \r\n\t\t\t{\r\n\t\t\t\tfor (var propName in source) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (obj[propName] !== undefined) continue;\r\n\t\t\t\t\tobj[propName] = source[propName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn obj;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Create a (shallow-cloned) duplicate of an object.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Object to clone\r\n\t * @returns\t\t{Object}\r\n\t */\r\n\tconbo.clone = function(obj) \r\n\t{\r\n\t\tif (!conbo.isObject(obj)) return obj;\r\n\t\treturn conbo.isArray(obj) ? obj.slice() : conbo.defineValues({}, obj);\r\n\t};\r\n\t\r\n\t// Internal recursive comparison function for `isEqual`.\r\n\tvar eq = function(a, b, aStack, bStack) {\r\n\t\t// Identical objects are equal. `0 === -0`, but they aren't identical.\r\n\t\t// See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n\t\tif (a === b) return a !== 0 || 1 / a == 1 / b;\r\n\t\t// A strict comparison is necessary because `null == undefined`.\r\n\t\tif (a == null || b == null) return a === b;\r\n\t\t// Unwrap any wrapped objects.\r\n\t\t// Compare `[[Class]]` names.\r\n\t\tvar className = toString.call(a);\r\n\t\tif (className != toString.call(b)) return false;\r\n\t\tswitch (className) {\r\n\t\t\t// Strings, numbers, dates, and booleans are compared by value.\r\n\t\t\tcase '[object String]':\r\n\t\t\t\t// Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n\t\t\t\t// equivalent to `new String(\"5\")`.\r\n\t\t\t\treturn a == String(b);\r\n\t\t\tcase '[object Number]':\r\n\t\t\t\t// `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\r\n\t\t\t\t// other numeric values.\r\n\t\t\t\treturn a != +a ? b != +b : (a === 0 ? 1 / a == 1 / b : a == +b);\r\n\t\t\tcase '[object Date]':\r\n\t\t\tcase '[object Boolean]':\r\n\t\t\t\t// Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n\t\t\t\t// millisecond representations. Note that invalid dates with millisecond representations\r\n\t\t\t\t// of `NaN` are not equivalent.\r\n\t\t\t\treturn +a == +b;\r\n\t\t\t// RegExps are compared by their source patterns and flags.\r\n\t\t\tcase '[object RegExp]':\r\n\t\t\t\treturn a.source == b.source &&\r\n\t\t\t\t\t\t\t a.global == b.global &&\r\n\t\t\t\t\t\t\t a.multiline == b.multiline &&\r\n\t\t\t\t\t\t\t a.ignoreCase == b.ignoreCase;\r\n\t\t}\r\n\t\tif (typeof a != 'object' || typeof b != 'object') return false;\r\n\t\t// Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n\t\t// structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\t\tvar length = aStack.length;\r\n\t\twhile (length--) {\r\n\t\t\t// Linear search. Performance is inversely proportional to the number of\r\n\t\t\t// unique nested structures.\r\n\t\t\tif (aStack[length] == a) return bStack[length] == b;\r\n\t\t}\r\n\t\t// Objects with different constructors are not equivalent, but `Object`s\r\n\t\t// from different frames are.\r\n\t\tvar aCtor = a.constructor, bCtor = b.constructor;\r\n\t\tif (aCtor !== bCtor && !(conbo.isFunction(aCtor) && (aCtor instanceof aCtor) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t conbo.isFunction(bCtor) && (bCtor instanceof bCtor))\r\n\t\t\t\t\t\t\t\t\t\t\t\t&& ('constructor' in a && 'constructor' in b)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Add the first object to the stack of traversed objects.\r\n\t\taStack.push(a);\r\n\t\tbStack.push(b);\r\n\t\tvar size = 0, result = true;\r\n\t\t// Recursively compare objects and arrays.\r\n\t\tif (className == '[object Array]') {\r\n\t\t\t// Compare array lengths to determine if a deep comparison is necessary.\r\n\t\t\tsize = a.length;\r\n\t\t\tresult = size == b.length;\r\n\t\t\tif (result) {\r\n\t\t\t\t// Deep compare the contents, ignoring non-numeric properties.\r\n\t\t\t\twhile (size--) {\r\n\t\t\t\t\tif (!(result = eq(a[size], b[size], aStack, bStack))) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Deep compare objects.\r\n\t\t\tfor (var key in a) {\r\n\t\t\t\tif (conbo.has(a, key)) {\r\n\t\t\t\t\t// Count the expected number of properties.\r\n\t\t\t\t\tsize++;\r\n\t\t\t\t\t// Deep compare each member.\r\n\t\t\t\t\tif (!(result = conbo.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Ensure that both objects contain the same number of properties.\r\n\t\t\tif (result) {\r\n\t\t\t\tfor (key in b) {\r\n\t\t\t\t\tif (conbo.has(b, key) && !(size--)) break;\r\n\t\t\t\t}\r\n\t\t\t\tresult = !size;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Remove the first object from the stack of traversed objects.\r\n\t\taStack.pop();\r\n\t\tbStack.pop();\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * Perform a deep comparison to check if two objects are equal.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\ta - Object to compare\r\n\t * @param\t\t{Object}\tb - Object to compare\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isEqual = function(a, b) \r\n\t{\r\n\t\treturn eq(a, b, [], []);\r\n\t};\r\n\r\n\t/**\r\n\t * Is the value empty?\r\n\t * Based on PHP's `empty()` method\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{any}\t\tvalue - Value that might be empty\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isEmpty = function(value)\r\n\t{\r\n\t\treturn !value // 0, false, undefined, null, \"\"\r\n\t\t\t|| (conbo.isArray(value) && value.length === 0) // []\r\n\t\t\t|| (!isNaN(value) && !parseFloat(value)) // \"0\", \"0.0\", etc\r\n\t\t\t|| (conbo.isObject(value) && !conbo.keys(value).length) // {}\r\n\t\t\t|| (conbo.isObject(value) && 'length' in value && value.length === 0) // Arguments, List, etc\r\n\t\t\t;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Can the value be iterated using a for loop? For example an Array, Arguments, ElementsList, etc.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{any}\t\tobj - Object that might be iterable \r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isIterable = function(obj)\r\n\t{\r\n\t\treturn obj && obj.length === +obj.length;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Is a given value a DOM element?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be a DOM element\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isElement = function(obj) \r\n\t{\r\n\t\treturn !!(obj && obj.nodeType === 1);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Is a given value an array?\r\n\t * Delegates to ECMA5's native Array.isArray\r\n\t * \r\n\t * @function\r\n\t * @deprecated\tUse Array.isArray\r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be an Array\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isArray = nativeIsArray || function(obj) \r\n\t{\r\n\t\treturn toString.call(obj) == '[object Array]';\r\n\t};\r\n\r\n\t/**\r\n\t * Is a given variable an object?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be an Object\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isObject = function(obj) \r\n\t{\r\n\t\treturn obj === Object(obj);\r\n\t};\r\n\r\n\t/**\r\n\t * Is the specified object Arguments?\r\n\t * @method\t\tisArguments \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to test\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Is the specified object a Function?\r\n\t * @method\t\tisFunction  \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to test\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Is the specified object a String?\r\n\t * @method\t\tisString\r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to test\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Is the specified object a Number?\r\n\t * @method\t\tisNumber  \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to test\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Is the specified object a Date?\r\n\t * @method\t\tisDate  \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to test\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Is the specified object a RegExp (regular expression)?\r\n\t * @method\t\tisRegExp  \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object to test\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\t\r\n\t// Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\r\n\tforEach(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) \r\n\t{\r\n\t\tconbo['is' + name] = function(obj) \r\n\t\t{\r\n\t\t\treturn toString.call(obj) == '[object ' + name + ']';\r\n\t\t};\r\n\t});\r\n\r\n\t// Define a fallback version of the method in browsers (ahem, IE), where\r\n\t// there isn't any inspectable \"Arguments\" type.\r\n\tif (!conbo.isArguments(arguments)) \r\n\t{\r\n\t\tconbo.isArguments = function(obj) \r\n\t\t{\r\n\t\t\treturn !!(obj && conbo.has(obj, 'callee'));\r\n\t\t};\r\n\t}\r\n\t\r\n\t// Optimize `isFunction` if appropriate.\r\n\tif (typeof(/./) !== 'function') \r\n\t{\r\n\t\tconbo.isFunction = function(obj) \r\n\t\t{\r\n\t\t\treturn typeof obj === 'function';\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * Detects whether the specified property was defined as a function, meaning\r\n\t * accessors containing functions are excluded\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see\t\t\t#isFunction\r\n\t * \r\n\t * @param\t\t{Object}\tobj - Object containing the property\r\n\t * @param\t\t{string}\tpropName - The name of the property\r\n\t * @returns\t\t{boolean}\ttrue if it's a function\r\n\t */\r\n\tconbo.isFunc = function(obj, propName)\r\n\t{\r\n\t\tvar descriptor = conbo.getPropertyDescriptor(obj, propName);\r\n\t\treturn descriptor && typeof(descriptor.value) == 'function';\r\n\t};\r\n\t\r\n\t/**\r\n\t * Is a given object a finite number?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be finite\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isFinite = function(obj) \r\n\t{\r\n\t\treturn isFinite(obj) && !isNaN(parseFloat(obj));\r\n\t};\r\n\r\n\t/**\r\n\t * Is the given value `NaN`? (NaN is the only number which does not equal itself).\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be NaN\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isNaN = function(obj) \r\n\t{\r\n\t\treturn conbo.isNumber(obj) && obj != +obj;\r\n\t};\r\n\r\n\t/**\r\n\t * Is a given value a boolean?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be a Boolean\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isBoolean = function(obj) \r\n\t{\r\n\t\treturn obj === true || obj === false || toString.call(obj) == '[object Boolean]';\r\n\t};\r\n\r\n\t/**\r\n\t * Is a given value equal to null?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be null\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isNull = function(obj)\r\n\t{\r\n\t\treturn obj === null;\r\n\t};\r\n\r\n\t/**\r\n\t * Is a given variable undefined?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - Value that might be undefined\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isUndefined = function(obj) \r\n\t{\r\n\t\treturn obj === undefined;\r\n\t};\r\n\r\n\t/**\r\n\t * Shortcut function for checking if an object has a given property directly\r\n\t * on itself (in other words, not on a prototype).\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @deprecated\tUse Object.prototype.hasOwnProperty\r\n\t * @param\t\t{Object}\tobj - Object\r\n\t * @param\t\t{string}\tkey - Property name\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.has = function(obj, key)\r\n\t{\r\n\t\treturn hasOwnProperty.call(obj, key);\r\n\t};\r\n\t\r\n\t// Utility Functions\r\n\t// -----------------\r\n\r\n\t/**\r\n\t * Keep the identity function around for default iterators.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{*}\t\tobj - Value to return\r\n\t * @returns\t\t{*}\r\n\t */\r\n\tconbo.identity = function(value) \r\n\t{\r\n\t\treturn value;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Get the property value\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{string}\tkey - Property name\r\n\t * @returns\t\t{Function}\r\n\t */\r\n\tconbo.property = function(key) \r\n\t{\r\n\t\treturn function(obj) \r\n\t\t{\r\n\t\t\treturn obj[key];\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a predicate for checking whether an object has a given set of `key:value` pairs.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tattrs - Object containing key:value pairs to compare\r\n\t * @returns\t\t{Function}\r\n\t */\r\n\tconbo.matches = function(attrs) \r\n\t{\r\n\t\treturn function(obj) \r\n\t\t{\r\n\t\t\tif (obj === attrs) return true; //avoid comparing an object to itself.\r\n\t\t\t\r\n\t\t\tfor (var key in attrs) \r\n\t\t\t{\r\n\t\t\t\tif (attrs[key] !== obj[key])\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return a random integer between min and max (inclusive).\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{number}\tmin - Minimum number\r\n\t * @param\t\t{number}\tmax - Maximum number\r\n\t * @returns\t\t{number}\r\n\t */\r\n\tconbo.random = function(min, max)\r\n\t{\r\n\t\tif (max == undefined) \r\n\t\t{\r\n\t\t\tmax = min;\r\n\t\t\tmin = 0;\r\n\t\t}\r\n\t\t\r\n\t\treturn min + Math.floor(Math.random() * (max - min + 1));\r\n\t};\r\n\t\r\n\tvar idCounter = 0;\r\n\r\n\t/**\r\n\t * Generate a unique integer id (unique within the entire client session).\r\n\t * Useful for temporary DOM ids.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{string}\t[prefix] - String to prefix unique ID with\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.uniqueId = function(prefix) \r\n\t{\r\n\t\tvar id = ++idCounter + '';\r\n\t\treturn prefix ? prefix + id : id;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generates a version 4 RFC4122 UUID\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.guid = function() \r\n\t{\r\n\t\tif (window.crypto)\r\n\t\t{\r\n\t\t\treturn ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, function(c) \r\n\t\t\t{\r\n\t\t\t    return (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) \r\n\t\t{\r\n\t\t\tvar r = Math.random() * 16 | 0;\r\n\t\t\treturn (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n\t\t});\r\n\t}\t\r\n\t\r\n\t/**\r\n\t * Is Conbo supported by the current browser?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @type\t\t{boolean}\r\n\t */\r\n\tconbo.isSupported = \r\n\t\twindow.addEventListener\r\n\t\t&& !!Object.defineProperty \r\n\t\t&& !!Object.getOwnPropertyDescriptor;\r\n\t\r\n\t/**\r\n\t * Is this script being run using Node.js?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @type\t\t{boolean}\r\n\t */\r\n\tconbo.isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\r\n\t\r\n\t/**\r\n\t * A function that does nothing\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @returns\t\t{Function}\r\n\t */\r\n\tconbo.noop = function() {}; \r\n\t\r\n\t/**\r\n\t * Default function to assign to the methods of pseudo-interfaces\r\n\t * \r\n\t * @example\tIExample = { myMethod:conbo.notImplemented };\r\n\t * @memberof\tconbo\r\n\t * @returns\t\t{Function}\r\n\t */\r\n\tconbo.notImplemented = function() \r\n\t{\r\n\t\tconbo.warn('Method not implemented');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Convert dash-or_underscore separated words into camelCaseWords\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{string}\tstring - underscore_case_string to convertToCamelCase\r\n\t * @param\t\t{boolean}\t[initCap=false] - Should the first letter be a CapitalLetter? (default: false)\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.toCamelCase = function(string, initCap)\r\n\t{\r\n\t\tvar s = (string || '').toLowerCase().replace(/([\\W_])([a-z])/g, function (g) { return g[1].toUpperCase(); }).replace(/(\\W+)/, '');\r\n\t\tif (initCap) return s.charAt(0).toUpperCase() + s.slice(1);\r\n\t\treturn s;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Convert camelCaseWords into underscore_case_words (or another user defined separator)\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{string}\tstring - camelCase string to convert to underscore_case\r\n\t * @param\t\t{string}\t[separator=_] - Default: \"_\"\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.toUnderscoreCase = function(string, separator)\r\n\t{\r\n\t\tseparator || (separator = '_');\r\n\t\treturn (string || '').replace(/\\W+/g, separator).replace(/([a-z\\d])([A-Z])/g, '$1'+separator+'$2').toLowerCase();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Convert camelCaseWords into kebab-case-words\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{string}\tstring - camelCase string to convert to underscore_case\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.toKebabCase = function(string)\r\n\t{\r\n\t\treturn conbo.toUnderscoreCase(string, '-');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Pads a string with the specified character to the specified length\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{number|string}\tvalue - String to pad\r\n\t * @param\t\t{number}\t\t[minLength=2] - Minimum length of the padded string\r\n\t * @param\t\t{number|string}\t[padChar= ] - The character to use to pad the string\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.padLeft = function(value, minLength, padChar)\r\n\t{\r\n\t\tif (!padChar && padChar !== 0) padChar = ' ';\r\n\t\tif (!value && value !== 0) value = '';\r\n\t\t\r\n\t\tminLength || (minLength = 2);\r\n\t\t\r\n\t\tpadChar = padChar.toString().charAt(0);\r\n\t\tvalue = value.toString();\r\n\t\t\r\n\t\twhile (value.length < minLength)\r\n\t\t{\r\n\t\t\tvalue = padChar + value;\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Add a leading zero to the specified number and return it as a string\r\n\t * @memberof \tconbo\r\n\t * @param\t\t{number}\tnumber - The number to add a leading zero to\r\n\t * @param\t\t{number}\t[minLength=2] - the minumum length of the returned string (default: 2)\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.addLeadingZero = function(number, minLength)\r\n\t{\r\n\t\treturn conbo.padLeft(number, minLength, 0);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Format a number using the selected number of decimals, using the \r\n\t * provided decimal point, thousands separator \r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see \t\thttp://phpjs.org/functions/number_format/\r\n\t * @param \t\t{number} \tnumber\r\n\t * @param \t\t{number} \t[decimals=0]\t\t\t\tdefault: 0\r\n\t * @param \t\t{string}\t[decimalPoint=.]\t\t\tdefault: '.'\r\n\t * @param \t\t{string}\t[thousandsSeparator=,]\t\tdefault: ','\r\n\t * @returns\t\t{string}\tFormatted number\r\n\t */\r\n\tconbo.formatNumber = function(number, decimals, decimalPoint, thousandsSeparator) \r\n\t{\r\n\t\tnumber = (number+'').replace(/[^0-9+\\-Ee.]/g, '');\r\n\t\t\r\n\t\tvar n = !isFinite(+number) ? 0 : +number,\r\n\t\t\tprec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n\t\t\tsep = conbo.isUndefined(thousandsSeparator) ? ',' : thousandsSeparator,\r\n\t\t\tdec = conbo.isUndefined(decimalPoint) ? '.' : decimalPoint,\r\n\t\t\ts = n.toFixed(prec).split('.')\r\n\t\t\t;\r\n\t\t\r\n\t\tif (s[0].length > 3) \r\n\t\t{\r\n\t\t\ts[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n\t\t}\r\n\t\t\r\n\t\tif ((s[1] || '').length < prec) \r\n\t\t{\r\n\t\t\ts[1] = s[1] || '';\r\n\t\t\ts[1] += new Array(prec-s[1].length+1).join('0');\r\n\t\t}\r\n\t\t\r\n\t\treturn s.join(dec);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Format a number as a currency\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param \t\t{number}\tnumber\r\n\t * @param \t\t{string}\t[symbol]\r\n\t * @param \t\t{boolean}\t[suffixed]\r\n\t * @param \t\t{number}\t[decimals]\r\n\t * @param \t\t{string}\t[decimalPoint]\r\n\t * @param \t\t{string}\t[thousandsSeparator]\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.formatCurrency = function(number, symbol, suffixed, decimals, decimalPoint, thousandsSeparator)\r\n\t{\r\n\t\tif (conbo.isUndefined(decimals)) decimals = 2;\r\n\t\tsymbol || (symbol = '');\r\n\t\tvar n = conbo.formatNumber(number, decimals, decimalPoint, thousandsSeparator);\r\n\t\treturn suffixed ? n+symbol : symbol+n;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Encodes all of the special characters contained in a string into HTML \r\n\t * entities, making it safe for use in an HTML document\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param \t\t{string}\tstring - String to encode\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.encodeEntities = function(string)\r\n\t{\r\n\t\tif (!conbo.isString(string))\r\n\t\t{\r\n\t\t\tstring = conbo.isNumber(string)\r\n\t\t\t\t? string.toString()\r\n\t\t\t\t: '';\r\n\t\t}\r\n\t\t\r\n\t\treturn string.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(char)\r\n\t\t{\r\n\t\t\treturn '&#'+char.charCodeAt(0)+';';\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * Decodes all of the HTML entities contained in an string, replacing them with\r\n\t * special characters, making it safe for use in plain text documents\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param \t\t{string}\tstring - String to dencode\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tconbo.decodeEntities = function(string) \r\n\t{\r\n\t\tif (!conbo.isString(string)) string = '';\r\n\t\t\r\n\t\treturn string.replace(/&#(\\d+);/g, function(match, dec) \r\n\t\t{\r\n\t\t\treturn String.fromCharCode(dec);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * Copies all of the enumerable values from one or more objects and sets\r\n\t * them on another, without affecting the target object's property\r\n\t * descriptors. Unlike Object.assign(), the properties copied are not\r\n\t * limited to own properties.\r\n\t * \r\n\t * Unlike conbo.defineValues, setValues only sets the values on the target \r\n\t * object and does not destroy and redifine them.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\ttarget - Object to copy properties to\r\n\t * @param\t\t{...Object}\tsource - Object to copy properties from\r\n\t * @returns\t\t{Object}\r\n\t * \r\n\t * @example\t\r\n\t * conbo.setValues({id:1}, {get name() { return 'Arthur'; }}, {get age() { return 42; }});\r\n\t * => {id:1, name:'Arthur', age:42}\r\n\t */\r\n\tconbo.setValues = function(target)\r\n\t{\r\n\t\tconbo.rest(arguments).forEach(function(source) \r\n\t\t{\r\n\t\t\tif (!source) return;\r\n\t\t\t\r\n\t\t\tfor (var propName in source) \r\n\t\t\t{\r\n\t\t\t\ttarget[propName] = source[propName];\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn target;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Is the value a Conbo class?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{any}\t\tvalue - Value that might be a class\r\n\t * @param\t\t{class}\t\t[classReference] - The Conbo class that the value must match or be an extension of \r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isClass = function(value, classReference)\r\n\t{\r\n\t\treturn !!value \r\n\t\t\t&& typeof value == 'function' \r\n\t\t\t&& value.prototype instanceof (classReference || conbo.Class)\r\n\t\t\t;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Copies a property, including defined properties and accessors, \r\n\t * from one object to another\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tsource - Source object\r\n\t * @param\t\t{string}\tsourceName - Name of the property on the source\r\n\t * @param\t\t{Object}\ttarget - Target object\r\n\t * @param\t\t{string} \t[targetName] - Name of the property on the target (default: sourceName)\r\n\t * @returns\t\t{conbo}\r\n\t */\r\n\tconbo.cloneProperty = function(source, sourceName, target, targetName)\r\n\t{\r\n\t\ttargetName || (targetName = sourceName);\r\n\t\t\r\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(source, sourceName);\r\n\t\t\r\n\t\tif (!!descriptor)\r\n\t\t{\r\n\t\t\tObject.defineProperty(target, targetName, descriptor);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\ttarget[targetName] = source[sourceName];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sorts the items in an array according to one or more fields in the array. \r\n\t * The array should have the following characteristics:\r\n\t * \r\n\t * <ul>\r\n\t * <li>The array is an indexed array, not an associative array.</li>\r\n\t * <li>Each element of the array holds an object with one or more properties.</li>\r\n\t * <li>All of the objects have at least one property in common, the values of which can be used to sort the array. Such a property is called a field.</li>\r\n\t * </ul>\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Array}\t\tarray - The Array to sort\r\n\t * @param\t\t{string}\tfieldName - The field/property name to sort on\r\n\t * @param\t\t{Object}\t[options] - Optional sort criteria: `descending` (Boolean), `caseInsensitive` (Boolean)\r\n\t * @returns\t\t{Array}\r\n\t */\r\n\tconbo.sortOn = function(array, fieldName, options)\r\n\t{\r\n\t\toptions || (options = {});\r\n\t\t\r\n\t\tif (conbo.isArray(array) && fieldName)\r\n\t\t{\r\n\t\t\tarray.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\tvar values = [a[fieldName], b[fieldName]];\r\n\t\t\t\t\r\n\t\t\t\t// Configure\r\n\t\t\t\tif (options.descending)\r\n\t\t\t\t{\r\n\t\t\t\t\tvalues.reverse();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (options.caseInsensitive)\r\n\t\t\t\t{\r\n\t\t\t\t\tconbo.forEach(values, function(value, index)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (conbo.isString(value)) values[index] = value.toLowerCase();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Sort\r\n\t\t\t\tif (values[0] < values[1]) return -1;\r\n\t\t\t\tif (values[0] > values[1]) return 1;\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn array;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Performs a comparison of an object against a class, returning true if \r\n\t * the object is an an instance of the specified class.\r\n\t * \r\n\t * Unlike the native instanceof, however, this method works with both \r\n\t * native and user defined classes.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\t\t\t\tobj - The class instance\r\n\t * @param\t\t{conbo.Class|function}\tclazz - The class to compare against\r\n\t * @example\t\t\t\t\t\t\t\tvar b = conbo.instanceOf(69, String);\r\n\t * @example\t\t\t\t\t\t\t\tvar b = conbo.instanceOf(user, UserClass);\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.instanceOf = function(obj, clazz)\r\n\t{\r\n\t\tif (!obj || conbo.isClass(obj) || !clazz) \r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t// Class instances\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif (obj instanceof clazz // User defined class \r\n\t\t\t\t|| obj.constructor === clazz) // Primitive class\r\n\t\t\t{\r\n\t\t\t\treturn true; \r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {}\r\n\t\t\r\n\t\treturn false;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Performs a comparison of an object against a class or interface, returning \r\n\t * true if the object is an an instance of the specified class or an \r\n\t * implementation of the specified interface\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\t\t\t\tobj - The object to compare\r\n\t * @param\t\t{conbo.Class|object}\tclassOrInterface - The class or pseudo-interface to compare against\r\n\t * @param\t\t{boolean}\t\t\t\t[strict=true] - Perform a strict interface comparison (default: true)\r\n\t * @example\t\t\t\t\t\t\t\tvar b = conbo.is(user, UserClass);\r\n\t * @example\t\t\t\t\t\t\t\tvar b = conbo.is(user, IUser);\r\n\t * @example\t\t\t\t\t\t\t\tvar b = conbo.is(user, partial, false);\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.is = function(obj, classOrInterface, strict)\r\n\t{\r\n\t\tif (!obj || conbo.isClass(obj) || !classOrInterface) \r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t// Class instance\r\n\t\t\r\n\t\tif (conbo.instanceOf(obj, classOrInterface))\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\t// Pseudo-interface\r\n\t\t\r\n\t\tstrict = (strict !== false);\r\n\t\t\r\n\t\tif (conbo.isObject(classOrInterface) && conbo.keys(classOrInterface).length)\r\n\t\t{\r\n\t\t\tfor (var a in classOrInterface)\r\n\t\t\t{\r\n\t\t\t\tif (!(a in obj) || (strict && !conbo.isUndefined(classOrInterface[a]) && !conbo.is(obj[a], classOrInterface[a], strict)))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Loads a CSS file and applies it to the DOM\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param \t\t{string}\turl\t\t\tThe CSS file's URL\r\n\t * @param \t\t{string}\t[media=all]\tThe media attribute (defaults to 'all')\r\n\t * @returns\t\t{Promise}\r\n\t */\r\n\tconbo.loadCss = function(url, media)\r\n\t{\r\n\t\treturn new Promise(function(resolve, reject)\r\n\t\t{\r\n\t\t\tif (!('document' in window) || !!document.querySelector('[href=\"'+url+'\"]'))\r\n\t\t\t{\r\n\t\t\t\treject();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar link, head;\r\n\r\n\t\t\tlink = document.createElement('link');\r\n\t\t\tlink.rel = 'stylesheet';\r\n\t\t\tlink.type = 'text/css';\r\n\t\t\tlink.media = media || 'all';\r\n\t\t\tlink.addEventListener('load', resolve);\r\n\t\t\tlink.addEventListener('error', reject);\r\n\t\t\tlink.href = url;\r\n\t\t\t\r\n\t\t\tdocument\r\n\t\t\t\t.querySelector('head')\r\n\t\t\t\t.appendChild(link)\r\n\t\t\t\t;\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * Load a JavaScript file and executes it\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param \t\t{string}\turl - The JavaScript file's URL\r\n\t * @param \t\t{Object}\t[scope] - The scope in which to run the loaded script\r\n\t * @returns\t\t{Promise}\r\n\t */\r\n\tconbo.loadScript = function(url, scope)\r\n\t{\r\n\t\treturn conbo.httpRequest\r\n\t\t({\r\n\t\t\turl: url,\r\n\t\t\tdataType: 'script',\r\n\t\t\tscope: scope\r\n\t\t});\r\n\t};\r\n\t\r\n\t/*\r\n\t * Property utilities\r\n\t */\r\n\t\r\n\t/**\r\n\t * Makes the specified properties of an object bindable; if no property \r\n\t * names are passed, all variables will be made bindable\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see \t\t#makeAllBindable\r\n\t * \r\n\t * @param\t\t{Object}\t\tobj\r\n\t * @param\t\t{string[]}\t\t[propNames]\r\n\t * @returns\t\t{conbo}\r\n\t */\r\n\tconbo.makeBindable = function(obj, propNames)\r\n\t{\r\n\t\tpropNames = conbo.uniq(propNames || conbo.getVariableNames(obj, true));\r\n\t\t\r\n\t\tpropNames.forEach(function(propName)\r\n\t\t{\r\n\t\t\t__defineProperty(obj, propName);\r\n\t\t});\r\n\t\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Makes all existing properties of the specified object bindable, and \r\n\t * optionally creates additional bindable properties for each of the property \r\n\t * names in the propNames array\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @see \t\t#makeBindable\r\n\t * \r\n\t * @param\t\t{string}\t\tobj\r\n\t * @param\t\t{string[]}\t\t[propNames]\r\n\t * @returns\t\t{conbo}\r\n\t */\r\n\tconbo.makeAllBindable = function(obj, propNames)\r\n\t{\r\n\t\tpropNames = (propNames || []).concat(conbo.getVariableNames(obj, true));\r\n\t\tconbo.makeBindable(obj, propNames);\r\n\t\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Is the specified property an accessor (defined using a getter and/or setter)?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tObject containing the property\r\n\t * @param\t\t{string}\tThe name of the property\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\tconbo.isAccessor = function(obj, propName)\r\n\t{\r\n\t\tif (obj)\r\n\t\t{\r\n\t\t\treturn !!obj.__lookupGetter__(propName) \r\n\t\t\t\t|| !!obj.__lookupSetter__(propName);\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Is the specified function native?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Function}\tfunc - The function that might be native\r\n\t * @returns\t\t{boolean}\ttrue if it's native, false if it's user defined\r\n\t */\r\n\tconbo.isNative = function(value) \r\n\t{\r\n\t\tvar toString = Object.prototype.toString;\r\n\t\tvar fnToString = Function.prototype.toString;\r\n\t\tvar reHostCtor = /^\\[object .+?Constructor\\]$/;\r\n\t\tvar reNative = RegExp('^'+String(toString).replace(/[.*+?^${}()|[\\]\\/\\\\]/g, '\\\\$&').replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\r\n\t\tvar type = typeof value;\r\n\t\t\r\n\t\treturn type == 'function'\r\n\t\t\t? reNative.test(fnToString.call(value))\r\n\t\t\t: (value && type == 'object' && reHostCtor.test(toString.call(value))) || false;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Parse a template\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{string}\ttemplate - A string containing property names in {{moustache}} or ${ES2015} format to be replaced with property values\r\n\t * @param\t\t{Object}\tdata - An object containing the data to be used to populate the template \r\n\t * @returns\t\t{string}\tThe populated template\r\n\t */\r\n\tconbo.parseTemplate = function(template, data)\r\n\t{\r\n\t\tif (!template) return \"\";\r\n\t\t\r\n\t\tdata || (data = {});\r\n\t\t\r\n\t\treturn template.replace(/{{(.+?)}}|\\${(.+?)}/g, function() \r\n\t\t{\r\n\t\t\tvar propName = (arguments[1] || arguments[2]).trim();\r\n\t\t\tvar args = propName.split(\"|\");\r\n\t\t\tvar value, parseFunction;\r\n\t\t\t\r\n\t\t\targs[0] = conbo.bindingUtils.cleanPropertyName(args[0]);\r\n\t\t\t\r\n\t\t\ttry { value = eval(\"data.\"+args[0]);\t\t\t} catch(e) {}\r\n\t\t\ttry { parseFunction = eval(\"data.\"+args[1]);\t} catch(e) {}\r\n\t\t\t\r\n\t\t\tif (!conbo.isFunction(parseFunction)) \r\n\t\t\t{\r\n\t\t\t\tparseFunction = conbo.bindingUtils.defaultParseFunction;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn parseFunction(value);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * Converts a template string into a pre-populated templating method that can \r\n\t * be evaluated for rendering.\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{string}\ttemplate - A string containing property names in {{moustache}} or ${ES2015} format to be replaced with property values\r\n\t * @param\t\t{Object}\t[defaults] - An object containing default values to use when populating the template\r\n\t * @returns\t\t{Function}\tA function that can be called with a data object, returning the populated template\r\n\t */\r\n\tconbo.compileTemplate = function(template, defaults)\r\n\t{\r\n\t\treturn function(data)\r\n\t\t{\r\n\t\t\treturn conbo.parseTemplate(template, conbo.setDefaults(data || {}, defaults));\r\n\t\t}\r\n\t};\r\n\t\t\r\n\t/**\r\n\t * Serialise an Object as a query string  suitable for appending to a URL \r\n\t * as GET parameters, e.g. foo=1&bar=2\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj\t- The Object to encode\r\n\t * @returns\t\t{string}\tThe URL encoded string \r\n\t */\r\n\tconbo.toQueryString = function(obj)\r\n\t{\r\n\t\treturn conbo.keys(obj).map(function(key) {\r\n\t\t\tvar value = obj[key];\r\n\t\t\tif (value == undefined) value = '';\r\n\t\t    return key + '=' + encodeURIComponent(value);\r\n\t\t}).join('&');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns the value of the property matching the specified name, optionally\r\n\t * searching for a case insensitive match. This is useful when extracting \r\n\t * response headers, where the case of properties such as \"Content-Type\" \r\n\t * cannot always be predicted\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{Object}\tobj - The object containing the property\r\n\t * @param\t\t{string}\tpropName - The property name\r\n\t * @param\t\t{boolean}\t[caseSensitive=true] - Whether to search for a case-insensitive match (default: true)\r\n\t * @returns\t\t{*}\t\t\tThe value of the specified property\r\n\t */\r\n\tconbo.getValue = function(obj, propName, caseSensitive)\r\n\t{\r\n\t\tif (caseSensitive !== false)\r\n\t\t{\r\n\t\t\treturn obj[propName];\r\n\t\t}\r\n\t\t\r\n\t\tfor (var a in obj)\r\n\t\t{\r\n\t\t\tif (a.toLowerCase() == propName.toLowerCase())\r\n\t\t\t{\r\n\t\t\t\treturn obj[a];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * Prepare data for submission to web services.\r\n\t * \r\n\t * If no toJSON method is present on the specified Object, this method \r\n\t * returns a version of the object that can easily be converted into JSON, \r\n\t * made up of its own properties with all functions, unenumerable and \r\n\t * private properties removed.\r\n\t * \r\n\t * This method can be assigned to an Object or Array as the toJSON method \r\n\t * for use with JSON.stringify().\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{*}\t\t\tobj - Object to convert\r\n\t * @param\t\t{boolean}\t[deep=false] - Retrieve keys from further up the prototype chain?\r\n\t * @returns\t\t{*}\t\t\tJSON ready version of the object\r\n\t * \r\n\t * @example\r\n\t * conbo.jsonify(myObj); // Defers to myObj.toJSON() if it exists\r\n\t * conbo.jsonify.call(myObj); // Ignores myObj.toJSON(), even if it exists\r\n\t * myObj.toJSON = conbo.jsonify; // Assign this method to your Object\r\n\t */\r\n\tconbo.jsonify = function(obj, deep)\r\n\t{\r\n\t\tif (this != conbo)\r\n\t\t{\r\n\t\t\tdeep = obj;\r\n\t\t\tobj = this;\r\n\t\t}\r\n\t\t\r\n\t\tif (conbo.isObject(obj))\r\n\t\t{\r\n\t\t\tif (this != obj && 'toJSON' in obj)\r\n\t\t\t{\r\n\t\t\t\treturn obj.toJSON();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (conbo.isIterable(obj))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn conbo.map(obj, function(item)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn conbo.jsonify(item, deep);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar keys = conbo.filter(conbo.variables(obj, deep), function(key)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn /^[a-z]*$/i.test(key);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\treturn conbo.setValues({}, conbo.pick.apply(conbo, [obj].concat(keys)));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn obj;\r\n\t};\r\n\t\r\n\t/*\r\n\t * Logging\r\n\t */\r\n\t\r\n\t/**\r\n\t * Should Conbo output data to the console when calls are made to loggin methods?\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @type\t\t{boolean}\r\n\t * @example\r\n\t * conbo.logEnabled = false;\r\n\t * conbo.log('Blah!'); // Nothing will be displayed in the console\r\n\t */\r\n\tconbo.logEnabled = true;\r\n\t\r\n\t/**\r\n\t * @memberof\tconbo\r\n\t * @member\t\t{Function}\tlog - Add a log message to the console\r\n\t * @param\t\t{...*}\t\tvalues - Values to display in the console\t\r\n\t * @returns\t\t{void}\r\n\t * @function\r\n\t */\r\n\t\r\n\t/**\r\n\t * @memberof\tconbo\r\n\t * @member\t\t{Function}\twarn - Add a warning message to the console\r\n\t * @param\t\t{...*}\t\tvalues - Values to display in the console\t\r\n\t * @returns\t\t{void}\r\n\t * @function\r\n\t */\r\n\t\r\n\t/**\r\n\t * @memberof\tconbo\r\n\t * @member\t\t{Function}\tinfo - Add information to the console\r\n\t * @param\t\t{...*}\t\tvalues - Values to display in the console\t\r\n\t * @returns\t\t{void}\r\n\t * @function\r\n\t */\r\n\t\r\n\t/**\r\n\t * @memberof\tconbo\r\n\t * @member\t\t{Function}\terror - Add an error log message to the console\r\n\t * @param\t\t{...*}\t\tvalues - Values to display in the console\t\r\n\t * @returns\t\t{void}\r\n\t * @function\r\n\t */\r\n\t\r\n\tvar logMethods = ['log','warn','info','error'];\r\n\t\r\n\tlogMethods.forEach(function(method)\r\n\t{\r\n\t\tconbo[method] = function()\r\n\t\t{\r\n\t\t\tif (!console || !conbo.logEnabled) return;\r\n\t\t\tconsole[method].apply(console, arguments);\t\t\r\n\t\t};\r\n\t});\r\n\t\r\n})();\r\n\r\n/*\r\n * Functions and utility methods use for manipulating the DOM\r\n * @author\t\tNeil Rackett\r\n */\r\n\r\n(function()\r\n{\r\n\t/**\r\n\t * Initialize Applications in the DOM using the specified namespace\r\n\t * \r\n\t * By default, Conbo scans the entire DOM, but you can limit the\r\n\t * scope by specifying a root element\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{conbo.Namespace} namespace\r\n\t * @param\t\t{Element} [rootEl] - Top most element to scan\r\n\t */\r\n\tconbo.initDom = function(namespace, rootEl)\r\n\t{\r\n\t\tif (!namespace)\r\n\t\t{\r\n\t\t\tthrow new Error('initDom: namespace is undefined');\r\n\t\t}\r\n\t\t\r\n\t\tif (conbo.isString(namespace))\r\n\t\t{\r\n\t\t\tnamespace = conbo(namespace);\r\n\t\t}\r\n\t\t\r\n\t\trootEl || (rootEl = document.querySelector('html'));\r\n\t\t\r\n\t\tvar initDom = function()\r\n\t\t{\r\n\t\t\tvar nodes = conbo.toArray(rootEl.querySelectorAll(':not(.cb-app)'));\r\n\t\t\t\r\n\t\t\tnodes.forEach(function(el)\r\n\t\t\t{\r\n\t\t   \t\tvar appName = __ep(el).attributes.cbApp || conbo.toCamelCase(el.tagName, true);\r\n\t\t   \t\tvar appClass = namespace[appName];\r\n\t\t   \t\t\r\n\t\t   \t\tif (appClass && conbo.isClass(appClass, conbo.Application))\r\n\t\t   \t\t{\r\n\t\t   \t\t\tnew appClass({el:el});\r\n\t\t   \t\t}\r\n\t\t   \t});\r\n\t\t};\r\n\t\t\r\n\t\tconbo.ready(initDom);\r\n\t\t\r\n\t\treturn this;\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tvar __observers = [];\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tvar __getObserverIndex = function(namespace, rootEl)\r\n\t{\r\n\t\tvar length = __observers.length;\r\n\t\t\r\n\t\tfor (var i=0; i<length; i++)\r\n\t\t{\r\n\t\t\tvar observer = __observers[i];\r\n\t\t\t\r\n\t\t\tif (observer[0] == namespace && observer[1] == rootEl)\r\n\t\t\t{\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Watch the DOM for new Applications using the specified namespace\r\n\t * \r\n\t * By default, Conbo watches the entire DOM, but you can limit the\r\n\t * scope by specifying a root element\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{conbo.Namespace} namespace\r\n\t * @param\t\t{Element} [rootEl] - Top most element to observe\r\n\t */\r\n\tconbo.observeDom = function(namespace, rootEl)\r\n\t{\r\n\t\tif (conbo.isString(namespace))\r\n\t\t{\r\n\t\t\tnamespace = conbo(namespace);\r\n\t\t}\r\n\t\t\r\n\t\tif (__getObserverIndex(namespace, rootEl) != -1)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\trootEl || (rootEl = document.querySelector('html'));\r\n\t\t\r\n\t\tvar mo = new conbo.MutationObserver();\r\n\t\tmo.observe(rootEl);\r\n\t\t\r\n\t\tmo.addEventListener(conbo.ConboEvent.ADD, function(event)\r\n\t\t{\r\n\t\t\tevent.nodes.forEach(function(node)\r\n\t\t\t{\r\n\t\t\t\tvar ep = __ep(node);\r\n\t\t\t\t\r\n\t\t\t\tif (!ep.hasClass('cb-app'))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar appName = ep.cbAttributes.app || conbo.toCamelCase(node.tagName, true);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (appName && namespace[appName])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnew namespace[appName]({el:node});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\t__observers.push([namespace, rootEl, mo]);\r\n\t\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Stop watching the DOM for new Applications\r\n\t * \r\n\t * @memberof\tconbo\r\n\t * @param\t\t{conbo.Namespace} namespace\r\n\t * @param\t\t{Element} [rootEl] - Top most element to observe\r\n\t */\r\n\tconbo.unobserveDom = function(namespace, rootEl)\r\n\t{\r\n\t\tif (conbo.isString(namespace))\r\n\t\t{\r\n\t\t\tnamespace = conbo(namespace);\r\n\t\t}\r\n\t\t\r\n\t\tvar i = __getObserverIndex(namespace, rootEl);\r\n\t\t\r\n\t\tif (i != -1)\r\n\t\t{\r\n\t\t\tvar observer = __observers[i];\r\n\t\t\t\r\n\t\t\tobserver[2].removeEventListener();\r\n\t\t\t__observers.slice(i,1);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n})();\r\n/*\r\n * CSS styles used by ConboJS\r\n * @author \tNeil Rackett\r\n */\r\n\r\nif (document && !document.querySelector('#cb-style'))\r\n{\r\n\tdocument.querySelector('head').innerHTML += \r\n\t\t'<style id=\"cb-style\" type=\"text/css\">'+\r\n\t\t\t'\\n.cb-hide { visibility:hidden !important; }'+\r\n\t\t\t'\\n.cb-exclude { display:none !important; }'+\r\n\t\t\t'\\n.cb-disable { pointer-events:none !important; cursor:default !important; }'+\r\n\t\t\t'\\nspan { font:inherit; color:inherit; }'+\r\n\t\t'\\n</style>';\r\n}\r\n\r\n/**\r\n * TypeScript / ES2017 decorator to make a property bindable\r\n * @memberof\t\t\tconbo\r\n * @param\t{any}\t\ttarget - The target object\r\n * @param\t{string}\tkey - The name of the property\r\n */\r\nconbo.Bindable = function(target, key)\r\n{\r\n\tconbo.makeBindable(target, [key]);\r\n}\r\n\r\n/**\r\n * TypeScript / ES2017 decorator to prepare a property for injection\r\n * @memberof\t\t\tconbo\r\n * @param\t{any}\t\ttarget - The target object\r\n * @param\t{string}\tkey - The name of the property\r\n */\r\nconbo.Inject = function(target, key)\r\n{\r\n\tif (delete target[key])\r\n\t{\r\n\t\tObject.defineProperty(target, key, \r\n\t\t{\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\twritable: true\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * TypeScript / ES2017 decorator for adding Application, View and Glimpse classes a ConboJS namespace to enable auto instantiation\r\n * @memberof\t\t\tconbo\r\n * @param\t{string}\tnamespace - The name of the target namespace\r\n * @param\t{string}\t[name] - The name to use for this object in the target namespace (useful if you target ES5 and minify your code)\r\n * @returns\t{Function}\tDecorator function\r\n */\r\nconbo.Viewable = function(namespace, name)\r\n{\r\n\treturn function(target)\r\n\t{\r\n\t\tvar imports = {};\r\n\t\timports[name || target.name] = target;\r\n\t\t\r\n\t\tconbo(namespace).import(imports);\r\n\t\t\r\n\t\treturn target;\r\n\t}\r\n};\r\n\r\n/**\r\n * Class\r\n * Extendable base class from which all others extend\r\n * @class\t\tClass\r\n * @memberof\tconbo\r\n * @param \t\t{Object} options - Object containing initialisation options\r\n */\r\nconbo.Class = function() \r\n{\r\n\tthis.declarations.apply(this, arguments);\r\n\tthis.preinitialize.apply(this, arguments);\r\n\tthis.initialize.apply(this, arguments);\r\n};\r\n\r\n/**\r\n * @memberof conbo.Class\r\n */\r\nconbo.Class.prototype =\r\n{\r\n\t/**\r\n\t * Declarations is used to declare instance properties used by this class\r\n\t * @param\t\t{...*}\r\n\t * @returns\t\t{void}\r\n\t */\r\n\tdeclarations: function() {},\r\n\t\r\n\t/**\r\n\t * Preinitialize is called before any code in the constructor has been run\r\n\t * @param\t\t{...*}\r\n\t * @returns\t\t{void}\r\n\t */\r\n\tpreinitialize: function() {},\r\n\t\r\n\t/**\r\n\t * Initialize (entry point) is called immediately after the constructor has completed\r\n\t * @param\t\t{...*}\r\n\t * @returns\t\t{void}\r\n\t */\r\n\tinitialize: function() {},\r\n\t\r\n\t/**\r\n\t * Similar to `super` in ActionScript or Java, this property enables \r\n\t * you to access properties and methods of the super class prototype, \r\n\t * which is the case of JavaScript is the next prototype up the chain\r\n\t * \r\n\t * @returns\t{*}\r\n\t */\r\n\tget supro()\r\n\t{\r\n\t\treturn Object.getPrototypeOf(Object.getPrototypeOf(this));\r\n\t},\r\n\t\r\n\t/**\r\n\t * Scope all methods of this class instance to this class instance\r\n\t * @param\t\t{...string}\t[methodName]\tSpecific method names to bind (all will be bound if none specified)\r\n\t * @returns \t{this}\r\n\t */\r\n\tbindAll: function()\r\n\t{\r\n\t\tconbo.bindAll.apply(conbo, [this].concat(conbo.toArray(arguments)));\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * String representation of the current class\r\n\t * @returns\t\t{string}\r\n\t */\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Class';\r\n\t},\r\n};\r\n\r\n__denumerate(conbo.Class.prototype);\r\n\r\n/**\r\n * Extend this class to create a new class\r\n * \r\n * @memberof \tconbo.Class\r\n * @param\t\t{Object}\t[protoProps] - Object containing the new class's prototype\r\n * @param\t\t{Object}\t[staticProps] - Object containing the new class's static methods and properties\r\n * \r\n * @example\t\t\r\n * var MyClass = conbo.Class.extend\r\n * ({\r\n * \tdoSomething:function()\r\n * \t{ \r\n * \t\tconbo.log(':-)');\r\n * \t}\r\n * });\r\n */\r\nconbo.Class.extend = function(protoProps, staticProps)\r\n{\r\n\tvar parent = this;\r\n\t\r\n\t/**\r\n\t * The constructor function for the new subclass is either defined by you\r\n\t * (the 'constructor' property in your `extend` definition), or defaulted\r\n\t * by us to simply call the parent's constructor.\r\n\t * @ignore\r\n\t */\r\n\tvar child = protoProps && conbo.has(protoProps, 'constructor')\r\n\t\t? protoProps.constructor\r\n\t\t: function() { return parent.apply(this, arguments); };\r\n\t\r\n\tconbo.defineValues(child, parent, staticProps);\r\n\t\r\n\t/**\r\n\t * Set the prototype chain to inherit from parent, without calling\r\n\t * parent's constructor\r\n\t * @ignore\r\n\t */\r\n\tvar Surrogate = function(){ this.constructor = child; };\r\n\tSurrogate.prototype = parent.prototype;\r\n\tchild.prototype = new Surrogate();\r\n\t\r\n\tif (protoProps)\r\n\t{\r\n\t\tconbo.defineValues(child.prototype, protoProps);\r\n\t}\r\n\t\r\n\treturn child;\r\n};\r\n\r\n/**\r\n * Implements the specified pseudo-interface(s) on the class, copying \r\n * the default methods or properties from the partial(s) if they have \r\n * not already been implemented.\r\n * \r\n * @memberof\tconbo.Class\r\n * @param\t\t{...Object} interface - Object containing one or more properties or methods to be implemented (an unlimited number of parameters can be passed)\r\n * \r\n * @example\r\n * var MyClass = conbo.Class.extend().implement(conbo.IInjectable);\r\n */\r\nconbo.Class.implement = function()\r\n{\r\n\tvar implementation = conbo.defineDefaults.apply(conbo, conbo.union([{}], arguments)),\r\n\t\tkeys = conbo.keys(implementation),\r\n\t\tprototype = this.prototype;\r\n\t\r\n\tconbo.defineDefaults(this.prototype, implementation);\r\n\t\r\n\tvar rejected = conbo.reject(keys, function(key)\r\n\t{\r\n\t\treturn prototype[key] !== conbo.notImplemented;\r\n\t});\r\n\t\r\n\tif (rejected.length)\r\n\t{\r\n\t\tthrow new Error(prototype.toString()+' does not implement the following method(s): '+rejected.join(', '));\r\n\t}\r\n\t\r\n\treturn this;\r\n};\r\n\r\n/**\r\n * Conbo class\r\n * \r\n * Base class for most Conbo framework classes that calls preinitialize before \r\n * the constructor and initialize afterwards, populating the options parameter\r\n * with an empty Object if no parameter is passed and automatically making all\r\n * properties bindable.\r\n * \r\n * @class\t\tConboClass\r\n * @memberof\tconbo\r\n * @augments\tconbo.Class\r\n * @author\t\tNeil Rackett\r\n * @param \t\t{Object}\toptions - Class configuration object\r\n */\r\nconbo.ConboClass = conbo.Class.extend(\r\n/** @lends conbo.ConboClass.prototype */\r\n{\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param \t{Object|conbo.Context}\t[options] - Options object\r\n\t */\r\n\tconstructor: function(options)\r\n\t{\r\n\t\tvar args = conbo.toArray(arguments);\r\n\t\t\r\n\t\tif (args[0] === undefined) \r\n\t\t{\r\n\t\t\targs[0] = {};\r\n\t\t}\r\n\t\telse if (args[0] instanceof conbo.Context && conbo.is(this, conbo.IInjectable, false)) \r\n\t\t{\r\n\t\t\targs[0] = args[0].addTo();\r\n\t\t}\r\n\t\t\r\n\t\tif (!!args[0].context)\r\n\t\t{\r\n\t\t\tthis.context = args[0].context;\r\n\t\t}\r\n\t\r\n\t\tthis.declarations.apply(this, args);\r\n\t\tthis.preinitialize.apply(this, args);\r\n\t\tthis.__construct.apply(this, args);\r\n\t\t\r\n\t\tthis.initialize.apply(this, args);\r\n\t\tconbo.makeAllBindable(this, this.bindable);\r\n\t\tthis.__postInitialize.apply(this, args);\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.ConboClass';\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__construct: function() {},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__postInitialize: function() {}\r\n\t\r\n});\r\n\r\n__denumerate(conbo.ConboClass.prototype);\r\n\r\n/**\r\n * Conbo namespaces enable you to create modular, encapsulated code, similar to\r\n * how you might use packages in languages like Java or ActionScript.\r\n * \r\n * By default, namespaces will automatically call initDom() when the HTML page\r\n * has finished loading.\r\n * \r\n * @class\t\tNamespace\r\n * @memberof\tconbo\r\n * @augments\tconbo.Class\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options\r\n */\r\nconbo.Namespace = conbo.ConboClass.extend(\r\n/** @lends conbo.Namespace.prototype */\r\n{\r\n\t__construct: function()\r\n\t{\r\n\t\tvar readyHandler = function()\r\n\t\t{\r\n\t\t\tif (document && this.autoInit !== false)\r\n\t\t\t{\r\n\t\t\t\tthis.initDom();\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tconbo.ready(readyHandler, this);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Search the DOM and initialize Applications contained in this namespace\r\n\t * \r\n\t * @param \t{Element} \t[rootEl] - The root element to initialize\r\n\t * @returns {this}\r\n\t */\r\n\tinitDom: function(rootEl)\r\n\t{\r\n\t\tconbo.initDom(this, rootEl);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Watch the DOM and automatically initialize Applications contained in \r\n\t * this namespace when an element with the appropriate cb-app attribute\r\n\t * is added.\r\n\t * \r\n\t * @param \t{Element} \t[rootEl] - The root element to initialize\r\n\t * @returns {this}\r\n\t */\r\n\tobserveDom: function(rootEl)\r\n\t{\r\n\t\tconbo.observeDom(this, rootEl);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Stop watching the DOM for Applications\r\n\t * \r\n\t * @param \t{Element} \t[rootEl] - The root element to initialize\r\n\t * @returns {this}\r\n\t */\r\n\tunobserveDom: function(rootEl)\r\n\t{\r\n\t\tconbo.unobserveDom(this, rootEl);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add classes, properties or methods to the namespace. Using this method\r\n\t * will not overwrite existing items of the same name.\r\n\t * \r\n\t * @param \t{Object}\t\t\tobj - An object containing items to add to the namespace \r\n\t * @returns\t{conbo.Namespace}\tThis Namespace instance\r\n\t */\r\n\timport: function(obj)\r\n\t{\r\n\t\tconbo.setDefaults.apply(conbo, [this].concat(conbo.toArray(arguments)));\r\n\t\treturn this;\r\n\t},\r\n\t\r\n});\r\n\r\n/**\r\n * Partial class that enables the ConboJS framework to add the application\r\n * specific Context class instance and inject specified dependencies \r\n * (properties of undefined value which match registered singletons); should\r\n * be used via the Class.implement method\r\n * \r\n * @memberof\tconbo\r\n * @example\t\tvar C = conbo.Class.extend().implement(conbo.IInjectable);\r\n * @example\t\tconbo.defineValues(classInstance, conbo.IInjectable);\r\n * @author\t\tNeil Rackett\r\n */\r\nconbo.IInjectable =\r\n{\r\n\t/**\r\n\t * The current class instance's context\r\n\t * @type\t{conbo.Context}\r\n\t */\r\n\tget context()\r\n\t{\r\n\t\treturn this.__context;\r\n\t},\r\n\t\r\n\tset context(value)\r\n\t{\r\n\t\tif (value == this.__context) return;\r\n\t\t\r\n\t\tif (value instanceof conbo.Context) \r\n\t\t{\r\n\t\t\tvalue.injectSingletons(this);\r\n\t\t}\r\n\t\t\r\n\t\tthis.__context = value;\r\n\t\t\r\n\t\t__denumerate(this, '__context');\r\n\t}\r\n\t\r\n};\r\n\r\n/**\r\n * Event class\r\n * \r\n * Base class for all events triggered in ConboJS\r\n * \r\n * @class\t\tEvent\r\n * @memberof\tconbo\r\n * @augments\tconbo.Class\r\n * @author\t\tNeil Rackett\r\n * @param \t\t{string}\ttype - The type of event this object represents\r\n */\r\nconbo.Event = conbo.Class.extend(\r\n/** @lends conbo.Event.prototype */\r\n{\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param \t{string} type - The type of event this class instance represents\r\n\t */\r\n\tconstructor: function(type)\r\n\t{\r\n\t\tthis.preinitialize.apply(this, arguments);\r\n\t\t\r\n\t\tif (conbo.isString(type)) \r\n\t\t{\r\n\t\t\tthis.type = type;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tconbo.defineDefaults(this, type);\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.type) \r\n\t\t{\r\n\t\t\tthrow new Error('Invalid or undefined event type');\r\n\t\t}\r\n\t\t\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Initialize: Override this!\r\n\t * @param \t{string} type - The type of event this class instance represents\r\n\t * @param \t{*} data - Data to store in the event's data property\r\n\t */\r\n\tinitialize: function(type, data)\r\n\t{\r\n\t\tthis.data = data;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an identical clone of this event\r\n\t * @returns \t{conbo.Event}\tA clone of this event\r\n\t */\r\n\tclone: function()\r\n\t{\r\n\t\treturn conbo.clone(this);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Prevent whatever the default framework action for this event is\r\n\t * @returns\t{conbo.Event}\tA reference to this event instance \r\n\t */\r\n\tpreventDefault: function() \r\n\t{\r\n\t\tthis.defaultPrevented = true;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Not currently used\r\n\t * @returns\t{conbo.Event}\tA reference to this event instance\r\n\t */\r\n\tstopPropagation: function() \r\n\t{\r\n\t\tthis.cancelBubble = true;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Keep the rest of the handlers from being executed\r\n\t * @returns\t{conbo.Event}\tA reference to this event \r\n\t */\r\n\tstopImmediatePropagation: function() \r\n\t{\r\n\t\tthis.immediatePropagationStopped = true;\r\n\t\tthis.stopPropagation();\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Event';\r\n\t}\r\n},\r\n/** @lends conbo.Event */\r\n{\r\n\tALL: '*',\r\n});\r\n\r\n__denumerate(conbo.Event.prototype);\r\n\r\n/**\r\n * conbo.Event\r\n * \r\n * Default event class for events fired by ConboJS\r\n * \r\n * For consistency, callback parameters of Backbone.js derived classes \r\n * are event object properties in ConboJS\r\n * \r\n * @class\t\tConboEvent\r\n * @memberof\tconbo\r\n * @augments\tconbo.Event\r\n * @author\t\tNeil Rackett\r\n * @param \t\t{string}\ttype - The type of event this object represents\r\n * @param \t\t{Object}\toptions - Properties to be added to this event object\r\n */\r\nconbo.ConboEvent = conbo.Event.extend(\r\n/** @lends conbo.ConboEvent.prototype */\r\n{\r\n\t/**\r\n\t * Initialize the ConboEvent class instance\r\n\t * @param\t{string}\ttype - The type of event this class instance represents\r\n\t * @param\t{Object}\t[options] - Object containing additional properties to add to this class instance\t\r\n\t */\r\n\tinitialize: function(type, options)\r\n\t{\r\n\t\tconbo.defineDefaults(this, options);\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.ConboEvent';\r\n\t}\r\n},\r\n/** @lends conbo.ConboEvent */\r\n{\r\n\t/** \r\n\t * Special event used to listed for all event types \r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#ALL\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tALL:\t\t\t\t'*',\r\n\r\n\t/**\r\n\t * Something has changed (also 'change:[name]')\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#CHANGE\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n     * @property\t\t{string} property - The name of the property that changed\r\n     * @property\t\t{*} value - The new value of the property\r\n\t */\r\n\tCHANGE:\t\t\t\t'change',\r\n\t\r\n\t/** \r\n\t * Something was added\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#ADD\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tADD:\t\t\t\t'add', \t\t\t\t\r\n\r\n\t/**\r\n\t * Something was removed\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#REMOVE\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tREMOVE:\t\t\t\t'remove',\r\n\r\n\t/**\r\n\t * The route has changed (also 'route:[name]')\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#ROUTE\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n     * @property\t\t{conbo.Router}\trouter - The router that handled the route change\r\n     * @property\t\t{RegExp} \t\troute - The route that was followed\r\n     * @property\t\t{string} \t\tname - The name assigned to the route\r\n     * @property\t\t{Array} \t\tparameters - The parameters extracted from the route\r\n     * @property\t\t{string} \t\tpath - The new path \r\n\t */\r\n\tROUTE:\t\t\t\t'route', \t\t\t\r\n\r\n\t/** \r\n\t * Something has started\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#START\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tSTART:\t\t\t\t'start',\r\n\r\n\t/**\r\n\t * Something has stopped\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#STOP\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tSTOP:\t\t\t\t'stop',\r\n\t\r\n\t/**\r\n\t * A template is ready to use\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#TEMPLATE_COMPLETE\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tTEMPLATE_COMPLETE:\t'templateComplete',\r\n\r\n\t/** \r\n\t * A template error has occurred\r\n\t *  \r\n\t * @event\t\t\tconbo.ConboEvent#TEMPLATE_ERROR\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tTEMPLATE_ERROR:\t\t'templateError',\r\n\r\n\t/** \r\n\t * Something has been bound\r\n\t *  \r\n\t * @event\t\t\tconbo.ConboEvent#BIND\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tBIND:\t\t\t\t'bind',\r\n\r\n\t/** \r\n\t * Something has been unbound\r\n\t *  \r\n\t * @event\t\t\tconbo.ConboEvent#UNBIND\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tUNBIND:\t\t\t\t'unbind',\t\t\t\r\n\r\n\t/** \r\n\t * Something has been created and it's ready to use\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#CREATION_COMPLETE\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tCREATION_COMPLETE:\t'creationComplete',\r\n\t\r\n\t/** \r\n\t * Something has been detached\r\n\t * \r\n\t * @event\t\t\tconbo.ConboEvent#DETACH\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n\t */\r\n\tDETACH:\t\t\t\t'detach',\r\n\t\r\n\t/** \r\n\t * A result has been received\r\n\t *  \r\n\t * @event\t\t\tconbo.ConboEvent#RESULT\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n     * @property\t\t{*} result - The data received \r\n\t */\r\n\tRESULT:\t\t\t\t'result',\r\n\t\r\n\t/** \r\n\t * A fault has occurred\r\n\t *  \r\n\t * @event\t\t\tconbo.ConboEvent#FAULT\r\n     * @type \t\t\t{conbo.ConboEvent}\r\n     * @property\t\t{*} fault - The fault received \r\n\t */\r\n\tFAULT:\t\t\t\t'fault',\t\t\t\r\n\t\r\n});\r\n\r\n(function()\r\n{\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tvar EventDispatcher__addEventListener = function(type, handler, scope, priority, once)\r\n\t{\r\n\t\tif (type == '*') type = 'all';\r\n\t\tif (!this.__queue) __definePrivateProperty(this, '__queue', {});\r\n\t\t\r\n\t\tif (!this.hasEventListener(type, handler, scope))\r\n\t\t{\r\n\t\t\tif (!(type in this.__queue)) this.__queue[type] = [];\r\n\t\t\tthis.__queue[type].push({handler:handler, scope:scope, once:once, priority:priority||0});\r\n\t\t\tthis.__queue[type].sort(function(a,b){return b.priority-a.priority;});\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tvar EventDispatcher__removeEventListener = function(type, handler, scope)\r\n\t{\r\n\t\tif (type == '*') type = 'all';\r\n\t\tif (!this.__queue) return;\r\n\t\t\r\n\t\tvar queue, \r\n\t\t\ti, \r\n\t\t\tself = this;\r\n\t\t\r\n\t\tvar removeFromQueue = function(queue, key)\r\n\t\t{\r\n\t\t\tfor (i=0; i<queue.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif ((!queue[i].handler || queue[i].handler == handler)\r\n\t\t\t\t\t&& (!queue[i].scope || queue[i].scope == scope))\r\n\t\t\t\t{\r\n\t\t\t\t\tqueue.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!queue.length)\r\n\t\t\t{\r\n\t\t\t\tdelete self.__queue[key];\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tif (type in this.__queue)\r\n\t\t{\r\n\t\t\tqueue = this.__queue[type];\r\n\t\t\tremoveFromQueue(queue, type);\r\n\t\t}\r\n\t\telse if (type == undefined)\r\n\t\t{\r\n\t\t\tconbo.forEach(this.__queue, function(queue, key)\r\n\t\t\t{\r\n\t\t\t\tremoveFromQueue(queue, key);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * Event Dispatcher\r\n\t * \r\n\t * Event model designed to bring events into line with DOM events and those \r\n\t * found in HTML DOM, jQuery and ActionScript 2 & 3, offering a more \r\n\t * predictable, object based approach to event dispatching and handling\r\n\t * \r\n\t * Should be used as the base class for any class that won't be used for \r\n\t * data binding\r\n\t * \r\n\t * @class\t\tEventDispatcher\r\n\t * @memberof\tconbo\r\n\t * @augments\tconbo.Class\r\n\t * @augments\tconbo.IInjectable\r\n\t * @author\t\tNeil Rackett\r\n\t * @param \t\t{Object} options - Object containing optional initialisation options, including 'context'\r\n\t */\r\n\tconbo.EventDispatcher = conbo.ConboClass.extend(\r\n\t/** @lends conbo.EventDispatcher.prototype */\r\n\t{\r\n\t\t/**\r\n\t\t * Add a listener for a particular event type\r\n\t\t * \r\n\t\t * @param \t{string}\t\ttype - Type of event ('change') or events ('change blur')\r\n\t\t * @param \t{Function}\t\thandler - Function that should be called\r\n\t\t * @param \t{Object}\t\t[scope] - The scope in which to run the event handler\r\n\t\t * @param \t{number}\t\t[priority=0] - The event handler's priority when the event is dispatached\r\n\t\t * @param \t{boolean}\t\t[once=false] - Should the event listener automatically be removed after it has been called once?\r\n\t\t * @returns\t{conbo.EventDispatcher}\tA reference to this class instance \r\n\t\t */\r\n\t\taddEventListener: function(type, handler, scope, priority, once)\r\n\t\t{\r\n\t\t\tif (!type) throw new Error('Event type undefined');\r\n\t\t\tif (!handler || !conbo.isFunction(handler)) throw new Error('Event handler is undefined or not a function');\r\n\t\r\n\t\t\tif (conbo.isString(type)) type = type.split(' ');\r\n\t\t\tif (conbo.isArray(type)) conbo.forEach(type, function(value, index, list) { EventDispatcher__addEventListener.call(this, value, handler, scope, priority, !!once); }, this);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove a listener for a particular event type\r\n\t\t * \r\n\t\t * @param {string}\t\t[type] - Type of event ('change') or events ('change blur'), if not specified, all listeners will be removed \r\n\t\t * @param {Function}\t[handler] - Function that should be called, if not specified, all listeners of the specified type will be removed\r\n\t\t * @param {Object} \t\t[scope] - The scope in which the handler is set to run\r\n\t\t * @returns\t{conbo.EventDispatcher}\tA reference to this class instance \r\n\t\t */\r\n\t\tremoveEventListener: function(type, handler, scope)\r\n\t\t{\r\n\t\t\tif (!arguments.length)\r\n\t\t\t{\r\n\t\t\t\t__definePrivateProperty(this, '__queue', {});\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (conbo.isString(type)) type = type.split(' ');\r\n\t\t\tif (!conbo.isArray(type)) type = [undefined];\r\n\t\t\t\r\n\t\t\tconbo.forEach(type, function(value, index, list) \r\n\t\t\t{\r\n\t\t\t\tEventDispatcher__removeEventListener.call(this, value, handler, scope); \r\n\t\t\t}, \r\n\t\t\tthis);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Does this object have an event listener of the specified type?\r\n\t\t * \r\n\t\t * @param \t{string}\ttype - Type of event (e.g. 'change') \r\n\t\t * @param \t{Function}\t[handler] - Function that should be called\r\n\t\t * @param \t{Object} \t[scope] - The scope in which the handler is set to run\r\n\t\t * @returns\t{boolean}\tTrue if this object has the specified event listener, false if it does not\r\n\t\t */\r\n\t\thasEventListener: function(type, handler, scope)\r\n\t\t{\r\n\t\t\tif (!this.__queue \r\n\t\t\t\t|| !(type in this.__queue)\r\n\t\t\t\t|| !this.__queue[type].length)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar queue = this.__queue[type];\r\n\t\t\tvar length = queue.length;\r\n\t\t\t\r\n\t\t\tfor (var i=0; i<length; i++)\r\n\t\t\t{\r\n\t\t\t\tif ((!handler || queue[i].handler == handler) \r\n\t\t\t\t\t&& (!scope || queue[i].scope == scope))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Dispatch the event to listeners\r\n\t\t * @param {conbo.Event} \tevent - The event to dispatch\r\n\t\t * @returns\t{conbo.EventDispatcher}\tA reference to this class instance \r\n\t\t */\r\n\t\tdispatchEvent: function(event)\r\n\t\t{\r\n\t\t\tif (!(event instanceof conbo.Event))\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('event parameter is not an instance of conbo.Event');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!this.__queue || (!(event.type in this.__queue) && !this.__queue.all)) return this;\r\n\t\t\t\r\n\t\t\tif (!event.target) event.target = this;\r\n\t\t\tevent.currentTarget = this;\r\n\t\t\t\r\n\t\t\tvar queue = conbo.union(this.__queue[event.type] || [], this.__queue.all || []);\r\n\t\t\tif (!queue || !queue.length) return this;\r\n\t\t\t\r\n\t\t\tfor (var i=0, length=queue.length; i<length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar value = queue[i];\r\n\t\t\t\tvar returnValue = value.handler.call(value.scope || this, event);\r\n\t\t\t\tif (value.once) EventDispatcher__removeEventListener.call(this, event.type, value.handler, value.scope);\r\n\t\t\t\tif (returnValue === false || event.immediatePropagationStopped) break;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Dispatch a change event for one or more changed properties\r\n\t\t * @param {string}\tpropName - The name of the property that has changed\r\n\t\t * @returns\t{conbo.EventDispatcher}\tA reference to this class instance \r\n\t\t */\r\n\t\tdispatchChange: function(propName)\r\n\t\t{\r\n\t\t\tconbo.forEach(arguments, function(propName)\r\n\t\t\t{\r\n\t\t\t\t__dispatchChange(this, propName);\r\n\t\t\t},\r\n\t\t\tthis);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\ttoString: function()\r\n\t\t{\r\n\t\t\treturn 'conbo.EventDispatcher';\r\n\t\t},\r\n\t\t\r\n\t}).implement(conbo.IInjectable);\r\n\t\r\n\t//__definePrivateProperty(conbo.EventDispatcher.prototype, 'bindable');\r\n\t__denumerate(conbo.EventDispatcher.prototype);\r\n\t\r\n})();\r\n\r\n/**\r\n * Event Proxy\r\n * \r\n * Standardises the adding and removing of event listeners across DOM elements,\r\n * Conbo EventDispatchers and jQuery instances \r\n * \r\n * @class\t\tEventProxy\r\n * @memberof\tconbo\r\n * @augments\tconbo.Class\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} eventDispatcher - Element, EventDispatcher or jQuery object to be proxied\r\n */\r\nconbo.EventProxy = conbo.Class.extend(\r\n/** @lends conbo.EventProxy.prototype */\r\n{\r\n\tconstructor: function(obj)\r\n\t{\r\n\t\tthis.__obj = obj;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add a listener for a particular event type\r\n\t * \r\n\t * @param \t{string}\t\t\ttype - Type of event ('change') or events ('change blur')\r\n\t * @param \t{Function}\t\t\thandler - Function that should be called\r\n\t * @returns\t{conbo.EventProxy}\tA reference to this class instance \r\n\t */\r\n\taddEventListener: function(type, handler)\r\n\t{\r\n\t\tvar obj = this.__obj;\r\n\t\t\r\n\t\tif (obj)\r\n\t\t{\r\n\t\t\tswitch (true)\r\n\t\t\t{\r\n\t\t\t\t// TODO Remove the last tiny piece of jQuery support?\r\n\t\t\t\tcase conbo.$ && obj instanceof conbo.$:\r\n\t\t\t\tcase window.$ && obj instanceof window.$:\r\n\t\t\t\t{\r\n\t\t\t\t\tobj.on(type, handler);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase obj instanceof conbo.EventDispatcher:\r\n\t\t\t\t{\r\n\t\t\t\t\tobj.addEventListener(type, handler);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t{\r\n\t\t\t\t\tvar types = type.split(' ');\r\n\t\t\t\t\t\r\n\t\t\t\t\ttypes.forEach(function(type)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tobj.addEventListener(type, handler);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove a listener for a particular event type\r\n\t * \r\n\t * @param \t{string}\t\t\ttype - Type of event ('change') or events ('change blur')\r\n\t * @param \t{Function}\t\t\thandler - Function that should be called\r\n\t * @returns\t{conbo.EventProxy}\tA reference to this class instance \r\n\t */\r\n\tremoveEventListener: function(type, handler)\r\n\t{\r\n\t\tvar obj = this.__obj;\r\n\t\t\r\n\t\tif (obj)\r\n\t\t{\r\n\t\t\tswitch (true)\r\n\t\t\t{\r\n\t\t\t\t// TODO Remove the last tiny piece of jQuery support?\r\n\t\t\t\tcase conbo.$ && obj instanceof conbo.$:\r\n\t\t\t\tcase window.$ && obj instanceof window.$:\r\n\t\t\t\t{\r\n\t\t\t\t\tobj.off(type, handler);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase obj instanceof conbo.obj:\r\n\t\t\t\t{\r\n\t\t\t\t\tobj.removeEventListener(type, handler);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t{\r\n\t\t\t\t\tvar types = type.split(' ');\r\n\t\t\t\t\t\r\n\t\t\t\t\ttypes.forEach(function(type)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tobj.removeEventListener(type, handler);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n});\r\n\r\n/**\r\n * Server Application \r\n * \r\n * Base class for applications that don't require DOM, e.g. Node.js\r\n * \r\n * @class\t\tServerApplication\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author\t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options\r\n */\r\nconbo.ServerApplication = conbo.EventDispatcher.extend(\r\n/** @lends conbo.ServerApplication.prototype */\r\n{\r\n\t/**\r\n\t * Default context class to use\r\n\t * You'll normally want to override this with your own\r\n\t */\r\n\tcontextClass: conbo.Context,\r\n\t\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param options\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\toptions = conbo.clone(options || {});\r\n\t\toptions.app = this;\r\n\t\t\r\n\t\tthis.context = new this.contextClass(options);\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.ServerApplication';\r\n\t}\r\n\t\r\n}).implement(conbo.IInjectable);\r\n\r\n__denumerate(conbo.ServerApplication.prototype);\r\n\r\n/**\r\n * conbo.Context\r\n * \r\n * This is your application's event bus and dependency injector, and is\r\n * usually where all your models and web service classes are registered,\r\n * using mapSingleton(...), and Command classes are mapped to events \r\n * \r\n * @class\t\tContext\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author\t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options, including 'app' (Application) and 'namespace' (Namespace) \r\n */\r\nconbo.Context = conbo.EventDispatcher.extend(\r\n/** @lends conbo.Context.prototype */\r\n{\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param options\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\t__definePrivateProperties(this, \r\n\t\t{\r\n\t\t\t__commands: {},\r\n\t\t\t__singletons: {},\r\n\t\t\t__app: options.app,\r\n\t\t\t__namespace: options.namespace || options.app.namespace,\r\n\t\t\t__parentContext: options.context\r\n\t\t});\r\n\t\t\r\n\t\tthis.addEventListener(conbo.Event.ALL, this.__allHandler);\r\n\t},\r\n\t\r\n\t/**\r\n\t * The Application instance associated with this context\r\n\t * @returns {conbo.Application}\r\n\t */\r\n\tget app()\r\n\t{\r\n\t\treturn this.__app;\r\n\t},\r\n\t\r\n\t/**\r\n\t * The Namespace this context exists in\r\n\t * @returns {conbo.Namespace}\r\n\t */\r\n\tget namespace()\r\n\t{\r\n\t\treturn this.__namespace;\r\n\t},\r\n\t\r\n\t/**\r\n\t * If this is a subcontext, this is a reference to the Context that created it\r\n\t * @returns {conbo.Context}\r\n\t */\r\n\tget parentContext()\r\n\t{\r\n\t\treturn this.__parentContext;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create a new subcontext that shares the same application\r\n\t * and namespace as this one\r\n\t * \r\n\t * @param\t{class} contextClass - The context class to use (default: conbo.Context)\r\n\t * @returns {conbo.Context}\r\n\t */\r\n\tcreateSubcontext: function(contextClass)\r\n\t{\r\n\t\tcontextClass || (contextClass = conbo.Context);\r\n\t\treturn new contextClass({context:this, app:this.app, namespace:this.namespace});\r\n\t},\r\n\t\r\n\t/**\r\n\t * Map specified Command class the given event\r\n\t * @param\t{string}\teventType - The name of the event\r\n\t * @param\t{class}\t\tcommandClass - The command class to instantiate when the event is dispatched\r\n\t */\r\n\tmapCommand: function(eventType, commandClass)\r\n\t{\r\n\t\tif (!eventType) throw new Error('eventType cannot be undefined');\r\n\t\tif (!commandClass) throw new Error('commandClass for '+eventType+' cannot be undefined');\r\n\t\t\r\n\t\tif (this.__mapMulti(eventType, commandClass, this.mapCommand)) return;\r\n\t\t\r\n\t\tif (this.__commands[eventType] && this.__commands[eventType].indexOf(commandClass) != -1)\r\n\t\t{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis.__commands[eventType] = this.__commands[eventType] || [];\r\n\t\tthis.__commands[eventType].push(commandClass);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Unmap specified Command class from given event\r\n\t */\r\n\tunmapCommand: function(eventType, commandClass)\r\n\t{\r\n\t\tif (!eventType) throw new Error('eventType cannot be undefined');\r\n\t\tif (this.__mapMulti(eventType, commandClass, this.unmapCommand)) return;\r\n\t\t\r\n\t\tif (commandClass === undefined)\r\n\t\t{\r\n\t\t\tdelete this.__commands[eventType];\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.__commands[eventType]) return;\r\n\t\tvar index = this.__commands[eventType].indexOf(commandClass);\r\n\t\tif (index == -1) return;\r\n\t\tthis.__commands[eventType].splice(index, 1);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Map class instance to a property name\r\n\t * \r\n\t * To inject a property into a class, register the property name\r\n\t * with the Context and declare the value as undefined in your class\r\n\t * to enable it to be injected at run time\r\n\t * \r\n\t * @example\t\tcontext.mapSingleton('myProperty', MyModel);\r\n\t * @example\t\tmyProperty: undefined\r\n\t */\r\n\tmapSingleton: function(propertyName, singletonClass)\r\n\t{\r\n\t\tif (!propertyName) throw new Error('propertyName cannot be undefined');\r\n\t\t\r\n\t\tif (singletonClass === undefined)\r\n\t\t{\r\n\t\t\tconbo.warn('singletonClass for '+propertyName+' is undefined');\r\n\t\t}\r\n\t\t\r\n\t\tif (this.__mapMulti(propertyName, singletonClass, this.mapSingleton)) return;\r\n\t\t\r\n\t\tthis.__singletons[propertyName] = conbo.isClass(singletonClass)\r\n\t\t\t// TODO Improved dynamic class instantiation\r\n\t\t\t? new singletonClass(arguments[2], arguments[3], arguments[4])\r\n\t\t\t: singletonClass;\r\n\t\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Unmap class instance from a property name\r\n\t */\r\n\tunmapSingleton: function(propertyName)\r\n\t{\r\n\t\tif (!propertyName) throw new Error('propertyName cannot be undefined');\r\n\t\tif (this.__mapMulti(propertyName, null, this.unmapSingleton)) return;\r\n\t\t\r\n\t\tif (!this.__singletons[propertyName]) return;\r\n\t\tdelete this.__singletons[propertyName];\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Map constant value to a property name\r\n\t * \r\n\t * To inject a constant into a class, register the property name\r\n\t * with the Context and declare the property as undefined in your \r\n\t * class to enable it to be injected at run time\r\n\t * \r\n\t * @example\t\tcontext.mapConstant('MY_VALUE', 123);\r\n\t * @example\t\tMY_VALUE: undefined\r\n\t */\r\n\tmapConstant: function(propertyName, value)\r\n\t{\r\n\t\treturn this.mapSingleton(propertyName, value);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Unmap constant value from a property name\r\n\t */\r\n\tunmapConstant: function(propertyName)\r\n\t{\r\n\t\treturn this.unmapSingleton(propertyName);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add this Context to the specified Object, or create an object with a \r\n\t * reference to this Context\r\n\t */\r\n\taddTo: function(obj)\r\n\t{\r\n\t\treturn conbo.defineValues(obj || {}, {context:this});\r\n\t},\r\n\t\r\n\t/**\r\n\t * Inject singleton instances into specified object\r\n\t * \r\n\t * @param\tobj\t\t{Object} \tThe object to inject singletons into\r\n\t */\r\n\tinjectSingletons: function(obj)\r\n\t{\r\n\t\tfor (var a in this.__singletons)\r\n\t\t{\r\n\t\t\tif (!(a in obj) || obj[a] !== undefined) continue;\r\n\t\t\tobj[a] = this.__singletons[a];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set all singleton instances on the specified object to undefined\r\n\t * \r\n\t * @param\tobj\t\t{Object} \tThe object to remove singletons from\r\n\t */\r\n\tuninjectSingletons: function(obj)\r\n\t{\r\n\t\tfor (var a in this.__singletons)\r\n\t\t{\r\n\t\t\tif (a in obj) obj[a] = undefined;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Context';\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__allHandler: function(event)\r\n\t{\r\n\t\tvar commands = conbo.union(this.__commands.all || [], this.__commands[event.type] || []);\r\n\t\tif (!commands.length) return;\r\n\t\t\r\n\t\tconbo.forEach(commands, function(commandClass, index, list)\r\n\t\t{\r\n\t\t\tthis.__executeCommand(commandClass, event);\r\n\t\t}, \r\n\t\tthis);\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__executeCommand: function(commandClass, event)\r\n\t{\r\n\t\tvar command, options;\r\n\t\t\r\n\t\toptions = {event:event};\r\n\t\t\r\n\t\tcommand = new commandClass(this.addTo(options));\r\n\t\tcommand.execute();\r\n\t\tcommand = null;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__mapMulti: function(n, c, f)\r\n\t{\r\n\t\tif (conbo.isArray(n) || n.indexOf(' ') == -1) return false;\r\n\t\tvar names = conbo.isArray(n) ? n : n.split(' ');\r\n\t\tconbo.forEach(names, function(e) { f(e,c); }, this);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n});\r\n\r\n__denumerate(conbo.Context.prototype);\r\n\r\n/**\r\n * conbo.Hash\r\n * A Hash is a bindable object of associated keys and values\r\n * \r\n * @class\t\tHash\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing optional initialisation options, including 'source' (object) containing initial values\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n */\r\nconbo.Hash = conbo.EventDispatcher.extend(\r\n/** @lends conbo.Hash.prototype */\r\n{\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param options\r\n\t * @private\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\t// If this Hash has an external source, ensure it's kept up-to-date\r\n\t\tif (options.source)\r\n\t\t{\r\n\t\t\tvar changeHandler = function(event)\r\n\t\t\t{\r\n\t\t\t\toptions.source[event.property] = event.value;\r\n\t\t\t};\r\n\r\n\t\t\tthis.addEventListener('change', changeHandler, this);\r\n\t\t}\r\n\r\n\t\tconbo.setValues(this, conbo.setDefaults({}, options.source, this.toJSON(), this._defaults));\r\n\t\tdelete this._defaults;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Returns a version of this object that can easily be converted into JSON\r\n\t * @function\r\n\t * @returns\t{Object}\r\n\t */\r\n\ttoJSON: conbo.jsonify,\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Hash';\r\n\t}\r\n\t\r\n});\r\n\r\n__denumerate(conbo.Hash.prototype);\r\n\r\n/**\r\n * A persistent Hash that stores data in LocalStorage or Session\r\n * \r\n * @class\t\tLocalHash\r\n * @memberof\tconbo\r\n * @augments\tconbo.Hash\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options, including 'name' (string), 'session' (Boolean) and 'source' (object) containing default values; see Hash for other options\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n */\r\nconbo.LocalHash = conbo.Hash.extend(\r\n/** @lends conbo.LocalHash.prototype */\r\n{\r\n\t__construct: function(options)\r\n\t{\r\n\t\tvar defaultName = 'ConboLocalHash';\r\n\t\t\r\n\t\toptions = conbo.defineDefaults(options, {name:defaultName});\r\n\t\t\r\n\t\tvar name = options.name;\r\n\t\t\r\n\t\tvar storage = options.session\r\n\t\t\t? window.sessionStorage\r\n\t\t\t: window.localStorage;\r\n\t\t\r\n\t\tif (name == defaultName)\r\n\t\t{\r\n\t\t\tconbo.warn('No name specified for '+this.toString+', using \"'+defaultName+'\"');\r\n\t\t}\r\n\t\t\r\n\t\tvar getLocal = function()\r\n\t\t{\r\n\t\t\treturn name in storage \r\n\t\t\t\t? JSON.parse(storage.getItem(name) || '{}')\r\n\t\t\t\t: options.source || {};\r\n\t\t};\r\n\t\t\r\n\t\t// Sync with LocalStorage\r\n\t\tthis.addEventListener(conbo.ConboEvent.CHANGE, function(event)\r\n  \t\t{\r\n  \t\t\tstorage.setItem(name, JSON.stringify(this.toJSON()));\r\n  \t\t}, \r\n  \t\tthis, 1000);\r\n\t\t\r\n\t\toptions.source = getLocal();\r\n\t\t\r\n\t\tconbo.Hash.prototype.__construct.call(this, options);\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * Immediately writes all data to local storage. If you don't use this method, \r\n\t * Conbo writes the data the next time it detects a change to a bindable property.\r\n\t */\r\n\tflush: function()\r\n\t{\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.CHANGE));\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.LocalHash';\r\n\t}\r\n\t\r\n});\r\n\r\n__denumerate(conbo.LocalHash.prototype);\r\n\r\n/**\r\n * A bindable Array wrapper that can be used when you don't require \r\n * web service connectivity.\r\n * \r\n * Plain objects will automatically be converted into an instance of \r\n * the specified `itemClass` when added to a List, and the appropriate\r\n * events dispatched if the items it contains are changed or updated.\r\n * \r\n * @class\t\tList\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing optional initialisation options, including `source` (array), `context` (Context) and `itemClass` (Class)\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n * @fires\t\tconbo.ConboEvent#ADD\r\n * @fires\t\tconbo.ConboEvent#REMOVE\r\n */\r\nconbo.List = conbo.EventDispatcher.extend(\r\n/** @lends conbo.List.prototype */\r\n{\r\n\t/**\r\n\t * The class to use for items in this list (plain JS objects will \r\n\t * automatically be wrapped using this class), defaults to conbo.Hash\r\n\t */\r\n\titemClass: conbo.Hash,\r\n\t\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param options\r\n\t */\r\n\t__construct: function(options) \r\n\t{\r\n\t\tthis.addEventListener(conbo.ConboEvent.CHANGE, this.__changeHandler, this, 999);\r\n\t\t\r\n\t\tvar listOptions = ['itemClass'];\r\n\t\t\r\n\t\tconbo.setValues(this, conbo.pick(options, listOptions));\r\n\t\t\r\n\t\tthis.source = options.source || [];\r\n\t},\r\n\t\r\n\t/**\r\n\t * The Array used as the source for this List\r\n\t */\r\n\tget source()\r\n\t{\r\n\t\tif (!this.__source)\r\n\t\t{\r\n\t\t\tthis.__source = [];\r\n\t\t}\r\n\t\t\r\n\t\treturn this.__source;\r\n\t},\r\n\t\r\n\tset source(value)\r\n\t{\r\n\t\tthis.__source = [];\r\n\t\tthis.push.apply(this, conbo.toArray(value));\r\n\t\tthis.dispatchChange('source', 'length');\r\n\t},\r\n\t\r\n\t/**\r\n\t * The number of items in the List\r\n\t */\r\n\tget length()\r\n\t{\r\n\t\tif (this.source)\r\n\t\t{\r\n\t\t\treturn this.source.length;\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add an item to the end of the collection.\r\n\t */\r\n\tpush: function(item)\r\n\t{\r\n\t\tvar items = conbo.toArray(arguments);\r\n\t\t\r\n\t\tif (items.length)\r\n\t\t{\r\n\t\t\tthis.source.push.apply(this.source, this.__applyItemClass(items));\r\n\t\t\tthis.__updateBindings(items);\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.ADD));\r\n\t\t\tthis.dispatchChange('length');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.length;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove an item from the end of the collection.\r\n\t */\r\n\tpop: function()\r\n\t{\r\n\t\tif (!this.length) return;\r\n\t\t\r\n\t\tvar item = this.source.pop();\r\n\t\t\r\n\t\tthis.__updateBindings(item, false);\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.REMOVE));\r\n\t\tthis.dispatchChange('length');\r\n\t\t\r\n\t\treturn item;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add an item to the beginning of the collection.\r\n\t */\r\n\tunshift: function(item) \r\n\t{\r\n\t\tif (item)\r\n\t\t{\r\n\t\t\tthis.source.unshift.apply(this.source, this.__applyItemClass(conbo.toArray(arguments)));\r\n\t\t\tthis.__updateBindings(conbo.toArray(arguments));\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.ADD));\r\n\t\t\tthis.dispatchChange('length');\r\n\t\t}\r\n\t\t\r\n\t\treturn this.length;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove an item from the beginning of the collection.\r\n\t */\r\n\tshift: function()\r\n\t{\r\n\t\tif (!this.length) return;\r\n\t\t\r\n\t\tvar item = this.source.shift();\r\n\t\t\r\n\t\tthis.__updateBindings(item, false);\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.REMOVE));\r\n\t\tthis.dispatchChange('length');\r\n\t\t\r\n\t\treturn item;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Slice out a sub-array of items from the collection.\r\n\t */\r\n\tslice: function(begin, length)\r\n\t{\r\n\t\tbegin || (begin = 0);\r\n\t\tif (conbo.isUndefined(length)) length = this.length;\r\n\t\t\r\n\t\treturn new conbo.List({source:this.source.slice(begin, length)});\r\n\t},\r\n\t\r\n\t/**\r\n\t * Splice out a sub-array of items from the collection.\r\n\t */\r\n\tsplice: function(begin, length)\r\n\t{\r\n\t\tbegin || (begin = 0);\r\n\t\tif (conbo.isUndefined(length)) length = this.length;\r\n\t\t\r\n\t\tvar inserts = conbo.rest(arguments,2);\r\n\t\tvar items = this.source.splice.apply(this.source, [begin, length].concat(inserts));\r\n\t\t\r\n\t\tif (items.length) this.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.REMOVE));\r\n\t\tif (inserts.length) this.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.ADD));\r\n\t\t\r\n\t\tif (items.length || inserts.length)\r\n\t\t{\r\n\t\t\tthis.dispatchChange('length');\r\n\t\t}\r\n\t\t\r\n\t\treturn new conbo.List({source:items});\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get the item at the given index; similar to array[index]\r\n\t */\r\n\tgetItemAt: function(index) \r\n\t{\r\n\t\treturn this.source[index];\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add (or replace) item at given index with the one specified,\r\n\t * similar to array[index] = value;\r\n\t */\r\n\tsetItemAt: function(index, item)\r\n\t{\r\n\t\tvar length = this.length;\r\n\t\t\r\n\t\tvar replaced = this.source[index];\r\n\t\tthis.__updateBindings(replaced, false);\r\n\t\t\r\n\t\tthis.source[index] = model;\r\n\t\tthis.__updateBindings(model);\r\n\t\t\r\n\t\tif (this.length > length)\r\n\t\t{\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.ADD));\r\n\t\t\tthis.dispatchChange('length');\r\n\t\t}\r\n\t\t\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.CHANGE, {item:item}));\r\n\t\t\r\n\t\treturn replaced;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Force the collection to re-sort itself.\r\n\t * @param\t{Function}\t[compareFunction] - Compare function to determine sort order\r\n\t */\r\n\tsort: function(compareFunction) \r\n\t{\r\n\t\tthis.source.sort(compareFunction);\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.CHANGE));\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n   \t * Create a new List identical to this one.\r\n\t */\r\n\tclone: function() \r\n\t{\r\n\t\treturn new this.constructor(this.source);\r\n\t},\r\n\t\r\n\t/**\r\n\t * The JSON-friendly representation of the List\r\n\t */\r\n\ttoJSON: function() \r\n\t{\r\n\t\treturn conbo.jsonify(this.source);\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.List';\r\n\t},\r\n\t\r\n\t/**\r\n\t * Listen to the events of Bindable values so we can detect changes\r\n\t * @param \t{any}\t\tmodels\r\n\t * @param \t{Boolean}\tenabled\r\n\t * @private\r\n\t */\r\n\t__updateBindings: function(items, enabled)\r\n\t{\r\n\t\tvar method = enabled === false ? 'removeEventListener' : 'addEventListener';\r\n\t\t\r\n\t\titems = (conbo.isArray(items) ? items : [items]).slice();\r\n\t\t\r\n\t\twhile (items.length)\r\n\t\t{\r\n\t\t\tvar item = items.pop();\r\n\t\t\t\r\n\t\t\tif (item instanceof conbo.EventDispatcher)\r\n\t\t\t{\r\n\t\t\t\titem[method](conbo.ConboEvent.CHANGE, this.dispatchEvent, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Enables array access operator, e.g. myList[0]\r\n\t * @private\r\n\t */\r\n\t__changeHandler: function(event)\r\n\t{\r\n\t\tvar i;\r\n\t\t\r\n\t\tvar define = (function(n)\r\n\t\t{\r\n\t\t\tObject.defineProperty(this, n, \r\n\t\t\t{\r\n\t\t\t\tget: function() { return this.getItemAt(n); },\r\n\t\t\t\tset: function(value) { this.setItemAt(n, value); },\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true\r\n\t\t\t});\r\n\t\t}).bind(this);\r\n\t\t\r\n\t\tfor (i=0; i<this.length; i++)\r\n\t\t{\r\n\t\t\tdefine(i);\r\n\t\t}\r\n\t\t\r\n\t\twhile (i in this)\r\n\t\t{\r\n\t\t\tdelete this[i++];\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__applyItemClass: function(item)\r\n\t{\r\n\t\tif (item instanceof Array)\r\n\t\t{\r\n\t\t\tfor (var i=0; i<item.length; i++)\r\n\t\t\t{\r\n\t\t\t\titem[i] = this.__applyItemClass(item[i]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn item;\r\n\t\t}\r\n\t\t\r\n\t\tif (conbo.isObject(item) \r\n\t\t\t&& !conbo.isClass(item)\r\n\t\t\t&& !(item instanceof conbo.Class)\r\n\t\t\t)\r\n\t\t{\r\n\t\t\titem = new this.itemClass({source:item, context:this.context});\r\n\t\t}\r\n\t\t\r\n\t\treturn item;\r\n\t}\r\n\t\r\n}).implement(conbo.IInjectable);\r\n\r\n// Utility methods that we want to implement on the List.\r\nvar listMethods = \r\n[\r\n\t'forEach', 'map', 'find', 'findIndex', 'filter', 'reject', 'every', \r\n\t'contains', 'invoke', 'indexOf', 'lastIndexOf', 'max', 'min', 'toArray', \r\n\t'size', 'rest', 'last', 'without', 'shuffle', 'isEmpty', 'sortOn'\r\n];\r\n\r\n// Mix in each available Conbo utility method as a proxy\r\nlistMethods.forEach(function(method) \r\n{\r\n\tif (!(method in conbo)) return;\r\n\t\r\n\tconbo.List.prototype[method] = function() \r\n\t{\r\n\t\tvar args = [this.source].concat(conbo.toArray(arguments)),\r\n\t\t\tresult = conbo[method].apply(conbo, args);\r\n\t\t\r\n\t\t// TODO What's the performance impact of doing this?\r\n//\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.CHANGE));\r\n\t\t\r\n\t\treturn conbo.isArray(result)\r\n//\t\t\t? new this.constructor({source:result}) // TODO Return List of same type as original?\r\n\t\t\t? new conbo.List({source:result, itemClass:this.itemClass})\r\n\t\t\t: result;\r\n\t};\r\n});\r\n\r\n__denumerate(conbo.List.prototype);\r\n\r\n/**\r\n * LocalList is a persistent List class that is saved into LocalStorage\r\n * or SessionStorage\r\n * \r\n * @class\t\tLocalList\r\n * @memberof\tconbo\r\n * @augments\tconbo.List\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options, including 'name' (String), 'session' (Boolean) and 'source' (Array) of default options\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n * @fires\t\tconbo.ConboEvent#ADD\r\n * @fires\t\tconbo.ConboEvent#REMOVE\r\n */\r\nconbo.LocalList = conbo.List.extend(\r\n/** @lends conbo.LocalList.prototype */\r\n{\r\n\t__construct: function(options)\r\n\t{\r\n\t\tvar defaultName = 'ConboLocalList';\r\n\t\t\r\n\t\toptions = conbo.defineDefaults(options, this.options, {name:defaultName});\r\n\t\t\r\n\t\tvar name = options.name;\r\n\t\t\r\n\t\tvar storage = options.session \r\n\t\t\t? window.sessionStorage\r\n\t\t\t: window.localStorage;\r\n\t\t\r\n\t\tif (name == defaultName)\r\n\t\t{\r\n\t\t\tconbo.warn('No name specified for '+this.toString+', using \"'+defaultName+'\"');\r\n\t\t}\r\n\t\t\r\n\t\tvar getLocal = function()\r\n\t\t{\r\n\t\t\treturn name in storage\r\n\t\t\t\t? JSON.parse(storage.getItem(name) || '[]')\r\n\t\t\t\t: options.source || [];\r\n\t\t};\r\n\t\t\r\n\t\t// Sync with LocalStorage\r\n\t\tthis.addEventListener(conbo.ConboEvent.CHANGE, function(event)\r\n\t\t{\r\n  \t\t\tstorage.setItem(name, JSON.stringify(this));\r\n\t\t}, \r\n\t\tthis, 1000);\r\n\t\t\r\n\t\toptions.source = getLocal();\r\n\t\t\r\n\t\tconbo.List.prototype.__construct.call(this, options);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Immediately writes all data to local storage. If you don't use this method, \r\n\t * Conbo writes the data the next time it detects a change to a bindable property.\r\n\t */\r\n\tflush: function()\r\n\t{\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.CHANGE));\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.LocalList';\r\n\t}\r\n\t\r\n});\r\n\r\n__denumerate(conbo.LocalList.prototype);\r\n\r\n/**\r\n * Attribute Bindings\r\n * \r\n * Functions that can be used to bind DOM elements to properties of Bindable \r\n * class instances to DOM elements via their attributes.\r\n * \r\n * @class\t\tAttributeBindings\r\n * @memberof\tconbo\r\n * @augments\tconbo.Class\r\n * @author \t\tNeil Rackett\r\n */\r\nconbo.AttributeBindings = conbo.Class.extend(\r\n/** @lends conbo.AttributeBindings.prototype */\r\n{\r\n\tinitialize: function()\r\n\t{\r\n\t\t// Methods that can accept multiple parameters\r\n\t\t\r\n\t\tthis.cbAria.multiple = true;\r\n\t\tthis.cbClass.multiple = true;\r\n\t\tthis.cbStyle.multiple = true;\r\n\t\t\r\n\t\t// Methods that require raw attribute data instead of bound property values\r\n\t\t\r\n\t\tthis.cbIncludeIn.raw = true;\r\n\t\tthis.cbExcludeFrom.raw = true;\r\n\r\n\t\t// Methods that don't require any parameters\r\n\r\n\t\tthis.cbDetectChange.readOnly = true;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Can the given attribute be bound to multiple properties at the same time?\r\n\t * @param \t{string}\tattribute\r\n\t * @returns {Boolean}\r\n\t */\r\n\tcanHandleMultiple: function(attribute)\r\n\t{\r\n\t\tvar f = conbo.toCamelCase(attribute);\r\n\t\t\r\n\t\treturn (f in this)\r\n\t\t\t? !!this[f].multiple\r\n\t\t\t: false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Makes an element visible\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-show=\"propertyName\"></div>\r\n\t */\r\n\tcbShow: function(el, value)\r\n\t{\r\n\t\tthis.cbHide(el, !value);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Hides an element by making it invisible, but does not remove\r\n\t * if from the layout of the page, meaning a blank space will remain\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-hide=\"propertyName\"></div>\r\n\t */\r\n\tcbHide: function(el, value)\r\n\t{\r\n\t\t!!value\r\n\t\t\t? el.classList.add('cb-hide')\r\n\t\t\t: el.classList.remove('cb-hide');\r\n\t},\r\n\t\r\n\t/**\r\n\t * Include an element on the screen and in the layout of the page\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-include=\"propertyName\"></div>\r\n\t */\r\n\tcbInclude: function(el, value)\r\n\t{\r\n\t\tthis.cbExclude(el, !value);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove an element from the screen and prevent it having an effect\r\n\t * on the layout of the page\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-exclude=\"propertyName\"></div>\r\n\t */\r\n\tcbExclude: function(el, value)\r\n\t{\r\n\t\t!!value\r\n\t\t\t? el.classList.add('cb-exclude')\r\n\t\t\t: el.classList.remove('cb-exclude');\r\n\t},\r\n\t\r\n\t/**\r\n\t * The exact opposite of HTML's built-in `disabled` property\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-enabled=\"propertyName\"></div>\r\n\t */\r\n\tcbEnabled: function(el, value)\r\n\t{\r\n\t\tel.disabled = !value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Inserts raw HTML into the element, which is rendered as HTML\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-html=\"propertyName\"></div>\r\n\t */\r\n\tcbHtml: function(el, value)\r\n\t{\r\n\t\tel.innerHTML = value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Inserts text into the element so that it appears on screen exactly as\r\n\t * it's written by converting special characters (<, >, &, etc) into HTML\r\n\t * entities before rendering them, e.g. \"8 < 10\" becomes \"8 &lt; 10\", and\r\n\t * line breaks into <br/>\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-text=\"propertyName\"></div>\r\n\t */\r\n\tcbText: function(el, value)\r\n\t{\r\n\t\tvalue = conbo.encodeEntities(value).replace(/\\r?\\n|\\r/g, '<br/>');\r\n\t\tel.innerHTML = value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Applies or removes a CSS class to or from the element based on the value\r\n\t * of the bound property, e.g. cb-class=\"myProperty:class-name\"\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-class=\"propertyName:my-class-name\"></div>\r\n\t */\r\n\tcbClass: function(el, value, options, className)\r\n\t{\r\n\t\tif (!className)\r\n\t\t{\r\n\t\t\tconbo.warn('cb-class attributes must specify one or more CSS classes in the format cb-class=\"myProperty:class-name\"');\r\n\t\t}\r\n\t\t\r\n\t\t!!value\r\n\t\t\t? __ep(el).addClass(className)\r\n\t\t\t: __ep(el).removeClass(className)\r\n\t\t\t;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Applies class(es) to the element based on the value contained in a variable. \r\n\t * Experimental.\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-classes=\"propertyName\"></div>\r\n\t */\r\n\tcbClasses: function(el, value)\r\n\t{\r\n\t\tif (el.cbClasses)\r\n\t\t{\r\n\t\t\t__ep(el).removeClass(el.cbClasses);\r\n\t\t}\r\n\t\t\r\n\t\tel.cbClasses = value;\r\n\t\t\r\n\t\tif (value)\r\n\t\t{\r\n\t\t\t__ep(el).addClass(value);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Apply styles from a variable\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @param \t\t{Object} \t\toptions - Options relating to this binding\r\n\t * @param \t\t{string} \t\tstyleName - The name of the style to bind\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-=\"propertyName:font-weight\"></div>\r\n\t */\r\n\tcbStyle: function(el, value, options, styleName)\r\n\t{\r\n\t\tif (!styleName)\r\n\t\t{\r\n\t\t\tconbo.warn('cb-style attributes must specify one or more styles in the format cb-style=\"myProperty:style-name\"');\r\n\t\t}\r\n\t\t\r\n\t\tstyleName = conbo.toCamelCase(styleName);\r\n\t\tel.style[styleName] = value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Repeats the element once for each item of the specified list or Array,\r\n\t * applying the specified Glimpse or View class to the element and passing\r\n\t * each value to the item renderer as a \"data\" property.\r\n\t * \r\n\t * The optional item renderer class can be specified by following the \r\n\t * property name with a colon and the class name or by using the tag name.\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @param \t\t{Object} \t\toptions - Options relating to this binding\r\n\t * @param \t\t{string} \t\titemRendererClassName - The name of the class to apply to each item rendered\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <li cb-repeat=\"people\" cb-hml=\"data.firstName\"></li>\r\n\t * <li cb-repeat=\"people:PersonItemRenderer\" cb-hml=\"data.firstName\"></li>\r\n\t * <person-item-renderer cb-repeat=\"people\"></person-item-renderer>\r\n\t */\r\n\tcbRepeat: function(el, values, options, itemRendererClassName)\r\n\t{\r\n\t\tvar a; \r\n\t\tvar args = conbo.toArray(arguments);\r\n\t\tvar viewClass;\r\n\t\tvar ep = __ep(el);\r\n\r\n\t\toptions || (options = {});\r\n\t\t\r\n\t\tif (options.context && options.context.namespace)\r\n\t\t{\r\n\t\t\titemRendererClassName || (itemRendererClassName = conbo.toCamelCase(el.tagName, true));\r\n\t\t\tviewClass = conbo.bindingUtils.getClass(itemRendererClassName, options.context.namespace);\r\n\t\t}\r\n\t\t\r\n\t\tviewClass || (viewClass = conbo.ItemRenderer);\r\n\t\tel.cbRepeat || (el.cbRepeat = {});\r\n\t\t\r\n\t\tvar elements = el.cbRepeat.elements || [];\r\n\t\tvar placeholder;\r\n\r\n\t\tif (el.cbRepeat.placeholder)\r\n\t\t{\r\n\t\t\tplaceholder = el.cbRepeat.placeholder;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tplaceholder = document.createComment(conbo.bindingUtils.removeAttributeAfterBinding ? '' : 'cb-repeat');\r\n\t\t\tel.parentNode.insertBefore(placeholder, el);\r\n\t\t\tel.parentNode.removeChild(el);\r\n\t\t}\r\n\t\t\r\n\t\tif (el.cbRepeat.list != values && values instanceof conbo.List)\r\n\t\t{\r\n\t\t\tif (el.cbRepeat.list)\r\n\t\t\t{\r\n\t\t\t\tel.cbRepeat.list.removeEventListener('change', el.cbRepeat.changeHandler);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tel.cbRepeat.changeHandler = (function(event)\r\n\t\t\t{\r\n\t\t\t\tthis.cbRepeat.apply(this, args);\r\n\t\t\t}).bind(this);\r\n\t\t\t\r\n\t\t\tvalues.addEventListener('change', el.cbRepeat.changeHandler);\r\n\t\t\tel.cbRepeat.list = values;\r\n\t\t}\r\n\t\t\r\n\t\tswitch (true)\r\n\t\t{\r\n\t\t\tcase values instanceof Array:\r\n\t\t\tcase values instanceof conbo.List:\r\n\t\t\t{\r\n\t\t\t\ta = values;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t{\r\n\t\t\t\t// To support element lists, etc\r\n\t\t\t\ta = conbo.isIterable(values)\r\n\t\t\t\t\t? conbo.toArray(values)\r\n\t\t\t\t\t: [];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twhile (elements.length)\r\n\t\t{\r\n\t\t\tvar rEl = elements.pop();\r\n\t\t\tvar rView = rEl.cbView || rEl.cbGlimpse;\r\n\t\t\t\r\n\t\t\tif (rView) rView.remove();\r\n\t\t\telse rEl.parentNode.removeChild(rEl);\r\n\t\t}\r\n\t\t\r\n\t\t// Switched from forEach loop to resolve issues using \"new Array(n)\"\r\n\t\t// see: http://stackoverflow.com/questions/23460301/foreach-on-array-of-undefined-created-by-array-constructor\r\n\t\tfor (var index=0,length=a.length; index<length; ++index)\r\n\t\t{\r\n\t\t\tvar value = a[index];\r\n\t\t\tvar clone = el.cloneNode(true);\r\n\t\t\t\r\n\t\t\tif (conbo.isObject(value) && !(value instanceof conbo.Hash))\r\n\t\t\t{\r\n\t\t\t\tvalue = new conbo.Hash({source:value});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tclone.removeAttribute('cb-repeat');\r\n\t\t\t\r\n\t\t\tvar viewOptions = \r\n\t\t\t{\r\n\t\t\t\tdata: value, \r\n\t\t\t\tel: clone, \r\n\t\t\t\tindex: index,\r\n\t\t\t\tisLast: index == a.length-1,\r\n\t\t\t\tlist: a,\r\n\t\t\t\tclassName: 'cb-repeat'\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar view = new viewClass(conbo.setValues(viewOptions, options));\r\n\t\t\t\r\n\t\t\telements.push(view.el);\r\n\t\t};\r\n\t\t\r\n\t\tvar fragment = document.createDocumentFragment();\r\n\t\t\r\n\t\telements.forEach(function(el)\r\n\t\t{\r\n\t\t\tfragment.appendChild(el);\r\n\t\t});\r\n\t\t\r\n\t\tplaceholder.parentNode.insertBefore(fragment, placeholder);\r\n\t\t\r\n\t\tel.cbRepeat.elements = elements;\r\n\t\tel.cbRepeat.placeholder = placeholder;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sets the properties of the element's dataset (it's `data-*` attributes)\r\n\t * using the properties of the object being bound to it. Non-Object values \r\n\t * will be disregarded. You'll need to use a polyfill for IE <= 10.\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-dataset=\"propertyName\"></div>\r\n\t */\r\n\tcbDataset: function(el, value)\r\n\t{\r\n\t\tif (conbo.isObject(value))\r\n\t\t{\r\n\t\t\tconbo.setValues(el.dataset, value);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * When used with a standard DOM element, the properties of the element's\r\n\t * `dataset` (it's `data-*` attributes) are set using the properties of the \r\n\t * object being bound to it; you'll need to use a polyfill for IE <= 10\r\n\t * \r\n\t * When used with a Glimpse, the Glimpse's `data` property is set to\r\n\t * the value of the bound property. \r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-data=\"propertyName\"></div>\r\n\t */\r\n\tcbData: function(el, value)\r\n\t{\r\n\t\tif (el.cbGlimpse)\r\n\t\t{\r\n\t\t\tel.cbGlimpse.data = value;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.cbDataset(el, value);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Only includes the specified element in the layout when the View's `currentState`\r\n\t * matches one of the states listed in the attribute's value; multiple states should\r\n\t * be separated by spaces\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @param \t\t{Object} \t\toptions - Options relating to this binding\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-include-in=\"happy sad elated\"></div>\r\n\t */\r\n\tcbIncludeIn: function(el, value, options)\r\n\t{\r\n\t\tvar view = options.view;\r\n\t\tvar states = value.split(' ');\r\n\t\t\r\n\t\tvar stateChangeHandler = (function()\r\n\t\t{\r\n\t\t\tthis.cbInclude(el, states.indexOf(view.currentState) != -1);\r\n\t\t}).bind(this);\r\n\t\t\r\n\t\tview.addEventListener('change:currentState', stateChangeHandler, this);\r\n\t\tstateChangeHandler.call(this);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes the specified element from the layout when the View's `currentState`\r\n\t * matches one of the states listed in the attribute's value; multiple states should\r\n\t * be separated by spaces\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @param \t\t{Object} \t\toptions - Options relating to this binding\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-exclude-from=\"confused frightened\"></div>\r\n\t */\r\n\tcbExcludeFrom: function(el, value, options)\r\n\t{\r\n\t\tvar view = options.view;\r\n\t\tvar states = value.split(' ');\r\n\t\t\r\n\t\tvar stateChangeHandler = function()\r\n\t\t{\r\n\t\t\tthis.cbExclude(el, states.indexOf(view.currentState) != -1);\r\n\t\t};\r\n\t\t\r\n\t\tview.addEventListener('change:currentState', stateChangeHandler, this);\r\n\t\tstateChangeHandler.call(this);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Completely removes an element from the DOM based on a bound property value, \r\n\t * primarily intended to facilitate graceful degredation and removal of desktop \r\n\t * features in mobile environments.\r\n\t * \r\n\t * @example\t\tcb-remove=\"isMobile\"\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-remove=\"propertyName\"></div>\r\n\t */\r\n\tcbRemove: function(el, value)\r\n\t{\r\n\t\tif (!!value)\r\n\t\t{\r\n\t\t\t// TODO Remove binding, etc?\r\n\t\t\tel.parentNode.removeChild(el);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * The opposite of `cbRemove`\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-keep=\"propertyName\"></div>\r\n\t */\r\n\tcbKeep: function(el, value)\r\n\t{\r\n\t\tthis.cbRemove(el, !value);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Enables the use of cb-onbind attribute to handle the 'bind' event \r\n\t * dispatched by the element after it has been bound by Conbo\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-onbind=\"functionName\"></div>\r\n\t */\r\n\tcbOnbind: function(el, handler)\r\n\t{\r\n\t\tel.addEventListener('bind', handler);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Uses JavaScript to open an anchor's HREF so that the link will open in\r\n\t * an iOS WebView instead of Safari\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-jshref=\"propertyName\"></div>\r\n\t */\r\n\tcbJshref: function(el)\r\n\t{\r\n\t\tif (el.tagName == 'A')\r\n\t\t{\r\n\t\t\tel.onclick = function(event)\r\n\t\t\t{\r\n\t\t\t\twindow.location = el.href;\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\t\r\n\t/*\r\n\t * FORM HANDLING & VALIDATION\r\n\t */\r\n\t\r\n\t/**\r\n\t * Detects changes to the specified element and applies the CSS class\r\n\t * cb-changed or cb-unchanged to the parent form, depending on whether\r\n\t * the contents have changed from their original value.\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-detect-change></div>\r\n\t */\r\n\tcbDetectChange: function(el)\r\n\t{\r\n\t\tvar ep = __ep(el); \r\n\t\tvar form = ep.closest('form');\r\n\t\tvar fp = __ep(form);\r\n\t\tvar originalValue = el.value || el.innerHTML;\r\n\t\t\r\n\t\tvar updateForm = function()\r\n\t\t{\r\n\t\t\tfp.removeClass('cb-changed cb-unchanged')\r\n\t\t\t\t.addClass(form.querySelector('.cb-changed') ? 'cb-changed' : 'cb-unchanged');\r\n\t\t};\r\n\t\t\r\n\t\tvar changeHandler = function()\r\n\t\t{\r\n\t\t\tvar changed = (el.value || el.innerHTML) != originalValue;\r\n\t\t\t\r\n\t\t\tep.removeClass('cb-changed cb-unchanged')\r\n\t\t\t\t.addClass(changed ? 'cb-changed' : 'cb-unchanged')\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tupdateForm();\r\n\t\t};\r\n\t\t\r\n\t\tep.addEventListener('change input', changeHandler)\r\n\t\t\t.addClass('cb-unchanged')\r\n\t\t\t;\r\n\t\t\r\n\t\tupdateForm();\r\n\t},\r\n\t\r\n\t/**\r\n\t * Use a method or regex to validate a form element and apply a\r\n\t * cb-valid or cb-invalid CSS class based on the outcome\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{Function} \t\tvalidator - The function referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-validate=\"functionName\"></div>\r\n\t */\r\n\tcbValidate: function(el, validator)\r\n\t{\r\n\t\tvar validateFunction;\r\n\t\t\r\n\t\tswitch (true)\r\n\t\t{\r\n\t\t\tcase conbo.isFunction(validator):\r\n\t\t\t{\r\n\t\t\t\tvalidateFunction = validator;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase conbo.isString(validator):\r\n\t\t\t{\r\n\t\t\t\tvalidator = new RegExp(validator);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase conbo.isRegExp(validator):\r\n\t\t\t{\r\n\t\t\t\tvalidateFunction = function(value)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn validator.test(value);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!conbo.isFunction(validateFunction))\r\n\t\t{\r\n\t\t\tconbo.warn(validator+' cannot be used with cb-validate');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar ep = __ep(el);\r\n\t\tvar form = ep.closest('form');\r\n\t\t\r\n\t\tvar getClasses = function(regEx) \r\n\t\t{\r\n\t\t\treturn function (classes) \r\n\t\t\t{\r\n\t\t\t\treturn classes.split(/\\s+/).filter(function(el)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn regEx.test(el); \r\n\t\t\t\t})\r\n\t\t\t\t.join(' ');\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tvar validate = function()\r\n\t\t{\r\n\t\t\t// Form item\r\n\t\t\t\r\n\t\t\tvar value = el.value || el.innerHTML\r\n\t\t\t\t, result = validateFunction(value) \r\n\t\t\t\t, valid = (result === true)\r\n\t\t\t\t, classes = []\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tclasses.push(valid ? 'cb-valid' : 'cb-invalid');\r\n\t\t\t\r\n\t\t\tif (conbo.isString(result))\r\n\t\t\t{\r\n\t\t\t\tclasses.push('cb-invalid-'+result);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tep.removeClass('cb-valid cb-invalid')\r\n\t\t\t\t.removeClass(getClasses(/^cb-invalid-/))\r\n\t\t\t\t.addClass(classes.join(' '))\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\t// Form\r\n\t\t\t\r\n\t\t\tif (form)\r\n\t\t\t{\r\n\t\t\t\tvar fp = __ep(form);\r\n\t\t\t\t\r\n\t\t\t\tfp.removeClass('cb-valid cb-invalid')\r\n\t\t\t\t\t.removeClass(getClasses(/^cb-invalid-/))\r\n\t\t\t\t\t;\r\n\t\t\t\t\r\n\t\t\t\tif (valid) \r\n\t\t\t\t{\r\n\t\t\t\t\tvalid = !form.querySelector('.cb-invalid');\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (valid)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconbo.toArray(form.querySelectorAll('[required]')).forEach(function(rEl) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!String(rEl.value || rEl.innerHTML).trim())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\t\treturn false; \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfp.addClass(valid ? 'cb-valid' : 'cb-invalid');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tep.addEventListener('change input blur', validate);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Restricts text input to the specified characters\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{string} \t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-restrict=\"propertyName\"></div>\r\n\t */\r\n\tcbRestrict: function(el, value)\r\n\t{\r\n\t\t// TODO Restrict to text input fields?\r\n\t\t\r\n\t\tif (el.cbRestrict)\r\n\t\t{\r\n\t\t\tel.removeEventListener('keypress', el.cbRestrict);\r\n\t\t}\r\n\t\t\r\n\t\tel.cbRestrict = function(event)\r\n\t\t{\r\n\t\t\tif (event.ctrlKey)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar code = event.keyCode || event.which;\r\n\t\t\tvar char = event.key || String.fromCharCode(code);\r\n\t\t\tvar regExp = value;\r\n\t\t\t\t\r\n\t\t\tif (!conbo.isRegExp(regExp))\r\n\t\t\t{\r\n\t\t\t\tregExp = new RegExp('['+regExp+']', 'g');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!char.match(regExp))\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tel.addEventListener('keypress', el.cbRestrict);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Limits the number of characters that can be entered into\r\n\t * input and other form fields\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{string} \t\tvalue - The value referenced by the attribute\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-max-chars=\"propertyName\"></div>\r\n\t */\r\n\tcbMaxChars: function(el, value)\r\n\t{\r\n\t\t// TODO Restrict to text input fields?\r\n\t\t\r\n\t\tif (el.cbMaxChars)\r\n\t\t{\r\n\t\t\tel.removeEventListener('keypress', el.cbMaxChars);\r\n\t\t}\r\n\t\t\r\n\t\tel.cbMaxChars = function(event)\r\n\t\t{\r\n\t\t\tif ((el.value || el.innerHTML).length >= value)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tel.addEventListener('keypress', el.cbMaxChars);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sets the aria accessibility attributes on an element based on the value\r\n\t * of the bound property, e.g. cb-aria=\"myProperty:label\" to set aria-label \r\n\t * to the value of myProperty\r\n\t * \r\n\t * @param \t\t{HTMLElement}\tel - DOM element to which the attribute applies\r\n\t * @param \t\t{*} \t\t\tvalue - The value referenced by the attribute\r\n\t * @param \t\t{*} \t\t\toptions\r\n\t * @param \t\t{string} \t\tariaName - The name of the aria value to set (without the aria- prefix)\r\n\t * @returns\t\t{void}\r\n\t * \r\n\t * @example\r\n\t * <div cb-class=\"ariaLabel:label\"></div>\r\n\t */\r\n\tcbAria: function(el, value, options, ariaName)\r\n\t{\r\n\t\tif (!ariaName)\r\n\t\t{\r\n\t\t\tconbo.warn('cb-aria attributes must specify one or more name in the format cb-class=\"myProperty:aria-name\"');\r\n\t\t}\r\n\t\t\r\n\t\tel.setAttribute('aria-'+ariaName, value);\r\n\t},\r\n\r\n});\r\n\r\n(function()\r\n{\r\n\tvar BindingUtils__cbAttrs = new conbo.AttributeBindings();\r\n\tvar BindingUtils__customAttrs = {};\r\n\tvar BindingUtils__reservedAttrs = ['cb-app', 'cb-view', 'cb-glimpse', 'cb-content'];\r\n\tvar BindingUtils__reservedNamespaces = ['cb', 'data', 'aria'];\r\n\tvar BindingUtils__registeredNamespaces = ['cb'];\r\n\t\r\n\t/**\r\n\t * Set the value of a property, ensuring Numbers are types correctly\r\n\t * \r\n\t * @private\r\n\t * @param \tpropertyName\r\n\t * @param \tvalue\r\n\t * @example\tBindingUtils__set.call(target, 'n', 123);\r\n\t * @returns\tthis\r\n\t */\r\n\tvar BindingUtils__set = function(propertyName, value)\r\n\t{\r\n\t\tif (this[propertyName] === value)\r\n\t\t{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\t// Ensure numbers are returned as Number not String\r\n\t\tif (value && conbo.isString(value) && !isNaN(value))\r\n\t\t{\r\n\t\t\tvalue = parseFloat(value);\r\n\t\t\tif (isNaN(value)) value = '';\r\n\t\t}\r\n\t\t\r\n\t\tthis[propertyName] = value;\r\n\t\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Is the specified attribute reserved for another purpose?\r\n\t * \r\n\t * @private\r\n\t * @param \t\t{string}\tvalue\r\n\t * @returns\t\t{Boolean}\r\n\t */\r\n\tvar BindingUtils__isReservedAttr = function(value)\r\n\t{\r\n\t\treturn BindingUtils__reservedAttrs.indexOf(value) != -1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Attempt to make a property bindable if it isn't already\r\n\t * \r\n\t * @private\r\n\t * @param \t\t{string}\tvalue\r\n\t * @returns\t\t{Boolean}\r\n\t */\r\n\tvar BindingUtils__makeBindable = function(source, propertyName)\r\n\t{\r\n\t\tif (!conbo.isAccessor(source, propertyName))\r\n\t\t{\r\n\t\t\tif (source instanceof conbo.EventDispatcher)\r\n\t\t\t{\r\n\t\t\t\tconbo.makeBindable(source, [propertyName]);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconbo.warn('It will not be possible to detect changes to \"'+propertyName+'\" because \"'+source.toString()+'\" is not an EventDispatcher');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove everything except alphanumeric, dot, space and underscore \r\n\t * characters from Strings\r\n\t * \r\n\t * @private\r\n\t * @param \t\t{string}\tvalue - String value to clean\r\n\t * @returns\t\t{string}\r\n\t */\r\n\tvar BindingUtils__cleanPropertyName = function(value)\r\n\t{\r\n\t\treturn (value || '').trim().replace(/[^\\w\\._\\s]/g, '');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Binding utilities class\r\n\t * \r\n\t * Used to bind properties of EventDispatcher class instances to DOM elements, \r\n\t * other EventDispatcher class instances or setter functions\r\n\t * \r\n\t * @class\t\tBindingUtils\r\n\t * @memberof\tconbo\r\n\t * @augments\tconbo.Class\r\n\t * @author \t\tNeil Rackett\r\n\t */\r\n\tconbo.BindingUtils = conbo.Class.extend(\r\n\t/** @lends conbo.BindingUtils.prototype */\r\n\t{\r\n\t\t/**\r\n\t\t * Should binding attributes, like \"cb-bind\", be removed after they've been processed?\r\n\t\t * @type\t{boolean}\r\n\t\t */\r\n\t\tremoveAttributeAfterBinding: true,\r\n\t\t\r\n\t\t/**\r\n\t\t * Bind a property of a EventDispatcher class instance (e.g. Hash or View) \r\n\t\t * to a DOM element's value/content, using ConboJS's best judgement to\r\n\t\t * work out how the value should be bound to the element.\r\n\t\t * \r\n\t\t * This method of binding also allows for the use of a parse function,\r\n\t\t * which can be used to manipulate bound data in real time\r\n\t\t * \r\n\t\t * @param \t\t{conbo.EventDispatcher}\tsource - Class instance which extends from conbo.EventDispatcher\r\n\t\t * @param \t\t{string} \t\t\t\tpropertyName - Property name to bind\r\n\t\t * @param \t\t{HTMLElement} \t\t\tel - DOM element to bind value to (two-way bind on input/form elements)\r\n\t\t * @param \t\t{Function}\t\t\t\t[parseFunction] - Optional method used to parse values before outputting as HTML\r\n\t\t * \r\n\t\t * @returns\t\t{Array}\t\t\t\t\tArray of bindings\r\n\t\t */\r\n\t\tbindElement: function(source, propertyName, el, parseFunction)\r\n\t\t{\r\n\t\t\tvar isEventDispatcher = source instanceof conbo.EventDispatcher;\r\n\t\t\t\r\n\t\t\tif (!el)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('el is undefined');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tBindingUtils__makeBindable(source, propertyName);\r\n\t\t\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar bindings = [];\r\n\t\t\tvar eventType;\r\n\t\t\tvar eventHandler;\r\n\t\t\t\r\n\t\t\tparseFunction || (parseFunction = this.defaultParseFunction);\r\n\t\t\t\r\n\t\t\tvar ep = new conbo.EventProxy(el);\r\n\t\t\tvar tagName = el.tagName;\r\n\t\t\t\r\n\t\t\tswitch (tagName)\r\n\t\t\t{\r\n\t\t\t\tcase 'INPUT':\r\n\t\t\t\tcase 'SELECT':\r\n\t\t\t\tcase 'TEXTAREA':\r\n\t\t\t\t{\t\r\n\t\t\t\t\tvar type = (el.type || tagName).toLowerCase();\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (type)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tel.checked = !!source[propertyName];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (isEventDispatcher)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\teventType = 'change:'+propertyName;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\teventHandler = function(event)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tel.checked = !!event.value;\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsource.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\t\t\tbindings.push([source, eventType, eventHandler]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\teventType = 'input change';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\teventHandler = function(event)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tBindingUtils__set.call(source, propertyName, el.checked);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tep.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\t\tbindings.push([ep, eventType, eventHandler]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'radio':\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (el.value == source[propertyName]) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tel.checked = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (isEventDispatcher)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\teventType = 'change:'+propertyName;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\teventHandler = function(event)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (event.value == null) event.value = '';\r\n\t\t\t\t\t\t\t\t\tif (el.value != event.value) return; \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tel.checked = true;\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsource.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\t\t\tbindings.push([source, eventType, eventHandler]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tel.value = source[propertyName];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (isEventDispatcher)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\teventType = 'change:'+propertyName;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\teventHandler = function(event)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (event.value == null) event.value = '';\r\n\t\t\t\t\t\t\t\t\tif (el.value == event.value) return;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tel.value = event.value;\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsource.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\t\t\tbindings.push([source, eventType, eventHandler]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\teventType = 'input change';\r\n\t\t\t\t\t\r\n\t\t\t\t\teventHandler = function(event)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tBindingUtils__set.call(source, propertyName, el.value === undefined ? el.innerHTML : el.value);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tep.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\tbindings.push([ep, eventType, eventHandler]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase 'CB-TEXT':\r\n\t\t\t\t{\r\n\t\t\t\t\tvar textNode = document.createTextNode(parseFunction(source[propertyName]))\r\n\t\t\t\t\t\r\n\t\t\t\t\tel.parentNode.insertBefore(textNode, el);\r\n\t\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (isEventDispatcher)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teventType = 'change:'+propertyName;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\teventHandler = function(event) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttextNode.data = parseFunction(event.value);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsource.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\tbindings.push([source, eventType, eventHandler]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t{\r\n\t\t\t\t\tel.innerHTML = parseFunction(source[propertyName]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (isEventDispatcher)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teventType = 'change:'+propertyName;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\teventHandler = function(event) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar html = parseFunction(event.value);\r\n\t\t\t\t\t\t\tel.innerHTML = html;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsource.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\tbindings.push([source, eventType, eventHandler]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn bindings;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Unbinds the specified property of a bindable class from the specified DOM element\r\n\t\t * \r\n\t\t * @param \t\t{conbo.EventDispatcher}\tsource - Class instance which extends from conbo.EventDispatcher\r\n\t\t * @param \t\t{string} \t\t\t\tpropertyName - Property name to bind\r\n\t\t * @param \t\t{HTMLElement} \t\t\tel - DOM element to unbind value from\r\n\t\t * @returns\t\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t */\r\n\t\tunbindElement: function(source, propertyName, element)\r\n\t\t{\r\n\t\t\t// TODO Implement unbindElement\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Bind a DOM element to the property of a EventDispatcher class instance,\r\n\t\t * e.g. Hash or Model, using cb-* attributes to specify how the binding\r\n\t\t * should be made.\r\n\t\t * \r\n\t\t * Two way bindings will automatically be applied where the attribute name \r\n\t\t * matches a property on the target element, meaning your EventDispatcher object \r\n\t\t * will automatically be updated when the property changes.\r\n\t\t * \r\n\t\t * @param \t{conbo.EventDispatcher}\tsource - Class instance which extends from conbo.EventDispatcher (e.g. Hash or Model)\r\n\t\t * @param \t{string}\t\t\t\tpropertyName - Property name to bind\r\n\t\t * @param \t{HTMLElement}\t\t\telement - DOM element to bind value to (two-way bind on input/form elements)\r\n\t\t * @param \t{string}\t\t\t\tattributeName - The attribute to bind as it appears in HTML, e.g. \"cb-prop-name\"\r\n\t\t * @param \t{Function} \t\t\t\t[parseFunction] - Method used to parse values before outputting as HTML\r\n\t\t * @param\t{Object}\t\t\t\t[options] - Options related to this attribute binding\r\n\t\t * \r\n\t\t * @returns\t{Array}\t\t\t\t\tArray of bindings\r\n\t\t */\r\n\t\tbindAttribute: function(source, propertyName, element, attributeName, parseFunction, options)\r\n\t\t{\r\n\t\t\tvar bindings = [];\r\n\t\t\t\r\n\t\t\tif (BindingUtils__isReservedAttr(attributeName))\r\n\t\t\t{\r\n\t\t\t\treturn bindings;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!element)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('element is undefined');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar split = attributeName.split('-'),\r\n\t\t\t\thasNs = split.length > 1\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tif (!hasNs)\r\n\t\t\t{\r\n\t\t\t\treturn bindings;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (attributeName == \"cb-bind\")\r\n\t\t\t{\r\n\t\t\t\tbindings = this.bindElement(source, propertyName, element, parseFunction);\r\n\t\t\t\t\r\n\t\t\t\tif (this.removeAttributeAfterBinding)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.removeAttribute(attributeName);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn bindings;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tBindingUtils__makeBindable(source, propertyName);\r\n\t\t\t\r\n\t\t\tvar scope = this,\r\n\t\t\t\teventType,\r\n\t\t\t\teventHandler,\r\n\t\t\t\targs = conbo.toArray(arguments).slice(5),\r\n\t\t\t\tcamelCase = conbo.toCamelCase(attributeName),\r\n\t\t\t\tns = split[0],\r\n\t\t\t\tisConboNs = (ns == 'cb'),\r\n\t\t\t\tisConbo = isConboNs && camelCase in BindingUtils__cbAttrs,\r\n\t\t\t\tisCustom = !isConbo && camelCase in BindingUtils__customAttrs,\r\n\t\t\t\tisNative = isConboNs && split.length == 2 && split[1] in element,\r\n\t\t\t\tattrFuncs = BindingUtils__cbAttrs\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tparseFunction || (parseFunction = this.defaultParseFunction);\r\n\t\t\t\r\n\t\t\tswitch (true)\r\n\t\t\t{\r\n\t\t\t\t// If we have a bespoke handler for this attribute, use it\r\n\t\t\t\tcase isCustom:\r\n\t\t\t\t\tattrFuncs = BindingUtils__customAttrs;\r\n\t\t\t\t\r\n\t\t\t\tcase isConbo:\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!(source instanceof conbo.EventDispatcher))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconbo.warn('Source is not EventDispatcher');\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar fn = attrFuncs[camelCase];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (fn.raw)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfn.apply(attrFuncs, [element, propertyName].concat(args));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teventHandler = function(event)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfn.apply(attrFuncs, [element, parseFunction(source[propertyName])].concat(args));\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\teventType = 'change:'+propertyName;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsource.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\teventHandler();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbindings.push([source, eventType, eventHandler]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase isNative:\r\n\t\t\t\t{\r\n\t\t\t\t\tvar nativeAttr = split[1];\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (true)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase nativeAttr.indexOf('on') !== 0 && conbo.isFunction(element[nativeAttr]):\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconbo.warn(attributeName+' is not a recognised attribute, did you mean cb-on'+nativeAttr+'?');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// If it's an event, add a listener\r\n\t\t\t\t\t\tcase nativeAttr.indexOf('on') === 0:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!conbo.isFunction(source[propertyName]))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconbo.warn(propertyName+' is not a function and cannot be bound to DOM events');\r\n\t\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\teventType = nativeAttr.substr(2);\r\n\t\t\t\t\t\t\teventHandler = source[propertyName];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\telement.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\t\tbindings.push([element, eventType, eventHandler]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// ... otherwise, bind to the native property\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!(source instanceof conbo.EventDispatcher))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconbo.warn('Source is not EventDispatcher');\r\n\t\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\teventHandler = function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar value;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvalue = parseFunction(source[propertyName]);\r\n\t\t\t\t\t\t\t\tvalue = conbo.isBoolean(element[nativeAttr]) ? !!value : value;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\telement[nativeAttr] = value;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\teventType = 'change:'+propertyName;\r\n\t\t\t\t\t\t\tsource.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\t\teventHandler();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbindings.push([source, eventType, eventHandler]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar ep = new conbo.EventProxy(element);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\teventHandler = function()\r\n\t\t\t     \t\t\t{\r\n\t\t\t\t\t\t\t\tBindingUtils__set.call(source, propertyName, element[nativeAttr]);\r\n\t\t\t     \t\t\t};\r\n\t\t\t\t\t\t\t\r\n\t\t\t     \t\t\teventType = 'input change';\r\n\t\t\t\t\t\t\tep.addEventListener(eventType, eventHandler);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbindings.push([ep, eventType, eventHandler]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t{\r\n\t\t\t\t\tconbo.warn(attributeName+' is not recognised or does not exist on specified element');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (attributeName !== 'cb-repeat' && this.removeAttributeAfterBinding)\r\n\t\t\t{\r\n\t\t\t\telement.removeAttribute(attributeName);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn bindings;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Applies the specified read-only Conbo or custom attribute to the specified element\r\n\t\t * \r\n\t\t * @param \t{HTMLElement}\t\t\telement - DOM element to bind value to (two-way bind on input/form elements)\r\n\t\t * @param \t{string}\t\t\t\tattributeName - The attribute to bind as it appears in HTML, e.g. \"cb-prop-name\"\r\n\t\t * @returns\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t * \r\n\t\t * @example\r\n\t\t * conbo.bindingUtils.applyAttribute(el, \"my-custom-attr\");\r\n\t\t */\r\n\t\tapplyAttribute: function(element, attributeName)\r\n\t\t{\r\n\t\t\tif (this.attributeExists(attributeName))\r\n\t\t\t{\r\n\t\t\t\tvar camelCase = conbo.toCamelCase(attributeName),\r\n\t\t\t\t\tns = attributeName.split('-')[0],\r\n\t\t\t\t\tattrFuncs = (ns == 'cb') ? BindingUtils__cbAttrs : BindingUtils__customAttrs,\r\n\t\t\t\t\tfn = attrFuncs[camelCase]\r\n\t\t\t\t\t;\r\n\t\t\t\t\r\n\t\t\t\tif (fn.readOnly)\r\n\t\t\t\t{\r\n\t\t\t\t\tfn.call(attrFuncs, element);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tconbo.warn(attributeName+' attribute cannot be used without a value');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconbo.warn(attributeName+' attribute does not exist');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Does the specified Conbo or custom attribute exist?\r\n\t\t * @param \t{string}\t\t\t\tattributeName - The attribute name as it appears in HTML, e.g. \"cb-prop-name\"\r\n\t\t * @returns\t{Boolean}\r\n\t\t */\r\n\t\tattributeExists: function(attributeName)\r\n\t\t{\r\n\t\t\tvar camelCase = conbo.toCamelCase(attributeName);\r\n\t\t\treturn camelCase in BindingUtils__cbAttrs || camelCase in BindingUtils__customAttrs;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Bind everything within the DOM scope of a View to properties of the View instance\r\n\t\t * \r\n\t\t * @param \t{conbo.View}\t\t\tview - The View class controlling the element\r\n\t\t * @returns\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t */\r\n\t\tbindView: function(view)\r\n\t\t{\r\n\t\t\tif (!view)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('view is undefined');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!!view.__bindings)\r\n\t\t\t{\r\n\t\t\t\tthis.unbindView(view);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar options = {view:view},\r\n\t\t\t\tbindings = [],\r\n\t\t\t\tscope = this;\r\n\t\t\t\r\n\t\t\tif (!!view.subcontext) \r\n\t\t\t{\r\n\t\t\t\tview.subcontext.addTo(options);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar ns = view.context && view.context.namespace;\r\n\t\t\t\r\n\t\t\tif (ns)\r\n\t\t\t{\r\n\t\t\t\tthis.applyViews(view, ns, 'glimpse')\r\n\t\t\t\t\t.applyViews(view, ns, 'view')\r\n\t\t\t\t\t;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar ignored = [];\r\n\t\t\t\r\n\t\t\tview.querySelectorAll('[cb-repeat]').forEach(function(el)\r\n\t\t\t{\r\n\t\t\t\tignored = ignored.concat(conbo.toArray(el.querySelectorAll('*')));\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar elements = conbo.difference(view.querySelectorAll('*').concat([view.el]), ignored);\r\n\r\n\t\t\t// Prioritises processing of cb-repeat over other attributes\r\n\t\t\telements.sort(function(el1, el2)\r\n\t\t\t{\r\n\t\t\t\tvar r1 = __ep(el1).attributes.hasOwnProperty('cbRepeat');\r\n\t\t\t\tvar r2 = __ep(el2).attributes.hasOwnProperty('cbRepeat');\r\n\r\n\t\t\t\tif (r1 && r2) return 0;\r\n\t\t\t\tif (r1 && !r2) return -1;\r\n\t\t\t\tif (!r1 && r2) return 1;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\telements.forEach(function(el, index)\r\n\t\t\t{\r\n\t\t\t\tvar attrs = __ep(el).attributes;\r\n\t\t\t\t\r\n\t\t\t\tif (!conbo.keys(attrs).length) \r\n\t\t\t\t{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar keys = conbo.keys(attrs);\r\n\t\t\t\t\r\n\t\t\t\t// Prevents Conbo trying to populate repeat templates \r\n\t\t\t\tif (keys.indexOf('cbRepeat') != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tkeys = ['cbRepeat'];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tkeys.forEach(function(key)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = conbo.toUnderscoreCase(key, '-');\r\n\t\t\t\t\tvar typeSplit = type.split('-');\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (typeSplit.length < 2 \r\n\t\t\t\t\t\t|| BindingUtils__registeredNamespaces.indexOf(typeSplit[0]) == -1 \r\n\t\t\t\t\t\t|| BindingUtils__isReservedAttr(type))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar splits = attrs[key].split(',');\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!BindingUtils__cbAttrs.canHandleMultiple(type))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsplits = [splits[0]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar splitsLength = splits.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i=0; i<splitsLength; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar parseFunction,\r\n\t\t\t\t\t\t\td = (splits[i] || '');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!d)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tscope.applyAttribute(el, type);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar b = d.split('|'),\r\n\t\t\t\t\t\t\tv = b[0].split(':'),\r\n\t\t\t\t\t\t\tpropertyName = v[0],\r\n\t\t\t\t\t\t\tparam = v[1],\r\n\t\t\t\t\t\t\tsplit = BindingUtils__cleanPropertyName(propertyName).split('.'),\r\n\t\t\t\t\t\t\tproperty = split.pop(),\r\n\t\t\t\t\t\t\tmodel;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tparseFunction = !!b[1] ? eval('view.'+BindingUtils__cleanPropertyName(b[1])) : undefined;\r\n\t\t\t\t\t\t\tparseFunction = conbo.isFunction(parseFunction) ? parseFunction : undefined;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e) {}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmodel = !!split.length ? eval('view.'+split.join('.')) : view;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e) {}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!model) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconbo.warn(propertyName+' is not defined in this View');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar opts = conbo.defineValues({propertyName:property}, options);\r\n\t\t\t\t\t\tvar args = [model, property, el, type, parseFunction, opts, param];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbindings = bindings.concat(scope.bindAttribute.apply(scope, args));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Dispatch a `bind` event from the element at the end of the current call stack\r\n\t\t\t\t\tconbo.defer(function()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar customEvent;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcustomEvent = document.createEvent('CustomEvent');\r\n\t\t\t\t\t\tcustomEvent.initCustomEvent('bind', false, false, {});\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tel.dispatchEvent(customEvent);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t__definePrivateProperty(view, '__bindings', bindings);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Removes all data binding from the specified View instance\r\n\t\t * @param \t{conbo.View}\t\t\tview\r\n\t\t * @returns\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t */\r\n\t\tunbindView: function(view)\r\n\t\t{\r\n\t\t\tif (!view)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('view is undefined');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!view.__bindings || !view.__bindings.length)\r\n\t\t\t{\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar bindings = view.__bindings;\r\n\t\t\t\r\n\t\t\twhile (bindings.length)\r\n\t\t\t{\r\n\t\t\t\tvar binding = bindings.pop();\r\n\t\t\t\t\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tbinding[0].removeEventListener(binding[1], binding[2]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdelete view.__bindings;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Applies View and Glimpse classes DOM elements based on their cb-view \r\n\t\t * attribute or tag name\r\n\t\t * \r\n\t\t * @param\t{HTMLElement} \t\t\trootView - DOM element, View or Application class instance\r\n\t\t * @param\t{conbo.Namespace} \t\tnamespace - The current namespace\r\n\t\t * @param\t{string} \t\t\t\t[type=view] - View type, 'view' or 'glimpse'\r\n\t\t * @returns\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t */\r\n\t\tapplyViews: function(rootView, namespace, type)\r\n\t\t{\r\n\t\t\ttype || (type = 'view');\r\n\t\t\t\r\n\t\t\tif (['view', 'glimpse'].indexOf(type) == -1)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(type+' is not a valid type parameter for applyView');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar typeClass = conbo[type.charAt(0).toUpperCase()+type.slice(1)],\r\n\t\t\t\tscope = this\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tvar rootEl = conbo.isElement(rootView) ? rootView : rootView.el;\r\n\t\t\t\r\n\t\t\tfor (var className in namespace)\r\n\t\t\t{\r\n\t\t\t\tvar classReference = scope.getClass(className, namespace);\r\n\t\t\t\tvar isView = conbo.isClass(classReference, conbo.View);\r\n\t\t\t\tvar isGlimpse = conbo.isClass(classReference, conbo.Glimpse) && !isView;\r\n\t\t\t\t\r\n\t\t\t\tif ((type == 'glimpse' && isGlimpse) || (type == 'view' && isView))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar tagName = conbo.toKebabCase(className);\r\n\t\t\t\t\tvar nodes = conbo.toArray(rootEl.querySelectorAll(tagName+':not(.cb-'+type+'):not([cb-repeat]), [cb-'+type+'='+className+']:not(.cb-'+type+'):not([cb-repeat])'));\r\n\t\t\t\t\t\r\n\t\t\t\t\tnodes.forEach(function(el)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar ep = __ep(el);\r\n\t\t\t\t\t\tvar closestView = ep.closest('.cb-view');\r\n\t\t\t\t\t\tvar context = closestView ? closestView.cbView.subcontext : rootView.subcontext;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tnew classReference({el:el, context:context});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Bind the property of one EventDispatcher class instance (e.g. Hash or View) to another\r\n\t\t * \r\n\t\t * @param \t{conbo.EventDispatcher}\tsource - Class instance which extends conbo.EventDispatcher\r\n\t\t * @param \t{string}\t\t\t\tsourcePropertyName - Source property name\r\n\t\t * @param \t{*}\t\t\t\t\t\tdestination - Object or class instance which extends conbo.EventDispatcher\r\n\t\t * @param \t{string}\t\t\t\t[destinationPropertyName] Defaults to same value as sourcePropertyName\r\n\t\t * @param \t{Boolean}\t\t\t\t[twoWay=false] - Apply 2-way binding\r\n\t\t * @returns\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t */\r\n\t\tbindProperty: function(source, sourcePropertyName, destination, destinationPropertyName, twoWay)\r\n\t\t{\r\n\t\t\tif (!(source instanceof conbo.EventDispatcher))\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(sourcePropertyName+' source is not EventDispatcher');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar scope = this;\r\n\t\t\t\r\n\t\t\tdestinationPropertyName || (destinationPropertyName = sourcePropertyName);\r\n\t\t\t\r\n\t\t\tBindingUtils__makeBindable(source, sourcePropertyName);\r\n\t\t\t\r\n\t\t\tsource.addEventListener('change:'+sourcePropertyName, function(event)\r\n\t\t\t{\r\n\t\t\t\tif (!(destination instanceof conbo.EventDispatcher))\r\n\t\t\t\t{\r\n\t\t\t\t\tdestination[destinationPropertyName] = event.value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tBindingUtils__set.call(destination, destinationPropertyName, event.value);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (twoWay && destination instanceof conbo.EventDispatcher)\r\n\t\t\t{\r\n\t\t\t\tthis.bindProperty(destination, destinationPropertyName, source, sourcePropertyName);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Call a setter function when the specified property of a EventDispatcher \r\n\t\t * class instance (e.g. Hash or Model) is changed\r\n\t\t * \r\n\t\t * @param \t{conbo.EventDispatcher}\tsource\t\t\t\tClass instance which extends conbo.EventDispatcher\r\n\t\t * @param \t{string}\t\t\tpropertyName\r\n\t\t * @param \t{Function}\t\t\tsetterFunction\r\n\t\t * @returns\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t */\r\n\t\tbindSetter: function(source, propertyName, setterFunction)\r\n\t\t{\r\n\t\t\tif (!(source instanceof conbo.EventDispatcher))\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('Source is not EventDispatcher');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!conbo.isFunction(setterFunction))\r\n\t\t\t{\r\n\t\t\t\tif (!setterFunction || !(propertyName in setterFunction))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error('Invalid setter function');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsetterFunction = setterFunction[propertyName];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tBindingUtils__makeBindable(source, propertyName);\r\n\t\t\t\r\n\t\t\tsource.addEventListener('change:'+propertyName, function(event)\r\n\t\t\t{\r\n\t\t\t\tsetterFunction(event.value);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Default parse function\r\n\t\t * \r\n\t\t * @param\t{*} \t\tvalue - The value to be parsed\r\n\t\t * @returns\t{*}\t\t\tThe parsed value\r\n\t\t */\r\n\t\tdefaultParseFunction: function(value)\r\n\t\t{\r\n\t\t\treturn typeof(value) == 'undefined' ? '' : value;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Attempt to convert string into a conbo.Class in the specified namespace\r\n\t\t * \r\n\t\t * @param \t\t{string} \t\t\tclassName - The name of the class\r\n\t\t * @param \t\t{conbo.Namespace}\tnamespace - The namespace containing the class\r\n\t\t * @returns\t\t{*}\r\n\t\t */\r\n\t\tgetClass: function(className, namespace)\r\n\t\t{\r\n\t\t\tif (!className || !namespace) return;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tvar classReference = namespace[className];\r\n\t\t\t\t\r\n\t\t\t\tif (conbo.isClass(classReference)) \r\n\t\t\t\t{\r\n\t\t\t\t\treturn classReference;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (e) {}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Register a custom attribute handler\r\n\t\t * \r\n\t\t * @param\t\t{string}\tname - camelCase version of the attribute name (must include a namespace prefix)\r\n\t\t * @param\t\t{Function}\thandler - function that will handle the data bound to the element\r\n\t\t * @param \t\t{boolean}\treadOnly - Whether or not the attribute is read-only (default: false)\r\n\t\t * @param \t\t{boolean}\t[raw=false] - Whether or not parameters should be passed to the handler as a raw String instead of a bound value\r\n\t\t * @returns\t\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t * \r\n\t\t * @example \r\n\t\t * // HTML: <div my-font-name=\"myProperty\"></div>\r\n\t\t * conbo.bindingUtils.registerAttribute('myFontName', function(el, value, options, param)\r\n\t\t * {\r\n\t\t *\t\tel.style.fontName = value;\r\n\t\t * });\r\n\t\t */\r\n\t\tregisterAttribute: function(name, handler, readOnly, raw)\r\n\t\t{\r\n\t\t\tif (!conbo.isString(name) || !conbo.isFunction(handler))\r\n\t\t\t{\r\n\t\t\t\tconbo.warn(\"registerAttribute: both 'name' and 'handler' parameters are required\");\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar split = conbo.toUnderscoreCase(name).split('_');\r\n\t\t\t\r\n\t\t\tif (split.length < 2)\r\n\t\t\t{\r\n\t\t\t\tconbo.warn(\"registerAttribute: \"+name+\" does not include a namespace, e.g. \"+conbo.toCamelCase('my-'+name));\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar ns = split[0];\r\n\t\t\t\r\n\t\t\tif (BindingUtils__reservedNamespaces.indexOf(ns) != -1)\r\n\t\t\t{\r\n\t\t\t\tconbo.warn(\"registerAttribute: custom attributes cannot to use the \"+ns+\" namespace\");\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tBindingUtils__registeredNamespaces = conbo.union(BindingUtils__registeredNamespaces, [ns]);\r\n\t\t\t\r\n\t\t\tconbo.setValues(handler, \r\n\t\t\t{\r\n\t\t\t\treadOnly: !!readOnly,\r\n\t\t\t\traw: !!raw\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tBindingUtils__customAttrs[name] = handler;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Register one or more custom attribute handlers \r\n\t\t * \r\n\t\t * @see\t\t\t#registerAttribute\r\n\t\t * @param \t\t{Object}\t\t\t\thandlers - Object containing one or more custom attribute handlers\r\n\t\t * @param \t\t{boolean}\t\t\t\t[readOnly=false] - Whether or not the attributes are read-only\r\n\t\t * @returns\t\t{conbo.BindingUtils}\tA reference to this object \r\n\t\t * \r\n\t\t * @example\r\n\t\t * conbo.bindingUtils.registerAttributes({myFoo:myFooFunction, myBar:myBarFunction});\r\n\t\t */\r\n\t\tregisterAttributes: function(handlers, readOnly)\r\n\t\t{\r\n\t\t\tfor (var a in handlers)\r\n\t\t\t{\r\n\t\t\t\tthis.addAttribute(a, handlers[a], readOnly);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Parses a template, preparing values in {{double}} curly brackets to\r\n\t\t * be replaced with bindable text nodes \r\n\t\t * \r\n\t\t * @param\t{string}\ttemplate - String containing a View template\r\n\t\t * @returns\t{string}\tThe parsed template\r\n\t\t */\r\n\t\tparseTemplate: function(template)\r\n\t\t{\r\n\t\t\treturn (template || '').replace(/{{(.+?)}}/g, function(ignored, propName) \r\n\t\t\t{\r\n\t\t\t\treturn '<cb-text cb-bind=\"'+propName.trim()+'\"></cb-text>';\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\ttoString: function()\r\n\t\t{\r\n\t\t\treturn 'conbo.BindingUtils';\r\n\t\t},\r\n\t});\r\n\t\r\n\t/**\r\n\t * Default instance of the BindingUtils data-binding utility class\r\n\t * @memberof\tconbo\r\n\t * @type\t\t{conbo.BindingUtils}\r\n\t */\r\n\tconbo.bindingUtils = new conbo.BindingUtils();\r\n\t\r\n})();\r\n\r\n/**\r\n * Mutation Observer\r\n * \r\n * Simplified mutation observer dispatches ADD and REMOVE events following \r\n * changes in the DOM, compatible with IE9+ and all modern browsers\r\n * \r\n * @class\t\tMutationObserver\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options\r\n * @fires\t\tconbo.ConboEvent#ADD\r\n * @fires\t\tconbo.ConboEvent#REMOVE\r\n */\r\nconbo.MutationObserver = conbo.EventDispatcher.extend(\r\n/** @lends conbo.MutationObserver.prototype */\r\n{\r\n\tinitialize: function()\r\n\t{\r\n\t\tthis.bindAll();\r\n\t},\r\n\t\r\n\tobserve: function(el)\r\n\t{\r\n\t\tthis.disconnect();\r\n\t\t\r\n\t\tif (!el) return;\r\n\t\t\r\n\t\tvar MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n\t\t\r\n\t\t// Modern browsers\r\n\t\tif (MutationObserver)\r\n\t\t{\r\n\t\t\tvar mo = new MutationObserver((function(mutations, observer)\r\n\t\t\t{\r\n\t\t\t\tvar added = mutations[0].addedNodes;\r\n\t\t\t\tvar removed = mutations[0].removedNodes;\r\n\t\t\t\t\r\n\t\t\t\tif (added.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.__addHandler(conbo.toArray(added));\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tif (mutations[0].removedNodes.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.__removeHandler(conbo.toArray(removed));\r\n\t\t\t\t}\r\n\t\t\t}).bind(this));\r\n\t\t\t\r\n\t\t\tmo.observe(el, {childList:true, subtree:true});\r\n\t\t\t\r\n\t\t\tthis.__mo = mo;\r\n\t\t}\r\n\t\t// IE9\r\n\t\telse\r\n\t\t{\r\n\t\t\tel.addEventListener('DOMNodeInserted', this.__addHandler);\r\n\t\t\tel.addEventListener('DOMNodeRemoved', this.__removeHandler);\r\n\t\t\t\r\n\t\t\tthis.__el = el;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tdisconnect: function()\r\n\t{\r\n\t\tvar mo = this.__mo;\r\n\t\tvar el = this.__el;\r\n\t\t\r\n\t\tif (mo) \r\n\t\t{\r\n\t\t\tmo.disconnect();\r\n\t\t}\r\n\t\t\r\n\t\tif (el) \r\n\t\t{\r\n\t\t\tel.removeEventListener('DOMNodeInserted', this.__addHandler);\r\n\t\t\tel.removeEventListener('DOMNodeRemoved', this.__removeHandler);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__addHandler: function(event)\r\n\t{\r\n\t\tvar nodes = conbo.isArray(event)\r\n\t\t\t? event\r\n\t\t\t: [event.target];\r\n\t\t\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.ADD, {nodes:nodes}));\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__removeHandler: function(event)\r\n\t{\r\n\t\tvar nodes = conbo.isArray(event)\r\n\t\t\t? event\r\n\t\t\t: [event.target];\r\n\t\t\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.REMOVE, {nodes:nodes}));\r\n\t}\r\n});\r\n\r\n/**\r\n * Element Proxy\r\n * \r\n * Wraps an Element to add cross browser or simplified functionality;\r\n * think of it as \"jQuery nano\"\r\n * \r\n * @class\t\tElementProxy\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventProxy\r\n * @author \t\tNeil Rackett\r\n * @deprecated\tThis class will be replaced by standard HTML5 functionality in future and may be removed without notice\r\n * @param \t\t{Element} el - Element to be proxied\r\n */\r\nconbo.ElementProxy = conbo.EventProxy.extend(\r\n/** @lends conbo.ElementProxy.prototype */\r\n{\r\n\t/**\r\n\t * Returns object containing the value of all attributes on a DOM element\r\n\t * \r\n\t * @returns\t\t{Object}\r\n\t * \r\n\t * @example\r\n\t * ep.attributes; // results in something like {src:\"foo/bar.jpg\"}\r\n\t */\r\n\tgetAttributes: function()\r\n\t{\r\n\t\tvar el = this.__obj;\r\n\t\tvar a = {};\r\n\t\t\r\n\t\tif (el)\r\n\t\t{\r\n\t\t\tconbo.forEach(el.attributes, function(p)\r\n\t\t\t{\r\n\t\t\t\ta[conbo.toCamelCase(p.name)] = p.value;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn a;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sets the attributes on a DOM element from an Object, converting camelCase to kebab-case, if needed\r\n\t * \r\n\t * @param \t\t{Element}\tobj - Object containing the attributes to set\r\n\t * @returns\t\t{conbo.ElementProxy}\r\n\t * \r\n\t * @example\r\n\t * ep.setAttributes({foo:1, bar:\"red\"});\r\n\t */\r\n\tsetAttributes: function(obj)\r\n\t{\r\n\t\tvar el = this.__obj;\r\n\t\t\r\n\t\tif (el && obj)\r\n\t\t{\r\n\t\t\tconbo.forEach(obj, function(value, name)\r\n\t\t\t{\r\n\t\t\t\tel.setAttribute(conbo.toKebabCase(name), value);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @see #getAttributes\r\n\t */\r\n\tget attributes()\r\n\t{\r\n\t\treturn this.getAttributes();\r\n\t},\r\n\t\r\n\t/**\r\n\t * @see #setAttributes\r\n\t */\r\n\tset attributes(value)\r\n\t{\r\n\t\treturn this.setAttributes(value);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Returns object containing the value of all cb-* attributes on a DOM element\r\n\t * \r\n\t * @returns\t\t{Array}\r\n\t * \r\n\t * @example\r\n\t * ep.cbAttributes.view;\r\n\t */\r\n\tget cbAttributes()\r\n\t{\r\n\t\tvar el = this.__obj;\r\n\t\tvar a = {};\r\n\t\t\r\n\t\tif (el)\r\n\t\t{\r\n\t\t\tconbo.forEach(el.attributes, function(p)\r\n\t\t\t{\r\n\t\t\t\tif (p.name.indexOf('cb-') === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\ta[conbo.toCamelCase(p.name.substr(3))] = p.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn a;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add the specified CSS class(es) to the element\r\n\t *  \r\n\t * @param \t\t{string}\tclassName - One or more CSS class names, separated by spaces\r\n\t * @returns\t\t{conbo.ElementProxy}\r\n\t */\r\n\taddClass: function(className)\r\n\t{\r\n\t\tvar el = this.__obj;\r\n\t\t\r\n\t\tif (el instanceof Element && className)\r\n\t\t{\r\n\t\t\tvar classNames = className.trim().split(' ');\r\n\r\n\t\t\t// IE11 doesn't support multiple parameters\r\n\t\t\twhile (className = classNames.pop())\r\n\t\t\t{\r\n\t\t\t\tel.classList.add(className);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove the specified CSS class(es) from the element\r\n\t * \r\n\t * @param \t\t{string|function}\t\tclassName - One or more CSS class names, separated by spaces, or a function extracts the classes to be removed from the existing className property\r\n\t * @returns\t\t{conbo.ElementProxy}\r\n\t */\r\n\tremoveClass: function(className)\r\n\t{\r\n\t\tvar el = this.__obj;\r\n\t\t\r\n\t\tif (el instanceof Element && className)\r\n\t\t{\r\n\t\t\tif (conbo.isFunction(className))\r\n\t\t\t{\r\n\t\t\t\tclassName = className(el.className);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar classNames = className.trim().split(' ');\r\n\r\n\t\t\t// IE11 doesn't support multiple parameters\r\n\t\t\twhile (className = classNames.pop())\r\n\t\t\t{\r\n\t\t\t\tel.classList.remove(className);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Is this element using the specified CSS class?\r\n\t *  \r\n\t * @param \t\t{string}\tclassName - CSS class name\r\n\t * @returns\t\t{boolean}\r\n\t */\r\n\thasClass: function(className)\r\n\t{\r\n\t\tvar el = this.__obj;\r\n\t\t\r\n\t\treturn el instanceof Element && className\r\n\t\t\t? el.classList.contains(className)\r\n\t\t\t: false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Finds the closest parent element matching the specified selector\r\n\t *  \r\n\t * @param \t\t{string}\tselector - Query selector\r\n\t * @returns\t\t{Element}\r\n\t */\r\n\tclosest: function(selector)\r\n\t{\r\n\t\tvar el = this.__obj;\r\n\t\t\r\n\t\tif (el)\r\n\t\t{\r\n\t\t\tvar matchesFn;\r\n\t\t\t\r\n\t\t\t['matches','webkitMatchesSelector','mozMatchesSelector','msMatchesSelector','oMatchesSelector'].some(function(fn) \r\n\t\t\t{\r\n\t\t\t\tif (typeof document.body[fn] == 'function') \r\n\t\t\t\t{\r\n\t\t\t\t\tmatchesFn = fn;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar parent;\r\n\t\t\t\r\n\t\t\t// traverse parents\r\n\t\t\twhile (el)\r\n\t\t\t{\r\n\t\t\t\tparent = el.parentElement;\r\n\t\t\t\t\r\n\t\t\t\tif (parent && parent[matchesFn](selector)) \r\n\t\t\t\t{\r\n\t\t\t\t\treturn parent;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tel = parent;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n});\r\n\r\n/**\r\n * Interface class for data renderers, for example an item renderer for\r\n * use with the cb-repeat attribute\r\n * \r\n * @member\t\t{object}\tIDataRenderer\r\n * @memberof\tconbo\r\n * @author \t\tNeil Rackett\r\n */\r\nconbo.IDataRenderer =\r\n{\r\n\t/**\r\n\t * Data to be rendered\r\n\t * @type\t{*}\r\n\t */\r\n\tdata: undefined,\r\n\t\r\n\t/**\r\n\t * Index of the current item\r\n\t * @type\t{number}\r\n\t */\r\n\tindex: -1,\r\n\t\r\n\t/**\r\n\t * Is this the last item in the list?\r\n\t * @type\t{boolean}\r\n\t */\r\n\tisLast: false,\r\n\t\r\n\t/**\r\n\t * The list containing the data for this item\r\n\t * @type\t{(conbo.List|Array)}\r\n\t */\r\n\tlist: undefined\r\n};\r\n\r\n/**\r\n * Glimpse\r\n * \r\n * A lightweight element wrapper that has no dependencies, no context and \r\n * no data binding, but is able to apply a super-simple template.\r\n * \r\n * It's invisible to View, so it's great for creating components, and you \r\n * can bind data to it using the `cb-data` attribute to set the data \r\n * property of your Glimpse\r\n * \r\n * @class\t\tGlimpse\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options\r\n */\r\nconbo.Glimpse = conbo.EventDispatcher.extend(\r\n/** @lends conbo.Glimpse.prototype */\r\n{\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param {Object} [options]\r\n\t * @private\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\tthis.__setEl(options.el || document.createElement(this.tagName));\r\n\t\t\r\n\t\tif (this.template)\r\n\t\t{\r\n\t\t\tthis.el.innerHTML = this.template;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * When a new instance of this class is created without specifying an element,\r\n\t * it will use this tag name (the default is `div`)\r\n\t * @type\t{string}\r\n\t */\r\n\tget tagName()\r\n\t{\r\n\t\treturn this.__tagName || 'div';\r\n\t},\r\n\t\r\n\tset tagName(value)\r\n\t{\r\n\t\t__definePrivateProperty(this, '__tagName', value);\r\n\t},\r\n\t\r\n\t/**\r\n\t * A reference to this class instance's element\r\n\t * @type\t{HTMLElement}\r\n\t */\r\n\tget el()\r\n\t{\r\n\t\treturn this.__el;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Glimpse';\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set this View's element\r\n\t * @private\r\n\t */\r\n\t__setEl: function(el)\r\n\t{\r\n\t\tvar attrs = conbo.setValues({}, this.attributes);\r\n\t\t\r\n\t\tif (this.id && !el.id) \r\n\t\t{\r\n\t\t\tattrs.id = this.id;\r\n\t\t}\r\n\t\t\r\n\t\tel.className += ' cb-glimpse '+(this.className || '');\r\n\t\tel.cbGlimpse = this;\r\n\t\t\r\n\t\tfor (var attr in attrs)\r\n\t\t{\r\n\t\t\tel.setAttribute(conbo.toKebabCase(attr), attrs[attr]);\t\t\r\n\t\t}\t\t\r\n\t\t\r\n\t\tif (this.style)\r\n\t\t{\r\n\t\t\tel.style = conbo.setValues(el.style, this.style);\r\n\t\t}\r\n\t\t\r\n\t\t__definePrivateProperty(this, '__el', el);\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n});\r\n\r\n__denumerate(conbo.Glimpse.prototype);\r\n\r\nvar View__templateCache = {};\r\n\r\n/**\r\n * View\r\n * \r\n * Creating a conbo.View creates its initial element outside of the DOM,\r\n * if an existing element is not provided...\r\n * \r\n * @class\t\tView\r\n * @memberof\tconbo\r\n * @augments\tconbo.Glimpse\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object}\t[options] - Object containing optional initialisation options, including 'attributes', 'className', 'data', 'el', 'id', 'tagName', 'template', 'templateUrl'\r\n * @fires\t\tconbo.ConboEvent#ADD\r\n * @fires\t\tconbo.ConboEvent#DETACH\r\n * @fires\t\tconbo.ConboEvent#REMOVE\r\n * @fires\t\tconbo.ConboEvent#BIND\r\n * @fires\t\tconbo.ConboEvent#UNBIND\r\n * @fires\t\tconbo.ConboEvent#TEMPLATE_COMPLETE\r\n * @fires\t\tconbo.ConboEvent#TEMPLATE_ERROR\r\n * @fires\t\tconbo.ConboEvent#CREATION_COMPLETE\r\n */\r\nconbo.View = conbo.Glimpse.extend(\r\n/** @lends \t\tconbo.View.prototype */\r\n{\r\n\t/**\r\n\t * @member\t\t{Object}\tattributes - Attributes to apply to the View's element\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{string}\tclassName - CSS class name(s) to apply to the View's element\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{Object}\tdata - Arbitrary data Object\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{string}\tid - ID to apply to the View's element\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{any}\t\tstyle - Object containing CSS styles to apply to this View's element\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{string}\ttagName - The tag name to use for the View's element (if no element specified)\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{string}\ttemplate - Template to apply to the View's element\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{string}\ttemplateUrl - Template to load and apply to the View's element\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{boolean}\ttemplateCacheEnabled - Whether or not the contents of templateUrl should be cached on first load for use with future instances of this View class (default: true)\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{boolean}\tautoInitTemplate - Whether or not the template should automatically be loaded and applied, rather than waiting for the user to call initTemplate (default: true)\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * @member\t\t{string}\tcurrentState - The current view state\r\n\t * @memberof\tconbo.View.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param options\r\n\t * @private\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\toptions = conbo.clone(options) || {};\r\n\t\t\r\n\t\tif (options.className && this.className)\r\n\t\t{\r\n\t\t\toptions.className += ' '+this.className;\r\n\t\t}\r\n\t\t\r\n\t\tvar viewOptions = conbo.union\r\n\t\t(\r\n\t\t\t[\r\n\t\t\t\t'attributes',\r\n\t\t\t\t'className', \r\n\t\t\t\t'data', \r\n\t\t\t\t'id', \r\n\t\t\t\t'style', \r\n\t\t\t\t'tagName', \r\n\t\t\t\t'template', \r\n\t\t\t\t'templateUrl',\r\n\t\t\t\t'templateCacheEnabled',\r\n\t\t\t\t'autoInitTemplate',\r\n\t\t\t],\r\n\t\t\t\r\n\t\t\t// Adds interface properties\r\n\t\t\tconbo.intersection\r\n\t\t\t(\r\n\t\t\t\tconbo.variables(this, true), \r\n\t\t\t\tconbo.variables(options)\r\n\t\t\t)\r\n\t\t);\r\n\t\t\r\n\t\tconbo.setValues(this, conbo.pick(options, viewOptions));\r\n\t\tconbo.makeBindable(this, ['currentState']);\r\n\t\t\r\n\t\tthis.context = options.context;\r\n\t\tthis.__setEl(options.el || document.createElement(this.tagName));\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__postInitialize: function(options)\r\n\t{\r\n\t\t__definePrivateProperty(this, '__initialized', true);\r\n\t\t\r\n\t\tthis.__content =  this.el.innerHTML;\r\n\t\t\r\n\t\tif (this.autoInitTemplate !== false)\r\n\t\t{\r\n\t\t\tthis.initTemplate();\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * This View's element\r\n\t * @type\t\t{HTMLElement}\r\n\t */\r\n\tget el()\r\n\t{\r\n\t\treturn this.__el;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Has this view completed its life cycle phases?\r\n\t * @type\t{boolean}\r\n\t */\r\n\tget initialized()\r\n\t{\r\n\t\treturn !!this.__initialized;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Returns a reference to the parent View of this View, based on this \r\n\t * View element's position in the DOM\r\n\t * @type\t{conbo.View}\r\n\t */\r\n\tget parent()\r\n\t{\r\n\t\tif (this.initialized)\r\n\t\t{\r\n\t\t\treturn this.__getParent('.cb-view');\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Returns a reference to the parent Application of this View, based on\r\n\t * this View element's position in the DOM\r\n\t * @type\t{conbo.Application}\r\n\t */\r\n\tget parentApp()\r\n\t{\r\n\t\tif (this.initialized)\r\n\t\t{\r\n\t\t\treturn this.__getParent('.cb-app');\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Does this view have a template?\r\n\t * @type\t{boolean}\r\n\t */\r\n\tget hasTemplate()\r\n\t{\r\n\t\treturn !!(this.template || this.templateUrl);\r\n\t},\r\n\t\r\n\t/**\r\n\t * The element into which HTML content should be placed; this is either the \r\n\t * first DOM element with a `cb-content` or the root element of this view\r\n\t * @type\t{HTMLElement}\r\n\t */\r\n\tget content()\r\n\t{\r\n\t\treturn this.querySelector('[cb-content]');\r\n\t},\r\n\t\r\n\t/**\r\n\t * Does this View support HTML content?\r\n\t * @type\t{boolean}\r\n\t */\r\n\tget hasContent()\r\n\t{\r\n\t\treturn !!this.content;\r\n\t},\r\n\t\r\n\t/**\r\n\t * A View's body is the element to which content should be added:\r\n\t * the View's content, if it exists, or the View's main element, if it doesn't\r\n\t * @type\t{HTMLElement}\r\n\t */\r\n\tget body()\r\n\t{\r\n\t\treturn this.content || this.el;\r\n\t},\r\n\t\r\n\t/**\r\n\t * The context that will automatically be applied to children\r\n\t * when binding or appending Views inside of this View\r\n\t * @type\t{conbo.Context}\r\n\t */\r\n\tget subcontext()\r\n\t{\r\n\t\treturn this.__subcontext || this.context;\r\n\t},\r\n\t\r\n\tset subcontext(value)\r\n\t{\r\n\t\tthis.__subcontext = value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Uses querySelector to find the first matching element contained within the\r\n\t * current View's element, but not within the elements of child Views\r\n\t * \r\n\t * @param\t{string}\t\tselector - The selector to use\r\n\t * @param\t{boolean}\t\tdeep - Include elements in child Views?\r\n\t * @returns\t{HTMLElement}\tThe first matching element\r\n\t */\r\n\tquerySelector: function(selector, deep)\r\n\t{\r\n\t\treturn this.querySelectorAll(selector, deep)[0];\r\n\t},\r\n\t\r\n\t/**\r\n\t * Uses querySelectorAll to find all matching elements contained within the\r\n\t * current View's element, but not within the elements of child Views\r\n\t * \r\n\t * @param\t{string}\t\tselector - The selector to use\r\n\t * @param\t{boolean}\t\tdeep - Include elements in child Views?\r\n\t * @returns\t{Array}\t\t\tAll elements matching the selector\r\n\t */\r\n\tquerySelectorAll: function(selector, deep)\r\n\t{\r\n\t\tif (this.el)\r\n\t\t{\r\n\t\t\tvar results = conbo.toArray(this.el.querySelectorAll(selector));\r\n\t\t\t\r\n\t\t\tif (!deep)\r\n\t\t\t{\r\n\t\t\t\tvar views = this.el.querySelectorAll('.cb-view, [cb-view], [cb-app]');\r\n\t\t\t\t\r\n\t\t\t\t// Remove elements in child Views\r\n\t\t\t\tconbo.forEach(views, function(el)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar els = conbo.toArray(el.querySelectorAll(selector));\r\n\t\t\t\t\tresults = conbo.difference(results, els.concat(el));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn results;\r\n\t\t}\r\n\t\t\r\n\t\treturn [];\r\n\t},\r\n\t\r\n\t/**\r\n\t * Take the View's element element out of the DOM\r\n\t * @returns\t{this}\r\n\t */\r\n\tdetach: function() \r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar el = this.el;\r\n\r\n\t\t\tif (el.parentNode)\r\n\t\t\t{\r\n\t\t\t\tel.parentNode.removeChild(el);\t\t\r\n\t\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.DETACH));\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove and destroy this View by taking the element out of the DOM, \r\n\t * unbinding it, removing all event listeners and removing the View from \r\n\t * its Context.\r\n\t * \r\n\t * You should use a REMOVE event handler to destroy any event listeners,\r\n\t * timers or other code you may have added.\r\n\t * \r\n\t * @returns\t{this}\r\n\t */\r\n\tremove: function()\r\n\t{\r\n\t\tthis.unbindView();\r\n\t\t\r\n\t\tif (this.data)\r\n\t\t{\r\n\t\t\tthis.data = undefined;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.context)\r\n\t\t{\r\n\t\t\tthis.context\r\n\t\t\t\t.uninjectSingletons(this)\r\n\t\t\t\t.removeEventListener(undefined, undefined, this)\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tthis.context = undefined;\r\n\t\t}\r\n\t\t\r\n\t\tthis.detach()\r\n\t\t\t.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.REMOVE))\r\n\t\t\t.removeEventListener()\r\n\t\t\t;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Append this DOM element from one View class instance this class \r\n\t * instances DOM element\r\n\t * \r\n\t * @param \t\t{conbo.View|Function} view - The View instance to append\r\n\t * @returns\t\t{this}\r\n\t */\r\n\tappendView: function(view)\r\n\t{\r\n\t\tif (arguments.length > 1)\r\n\t\t{\r\n\t\t\tconbo.forEach(arguments, function(view, index, list) \r\n\t\t\t{\r\n\t\t\t\tthis.appendView(view);\r\n\t\t\t},\r\n\t\t\tthis);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\r\n\t\tif (typeof view === 'function')\r\n\t\t{\r\n\t\t\tview = new view(this.context);\r\n\t\t}\r\n\r\n\t\tif (!(view instanceof conbo.View))\r\n\t\t{\r\n\t\t\tthrow new Error('Parameter must be instance of conbo.View class');\r\n\t\t}\r\n\t\r\n\t\tthis.body.appendChild(view.el);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Prepend this DOM element from one View class instance this class \r\n\t * instances DOM element\r\n\t * \r\n\t * @param \t\t{conbo.View} view - The View instance to preppend\r\n\t * @returns\t\t{this}\r\n\t */\r\n\tprependView: function(view)\r\n\t{\r\n\t\tif (arguments.length > 1)\r\n\t\t{\r\n\t\t\tconbo.forEach(arguments, function(view, index, list) \r\n\t\t\t{\r\n\t\t\t\tthis.prependView(view);\r\n\t\t\t}, \r\n\t\t\tthis);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\r\n\t\tif (typeof view === 'function')\r\n\t\t{\r\n\t\t\tview = new view(this.context);\r\n\t\t}\r\n\t\t\r\n\t\tif (!(view instanceof conbo.View))\r\n\t\t{\r\n\t\t\tthrow new Error('Parameter must be instance of conbo.View class');\r\n\t\t}\r\n\t\t\r\n\t\tvar firstChild = this.body.firstChild;\r\n\t\t\r\n\t\tfirstChild\r\n\t\t\t? this.body.insertBefore(view.el, firstChild)\r\n\t\t\t: this.appendView(view);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Automatically bind elements to properties of this View\r\n\t * \r\n\t * @example\t<div cb-bind=\"property|parseMethod\" cb-hide=\"property\">Hello!</div> \r\n\t * @returns\t{this}\r\n\t */\r\n\tbindView: function()\r\n\t{\r\n\t\tconbo.bindingUtils.bindView(this);\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.BIND));\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Unbind elements from class properties\r\n\t * @returns\t{this}\r\n\t */\r\n\tunbindView: function() \r\n\t{\r\n\t\tconbo.bindingUtils.unbindView(this);\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.UNBIND));\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Initialize the View's template, either by loading the templateUrl\r\n\t * or using the contents of the template property, if either exist\r\n\t * @returns\t{this}\r\n\t */\r\n\tinitTemplate: function()\r\n\t{\r\n\t\tvar template = this.template;\r\n\t\t\r\n\t\tif (!!this.templateUrl)\r\n\t\t{\r\n\t\t\tthis.loadTemplate();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (conbo.isFunction(template))\r\n\t\t\t{\r\n\t\t\t\ttemplate = template(this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar el = this.el;\r\n\t\t\t\r\n\t\t\tif (conbo.isString(template))\r\n\t\t\t{\r\n\t\t\t\tel.innerHTML = this.__parseTemplate(template);\r\n\t\t\t}\r\n\t\t\telse if (/{{(.+?)}}/.test(el.textContent))\r\n\t\t\t{\r\n\t\t\t\tel.innerHTML = this.__parseTemplate(el.innerHTML);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.__initView();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Load HTML template and use it to populate this View's element\r\n\t * \r\n\t * @param \t{string}\t[url]\t- The URL to which the request is sent\r\n\t * @returns\t{this}\r\n\t */\r\n\tloadTemplate: function(url)\r\n\t{\r\n\t\turl || (url = this.templateUrl);\r\n\t\t\r\n\t\tvar el = this.body;\r\n\t\t\r\n\t\tthis.unbindView();\r\n\t\t\r\n\t\tif (this.templateCacheEnabled !== false && View__templateCache[url])\r\n\t\t{\r\n\t\t\tel.innerHTML = View__templateCache[url];\r\n\t\t\tthis.__initView();\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tvar resultHandler = function(event)\r\n\t\t{\r\n\t\t\tvar result = this.__parseTemplate(event.result);\r\n\t\t\t\r\n\t\t\tif (this.templateCacheEnabled !== false)\r\n\t\t\t{\r\n\t\t\t\tView__templateCache[url] = result;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tel.innerHTML = result;\r\n\t\t\tthis.__initView();\r\n\t\t};\r\n\t\t\r\n\t\tvar faultHandler = function(event)\r\n\t\t{\r\n\t\t\tel.innerHTML = '';\r\n\t\t\t\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.TEMPLATE_ERROR));\r\n\t\t\tthis.__initView();\r\n\t\t};\r\n\t\t\r\n\t\tconbo\r\n\t\t\t.httpRequest({url:url, dataType:'text'})\r\n\t\t\t.then(resultHandler.bind(this), faultHandler.bind(this))\r\n\t\t\t;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.View';\r\n\t},\r\n\r\n\t\r\n\t/* INTERNAL */\r\n\t\r\n\t/**\r\n\t * Set this View's element\r\n\t * @private\r\n\t */\r\n\t__setEl: function(el)\r\n\t{\r\n\t\tif (!conbo.isElement(el))\r\n\t\t{\r\n\t\t\tconbo.error('Invalid element passed to View');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar attrs = conbo.setValues({}, this.attributes);\r\n\t\t\r\n\t\tif (this.id && !el.id) \r\n\t\t{\r\n\t\t\tattrs.id = this.id;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.style) \r\n\t\t{\r\n\t\t\tconbo.setValues(el.style, this.style);\r\n\t\t}\r\n\t\t\r\n\t\tvar ep = __ep(el);\r\n\t\t\r\n\t\tel.cbView = this;\r\n\t\t\r\n\t\tep.addClass('cb-view')\r\n\t\t\t.addClass(this.className)\r\n\t\t\t.setAttributes(attrs)\r\n\t\t\t;\r\n\t\t\r\n\t\t__definePrivateProperty(this, '__el', el);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\t\r\n\t/**\r\n\t * Populate and render the View's HTML content\r\n\t * @private\r\n\t */\r\n\t__initView: function()\r\n\t{\r\n\t\tif (this.hasTemplate && this.hasContent)\r\n\t\t{\r\n\t\t\tthis.content.innerHTML = this.__content;\r\n\t\t}\r\n\t\t\r\n\t\tdelete this.__content;\r\n\t\t\r\n\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.TEMPLATE_COMPLETE))\r\n\t\t\t.bindView()\r\n\t\t\t;\r\n\t\t\r\n\t\tconbo.defer(function()\r\n\t\t{\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.CREATION_COMPLETE));\r\n\t\t}, this);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__getParent: function(selector) \r\n\t{\r\n\t\tvar el = __ep(this.el).closest(selector);\r\n\t    if (el) return el.cbView;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__parseTemplate: function(template)\r\n\t{\r\n\t\treturn conbo.bindingUtils.parseTemplate(template);\r\n\t}\r\n\t\r\n});\r\n\r\n__denumerate(conbo.View.prototype);\r\n\r\n/**\r\n * ItemRenderer\r\n * \r\n * A conbo.View class that implements the conbo.IDataRenderer interface\r\n * \r\n * @class\t\tItemRenderer\r\n * @memberof\tconbo\r\n * @augments\tconbo.View\r\n * @augments\tconbo.IDataRenderer\r\n * @param \t\t{Object} [options] - Object containing initialisation options\r\n * @see\t\t\tconbo.View\r\n * @author \t\tNeil Rackett\r\n */\r\nconbo.ItemRenderer = conbo.View.extend().implement(conbo.IDataRenderer);\r\n\r\n/**\r\n * Data to be rendered\r\n * @member\t\t{*}\t\t\tdata\r\n * @memberof\tconbo.ItemRenderer.prototype\r\n */\r\n\r\n /**\r\n * Index of the current item\r\n * @member\t\t{number}\tindex\r\n * @memberof\tconbo.ItemRenderer.prototype\r\n */\r\n\r\n/**\r\n * Is this the last item in the list?\r\n * @member\t\t{boolean}\tisLast\r\n * @memberof\tconbo.ItemRenderer.prototype\r\n */\r\n\r\n/**\r\n * The list containing the data for this item\r\n * @member\t\t{(conbo.List|Array)}\tlist\r\n * @memberof\tconbo.ItemRenderer.prototype\r\n */\r\n\r\n/**\r\n * Application\r\n * \r\n * Base application class for client-side applications\r\n * \r\n * @class\t\tApplication\r\n * @memberof\tconbo\r\n * @augments\tconbo.View\r\n * @author\t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing optional initialisation options, see View\r\n * @fires\t\tconbo.ConboEvent#ADD\r\n * @fires\t\tconbo.ConboEvent#DETACH\r\n * @fires\t\tconbo.ConboEvent#REMOVE\r\n * @fires\t\tconbo.ConboEvent#BIND\r\n * @fires\t\tconbo.ConboEvent#UNBIND\r\n * @fires\t\tconbo.ConboEvent#TEMPLATE_COMPLETE\r\n * @fires\t\tconbo.ConboEvent#TEMPLATE_ERROR\r\n * @fires\t\tconbo.ConboEvent#CREATION_COMPLETE\r\n */\r\nconbo.Application = conbo.View.extend(\r\n/** @lends conbo.Application.prototype */\r\n{\r\n\t/**\r\n\t * @member\t\t{conbo.Namespace} namespace - The application's namespace (required)\r\n\t * @memberof\tconbo.Application.prototype\r\n\t */\r\n\t\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param options\r\n\t * @private\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\toptions = conbo.clone(options) || {};\r\n\t\t\r\n\t\tif (!(this.namespace instanceof conbo.Namespace))\r\n\t\t{\r\n\t\t\tthrow new Error('Application namespace must be an instance of conbo.Namespace');\r\n\t\t}\r\n\t\t\r\n\t\toptions.app = this;\r\n\t\toptions.context = new this.contextClass(options);\r\n\r\n\t\tthis.addEventListener(conbo.ConboEvent.CREATION_COMPLETE, this.__creationComplete, this, 0, true);\r\n\t\t\r\n\t\tconbo.View.prototype.__construct.call(this, options);\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__creationComplete: function(options)\r\n\t{\r\n\t\tif (this.initialView)\r\n\t\t{\r\n\t\t\tthis.appendView(this.initialView);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * If specified, this View will be appended immediately after the Application is intialized.\r\n\t * If this property is set to a class, it will be instantiated automatically the first time\r\n\t * this property is read.\r\n\t * @type\t{conbo.View|Function}\r\n\t */\r\n\tget initialView()\r\n\t{\r\n\t\tif (typeof this.__initialView == 'function')\r\n\t\t{\r\n\t\t\tthis.initialView = new this.__initialView(this.context);\r\n\t\t}\r\n\r\n\t\treturn this.__initialView;\r\n\t},\r\n\r\n\tset initialView(value)\r\n\t{\r\n\t\tthis.__initialView = value;\r\n\t},\r\n\r\n\t/**\r\n\t * Default context class to use\r\n\t * You'll normally want to override this with your own\r\n\t * @type\t{conbo.Context}\r\n\t */\r\n\tget contextClass() \r\n\t{\r\n\t\treturn this.__contextClass || conbo.Context;\r\n\t},\r\n\t\r\n\tset contextClass(value)\r\n\t{\r\n\t\tthis.__contextClass = value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * If true, the application will automatically apply Glimpse and View \r\n\t * classes to elements when they're added to the DOM \r\n\t * @type\t{boolean}\r\n\t */\r\n\tget observeEnabled()\r\n\t{\r\n\t\treturn !!this.__mo;\r\n\t},\r\n\t\r\n\tset observeEnabled(value)\r\n\t{\r\n\t\tif (value == this.observeEnabled) return;\r\n\t\t\r\n\t\tvar mo;\r\n\t\t\r\n\t\tif (value)\r\n\t\t{\r\n\t\t\tmo = new conbo.MutationObserver();\r\n\t\t\tmo.observe(this.el);\r\n\t\t\t\r\n\t\t\tmo.addEventListener(conbo.ConboEvent.ADD, function(event)\r\n\t\t\t{\r\n\t\t\t\tconbo.bindingUtils\r\n\t\t\t\t\t.applyViews(this, this.namespace)\r\n\t\t\t\t\t.applyViews(this, this.namespace, 'glimpse')\r\n\t\t\t\t\t;\r\n\t\t\t}, \r\n\t\t\tthis);\r\n\t\t\t\r\n\t\t\tthis.__mo = mo;\r\n\t\t}\r\n\t\telse if (this.__mo)\r\n\t\t{\r\n\t\t\tmo = this.__mo;\r\n\t\t\tmo.removeEventListener();\r\n\t\t\tmo.disconnect();\r\n\t\t\t\r\n\t\t\tdelete this.__mo;\r\n\t\t}\r\n\t\t\r\n\t\tthis.dispatchChange('observeEnabled');\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Application';\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__setEl: function(element)\r\n\t{\r\n\t\tconbo.View.prototype.__setEl.call(this, element);\r\n\t\t__ep(this.el).addClass('cb-app');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n});\r\n\r\n__denumerate(conbo.Application.prototype);\r\n\r\n/**\r\n * conbo.Command\r\n * \r\n * Base class for commands to be registered in your Context \r\n * using mapCommand(...)\r\n * \r\n * @class\t\tCommand\r\n * @memberof\tconbo\r\n * @augments\tconbo.ConboClass\r\n * @author\t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing optional initialisation options, including 'context' (Context)\r\n */\r\nconbo.Command = conbo.ConboClass.extend(\r\n/** @lends conbo.Command.prototype */\r\n{\r\n\t/**\r\n\t * @member\t\t{conbo.Context}\tcontext - Application context\r\n\t * @memberof\tconbo.Command.prototype\r\n\t */\r\n\r\n\t/**\r\n\t * @member\t\t{conbo.Event}\tevent - The event that caused this command to execute\r\n\t * @memberof\tconbo.Command.prototype\r\n\t */\r\n\r\n\t/**\r\n\t * Constructor: DO NOT override! (Use initialize instead)\r\n\t * @param options\r\n\t * @private\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\tthis.event = options.event || {};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Execute: should be overridden\r\n\t * \r\n\t * When a Command is called in response to an event registered with the\r\n\t * Context, the class is instantiated, this method is called then the \r\n\t * class instance is destroyed\r\n\t */\r\n\texecute: function() {},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Command';\r\n\t}\r\n\t\r\n}).implement(conbo.IInjectable);\r\n\r\n__denumerate(conbo.Command.prototype);\r\n\r\n/**\r\n * HTTP Request\r\n * \r\n * Sends data to and/or loads data from a URL; advanced requests can be made \r\n * by passing a single options object, roughly analogous to the jQuery.ajax() \r\n * settings object plus `resultClass` and `makeObjectsBindable` properties;\r\n * or by passing URL, data and method parameters.\r\n * \r\n * @example\t\tconbo.httpRequest(\"http://www.foo.com/bar\", {user:1}, \"GET\");\r\n * @example\t\tconbo.httpRequest({url:\"http://www.foo.com/bar\", data:{user:1}, method:\"GET\", headers:{'X-Token':'ABC123'}});\r\n * \r\n * @see\t\t\thttp://api.jquery.com/jquery.ajax/\r\n * @memberof\tconbo\r\n * @param \t\t{string|object}\t\turlOrOptions - URL string or Object containing URL and other settings for the HTTP request\r\n * @param \t\t{Object}\t\t\tdata - Data to be sent with request (ignored when using options object)\r\n * @param \t\t{string}\t\t\tmethod - HTTP method to use, e.g. \"GET\" or \"POST\" (ignored when using options object)\r\n * @returns\t\t{Promise}\r\n */\r\nconbo.httpRequest = function(options)\r\n{\r\n\t// Simple mode\r\n\tif (conbo.isString(options))\r\n\t{\r\n\t\toptions = {url:options, data:arguments[1], method:arguments[2]};\r\n\t}\r\n\t\r\n\tif (!conbo.isObject(options) || !options.url)\r\n\t{\r\n\t\tthrow new Error('httpRequest called without specifying a URL');\r\n\t}\r\n\t\r\n\treturn new Promise(function(resolve, reject)\r\n\t{\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\tvar aborted;\r\n\t\tvar url = options.url;\r\n\t\tvar method = (options.method || options.type || \"GET\").toUpperCase();\r\n\t\tvar data = options.data || options.body;\r\n\t\tvar headers = options.headers || {};\r\n\t\tvar timeoutTimer;\r\n\t\tvar contentType = conbo.getValue(headers, \"Content-Type\", false) || options.contentType || conbo.CONTENT_TYPE_JSON;\r\n\t\tvar dataType = options.dataType || conbo.DATA_TYPE_JSON;\r\n\t\tvar decodeFunction = options.decodeFunction || options.dataFilter;\r\n\t\t\r\n\t\tvar getXml = function()\r\n\t\t{\r\n\t\t\tif (xhr.responseType === \"document\") \r\n\t\t\t{\r\n\t\t\t\treturn xhr.responseXML;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\r\n\t\t\t\r\n\t\t\tif (xhr.responseType === \"\" && !firefoxBugTakenEffect) \r\n\t\t\t{\r\n\t\t\t\treturn xhr.responseXML;\r\n\t\t\t}\r\n\t\t\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\t\r\n\t\tvar getResult = function() \r\n\t\t{\r\n\t\t\t// TODO Handle Chrome with requestType=blob throwing errors when testing access to responseText\r\n\t\t\tvar result = xhr.response || xhr.responseText || getXml(xhr);\r\n\t\t\t\r\n\t\t\tif (conbo.isFunction(decodeFunction))\r\n\t\t\t{\r\n\t\t\t\tresult = decodeFunction(result);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tswitch (dataType)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase conbo.DATA_TYPE_SCRIPT:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(function() { eval(result); }).call(options.scope || window);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase conbo.DATA_TYPE_JSON:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry { result = JSON.parse(result); }\r\n\t\t\t\t\t\tcatch (e) { result = undefined; }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase conbo.DATA_TYPE_TEXT:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Nothing to do\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resultClass = options.resultClass;\r\n\t\t\t\r\n\t\t\tif (!resultClass && options.makeObjectsBindable)\r\n\t\t\t{\r\n\t\t\t\tswitch (true)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase conbo.isArray(result):\r\n\t\t\t\t\t\tresultClass = conbo.List;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase conbo.isObject(result):\r\n\t\t\t\t\t\tresultClass = conbo.Hash;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (resultClass)\r\n\t\t\t{\r\n\t\t\t\tresult = new resultClass({source:result});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn result;\r\n\t\t};\r\n\r\n\t\tvar getResponseHeaders = function()\r\n\t\t{\r\n\t\t\tvar responseHeaders = xhr.getAllResponseHeaders();\r\n\t\t\tvar newValue = {};\r\n\t\t\t\r\n\t\t\tresponseHeaders.split('\\r\\n').forEach(function(header)\r\n\t\t\t{\r\n\t\t\t\tvar splitIndex = header.indexOf(':');\r\n\t\t\t\tvar propName = header.substr(0,splitIndex).trim();\r\n\t\t\t\t\r\n\t\t\t\tnewValue[propName] = header.substr(splitIndex+1).trim();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn newValue;\r\n\t\t};\r\n\t\t\r\n\t\tvar errorHandler = function() \r\n\t\t{\r\n\t\t\tclearTimeout(timeoutTimer);\r\n\t\t\t\r\n\t\t\tvar response = \r\n\t\t\t{\r\n\t\t\t\tfault: getResult(),\r\n\t\t\t\tresponseHeaders: getResponseHeaders(),\r\n\t\t\t\tstatus: xhr.status,\r\n\t\t\t\tmethod: method,\r\n\t\t\t\turl: url,\r\n\t\t\t\txhr: xhr\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\treject(new conbo.ConboEvent(conbo.ConboEvent.FAULT, response));\r\n\t\t};\r\n\t\t\r\n\t\t// will load the data & process the response in a special response object\r\n\t\tvar loadHandler = function() \r\n\t\t{\r\n\t\t\tif (aborted) return;\r\n\t\t\t\r\n\t\t\tclearTimeout(timeoutTimer);\r\n\t\t\t\r\n\t\t\tvar status = (xhr.status === 1223 ? 204 : xhr.status);\r\n\t\t\t\r\n\t\t\tif (status === 0 || status >= 400)\r\n\t\t\t{\r\n\t\t\t\terrorHandler();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar response = \r\n\t\t\t{\r\n\t\t\t\tresult: getResult(),\r\n\t\t\t\tresponseHeaders: getResponseHeaders(),\r\n\t\t\t\tstatus: status,\r\n\t\t\t\tmethod: method,\r\n\t\t\t\turl: url,\r\n\t\t\t\txhr: xhr\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tresolve(new conbo.ConboEvent(conbo.ConboEvent.RESULT, response));\r\n\t\t}\r\n\t\t\r\n\t\tvar readyStateChangeHandler = function() \r\n\t\t{\r\n\t\t\tif (xhr.readyState === 4) \r\n\t\t\t{\r\n\t\t\t\tconbo.defer(loadHandler);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tif (method !== \"GET\" && method !== \"HEAD\") \r\n\t\t{\r\n\t\t\tconbo.getValue(headers, \"Content-Type\", false) || (headers[\"Content-Type\"] = contentType);\r\n\t\t\t\r\n\t\t\tif (contentType == conbo.CONTENT_TYPE_JSON && conbo.isObject(data))\r\n\t\t\t{\r\n\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (method === 'GET' && conbo.isObject(data))\r\n\t\t{\r\n\t\t\tvar query = conbo.toQueryString(data);\r\n\t\t\tif (query) url += '?'+query;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t\t\r\n\t\t'onload' in xhr\r\n\t\t\t? xhr.onload = loadHandler // XHR2\r\n\t\t\t: xhr.onreadystatechange = readyStateChangeHandler; // XHR1 (should never be needed)\r\n\t\t\r\n\t\txhr.onerror = errorHandler;\r\n\t\txhr.onprogress = function() {}; // IE9 must have unique onprogress function\r\n\t\txhr.onabort = function() { aborted = true; };\r\n\t\txhr.ontimeout = errorHandler;\r\n\t\t\r\n\t\txhr.open(method, url, true, options.username, options.password);\r\n\t\txhr.withCredentials = !!options.withCredentials;\r\n\t\t\r\n\t\t// not setting timeout on using XHR because of old webkits not handling that correctly\r\n\t\t// both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n\t\tif (options.timeout > 0) \r\n\t\t{\r\n\t\t\ttimeoutTimer = setTimeout(function()\r\n\t\t\t{\r\n\t\t\t\tif (aborted) return;\r\n\t\t\t\taborted = true; // IE9 may still call readystatechange\r\n\t\t\t\txhr.abort(\"timeout\");\r\n\t\t\t\terrorHandler();\r\n\t\t\t}, \r\n\t\t\toptions.timeout);\r\n\t\t}\r\n\t\t\r\n\t\tfor (var key in headers)\r\n\t\t{\r\n\t\t\tif (headers.hasOwnProperty(key))\r\n\t\t\t{\r\n\t\t\t\txhr.setRequestHeader(key, headers[key]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\"responseType\" in options) \r\n\t\t{\r\n\t\t\txhr.responseType = options.responseType;\r\n\t\t}\r\n\r\n\t\tif (typeof options.beforeSend === \"function\") \r\n\t\t{\r\n\t\t\toptions.beforeSend(xhr);\r\n\t\t}\r\n\t\t\r\n\t\t// Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n\t\t// XMLHttpRequest spec says to pass null as data to indicate no data\r\n\t\t// See https://github.com/naugtur/xhr/issues/100.\r\n\t\txhr.send(data || null);\r\n\r\n\t});\t\t\r\n\r\n};\r\n\r\n/**\r\n * HTTP Service\r\n * \r\n * Base class for HTTP data services, with default configuration designed \r\n * for use with JSON REST APIs.\r\n * \r\n * For XML data sources, you will need to override decodeFunction to parse \r\n * response data, change the contentType and implement encodeFunction if \r\n * you're using RPC.  \r\n * \r\n * @class\t\tHttpService\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing optional initialisation options, including 'rootUrl', 'contentType', 'dataType', 'headers', 'encodeFunction', 'decodeFunction', 'resultClass','makeObjectsBindable'\r\n * @fires\t\tconbo.ConboEvent#RESULT\r\n * @fires\t\tconbo.ConboEvent#FAULT\r\n */\r\nconbo.HttpService = conbo.EventDispatcher.extend(\r\n/** @lends conbo.HttpService.prototype */\r\n{\r\n\t__construct: function(options)\r\n\t{\r\n\t\toptions = conbo.setDefaults(options, \r\n\t\t{\r\n\t\t\tcontentType: conbo.CONTENT_TYPE_JSON\r\n\t\t});\r\n\t\t\r\n\t\tconbo.setValues(this, conbo.setDefaults(conbo.pick(options, \r\n\t\t    'rootUrl', \r\n\t\t    'contentType', \r\n\t\t    'dataType', \r\n\t\t    'headers', \r\n\t\t    'encodeFunction', \r\n\t\t    'decodeFunction', \r\n\t\t    'resultClass',\r\n\t\t    'makeObjectsBindable'\r\n\t\t), {\r\n\t\t\tdataType: 'json'\r\n\t\t}));\r\n\t\t\r\n\t\tvar verbs = ['POST', 'GET', 'PUT', 'PATCH', 'DELETE'];\r\n\t\t\r\n\t\tverbs.forEach(function(verb)\r\n\t\t{\r\n\t\t\tthis[verb.toLowerCase()] = function(command, data, method, resultClass)\r\n\t\t\t{\r\n\t\t\t\treturn this.call(command, data, verb, resultClass);\r\n\t\t\t};\r\n\t\t}, \r\n\t\tthis);\r\n\t\t\r\n\t\tconbo.EventDispatcher.prototype.__construct.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t * The root URL of the web service\r\n\t */\r\n\tget rootUrl()\r\n\t{\r\n\t\treturn this._rootUrl || '';\r\n\t},\r\n\t\r\n\tset rootUrl(value)\r\n\t{\r\n\t\tvalue = String(value);\r\n\t\t\r\n\t\tif (value && value.slice(-1) != '/')\r\n\t\t{\r\n\t\t\tvalue += '/';\r\n\t\t}\r\n\t\t\r\n\t\tthis._rootUrl = value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Call a method of the web service using the specified verb\r\n\t * \r\n\t * @param\t{string}\tcommand - The name of the command\r\n\t * @param\t{Object}\t[data] - Object containing the data to send to the web service\r\n\t * @param\t{string}\t[method=GET] - GET, POST, etc (default: GET)\r\n\t * @param\t{Class}\t\t[resultClass] - Optional\r\n\t * @returns\t{Promise}\r\n\t */\r\n\tcall: function(command, data, method, resultClass)\r\n\t{\r\n\t\tvar scope = this;\r\n\r\n\t\tdata = conbo.clone(data || {});\r\n\t\tcommand = this.parseUrl(command, data);\r\n\t\tdata = this.encodeFunction(data, method);\r\n\t\t\r\n\t\treturn new Promise(function(resolve, reject)\r\n\t\t{\r\n\t\t\tconbo.httpRequest\r\n\t\t\t({\r\n\t\t\t\tdata: data,\r\n\t\t\t\ttype: method || 'GET',\r\n\t\t\t\theaders: scope.headers,\r\n\t\t\t\turl: (scope.rootUrl+command).replace(/\\/$/, ''),\r\n\t\t\t\tcontentType: scope.contentType || conbo.CONTENT_TYPE_JSON,\r\n\t\t\t\tdataType: scope.dataType,\r\n\t\t\t\tdataFilter: scope.decodeFunction,\r\n\t\t\t\tresultClass: resultClass || scope.resultClass, \r\n\t\t\t\tmakeObjectsBindable: scope.makeObjectsBindable\r\n\t\t\t})\r\n\t\t\t.then(function(event)\r\n\t\t\t{\r\n\t\t\t\tscope.dispatchEvent(event);\r\n\t\t\t\tresolve(event);\r\n\t\t\t})\r\n\t\t\t.catch(function(event)\r\n\t\t\t{\r\n\t\t\t\tscope.dispatchEvent(event);\r\n\t\t\t\treject(event);\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\t\r\n\t/**\r\n\t * Call a method of the web service using the POST verb\r\n\t * \r\n\t * @memberof\tconbo.HttpService.prototype\r\n\t * @method\t\tpost\r\n\t * @param\t\t{string}\tcommand - The name of the command\r\n\t * @param\t\t{Object}\t[data] - Object containing the data to send to the web service\r\n\t * @param\t\t{Class}\t\t[resultClass] - Optional\r\n\t * @returns\t\t{Promise}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Call a method of the web service using the GET verb\r\n\t * \r\n\t * @memberof\tconbo.HttpService.prototype\r\n\t * @method\t\tget \r\n\t * @param\t\t{string}\tcommand - The name of the command\r\n\t * @param\t\t{Object}\t[data] - Object containing the data to send to the web service\r\n\t * @param\t\t{Class}\t\t[resultClass] - Optional\r\n\t * @returns\t\t{Promise}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Call a method of the web service using the PUT verb\r\n\t * \r\n\t * @memberof\tconbo.HttpService.prototype\r\n\t * @method\t\tput\r\n\t * @param\t\t{string}\tcommand - The name of the command\r\n\t * @param\t\t{Object}\t[data] - Object containing the data to send to the web service\r\n\t * @param\t\t{Class}\t\t[resultClass] - Optional\r\n\t * @returns\t\t{Promise}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Call a method of the web service using the PATCH verb\r\n\t * \r\n\t * @memberof\tconbo.HttpService.prototype\r\n\t * @method\t\tpatch\r\n\t * @param\t\t{string}\tcommand - The name of the command\r\n\t * @param\t\t{Object}\t[data] - Object containing the data to send to the web service\r\n\t * @param\t\t{Class}\t\t[resultClass] - Optional\r\n\t * @returns\t\t{Promise}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Call a method of the web service using the DELETE verb\r\n\t * \r\n\t * @memberof\tconbo.HttpService.prototype\r\n\t * @method\t\tdelete\r\n\t * @param\t\t{string}\tcommand - The name of the command\r\n\t * @param\t\t{Object}\t[data] - Object containing the data to send to the web service\r\n\t * @param\t\t{Class}\t\t[resultClass] - Optional\r\n\t * @returns\t\t{Promise}\r\n\t */\r\n\t\r\n\t/**\r\n\t * Add one or more remote commands as methods of this class instance\r\n\t * @param\t{string}\tcommand - The name of the command\r\n\t * @param\t{string}\t[method=GET] - GET, POST, etc (default: GET)\r\n\t * @param\t{Class}\t\t[resultClass] - Optional\r\n\t */\r\n\taddCommand: function(command, method, resultClass)\r\n\t{\r\n\t\tif (conbo.isObject(command))\r\n\t\t{\r\n\t\t\tmethod = command.method;\r\n\t\t\tresultClass = command.resultClass;\r\n\t\t\tcommand = command.command;\r\n\t\t}\r\n\t\t\r\n\t\tthis[conbo.toCamelCase(command)] = function(data)\r\n\t\t{\r\n\t\t\treturn this.call(command, data, method, resultClass);\r\n\t\t};\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add multiple commands as methods of this class instance\r\n\t * @param\t{string[]}\t\tcommands\r\n\t */\r\n\taddCommands: function(commands)\r\n\t{\r\n\t\tif (!conbo.isArray(commands))\r\n\t\t{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tcommands.forEach(function(command)\r\n\t\t{\r\n\t\t\tthis.addCommand(command);\r\n\t\t}, \r\n\t\tthis);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Method that encodes data to be sent to the API\r\n\t * \r\n\t * @param\t{Object}\tdata - Object containing the data to be sent to the API\r\n\t * @param\t{string}\t[method=GET] - GET, POST, etc (default: GET)\r\n\t */\r\n\tencodeFunction: function(data, method)\r\n\t{\r\n\t\treturn data;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Splice data into URL and remove spliced properties from data object\r\n\t */\r\n\tparseUrl: function(url, data)\r\n\t{\r\n\t\tvar parsedUrl = url,\r\n\t\t\tmatches = parsedUrl.match(/:\\b\\w+\\b/g);\r\n\t\t\r\n\t\tif (!!matches)\r\n\t\t{\r\n\t\t\tmatches.forEach(function(key) \r\n\t\t\t{\r\n\t\t\t\tkey = key.substr(1);\r\n\t\t\t\t\r\n\t\t\t\tif (!(key in data))\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error('Property \"'+key+'\" required but not found in data');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\t\r\n\t\tconbo.keys(data).forEach(function(key)\r\n\t\t{\r\n\t\t\tvar regExp = new RegExp(':\\\\b'+key+'\\\\b', 'g');\r\n\t\t\t\r\n\t\t\tif (regExp.test(parsedUrl))\r\n\t\t\t{\r\n\t\t\t\tparsedUrl = parsedUrl.replace(regExp, data[key]);\r\n\t\t\t\tdelete data[key];\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn parsedUrl;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.HttpService';\r\n\t}\r\n\t\r\n})\r\n.implement(conbo.IInjectable);\r\n\r\n/**\r\n * ISyncable pseudo-interface\r\n * \r\n * @augments\tconbo\r\n * @author \t\tNeil Rackett\r\n */\r\nconbo.ISyncable =\r\n{\r\n\tload: conbo.notImplemented,\r\n\tsave: conbo.notImplemented,\r\n\tdestroy: conbo.notImplemented\r\n};\r\n\r\n/**\r\n * Remote Hash\r\n * Used for syncing remote data with a local Hash\r\n * \r\n * @class\t\tRemoteHash\r\n * @memberof\tconbo\r\n * @augments\tconbo.Hash\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options, see Hash\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n * @fires\t\tconbo.ConboEvent#RESULT\r\n * @fires\t\tconbo.ConboEvent#FAULT\r\n */\r\nconbo.RemoteHash = conbo.Hash.extend(\r\n/** @lends conbo.RemoteHash.prototype */\r\n{\r\n\t/**\r\n\t * Constructor\r\n\t * @param {Object}\toptions\t\tObject containing `source` (initial properties), `rootUrl` and `command` parameters\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\toptions = conbo.defineDefaults(options, this.options);\r\n\t\t\r\n\t\tif (!!options.context) this.context = options.context;\r\n\t\tthis.preinitialize(options);\r\n\t\t\r\n\t\tthis._httpService = new conbo.HttpService(options);\r\n\t\tthis._command = options.command;\r\n\t\t\r\n\t\tvar resultHandler = function(event)\r\n\t\t{\r\n\t\t\tconbo.makeBindable(this, conbo.variables(event.result));\r\n\t\t\tconbo.setValues(this, event.result);\r\n\t\t\t\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t};\r\n\t\t\r\n\t\tthis._httpService\r\n\t\t\t.addEventListener(conbo.ConboEvent.RESULT, resultHandler, this)\r\n\t\t\t.addEventListener(conbo.ConboEvent.FAULT, this.dispatchEvent, this);\r\n\t\t\r\n\t\t__denumerate(this);\r\n\t\t\r\n\t\tconbo.Hash.prototype.__construct.apply(this, arguments);\r\n\t},\r\n\t\r\n\tload: function(data)\r\n\t{\r\n\t\tdata = arguments.length ? data : this.toJSON();\r\n\t\tthis._httpService.call(this._command, data, 'GET');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tsave: function()\r\n\t{\r\n\t\tthis._httpService.call(this._command, this.toJSON(), 'POST');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tdestroy: function()\r\n\t{\r\n\t\tthis._httpService.call(this._command, this.toJSON(), 'DELETE');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.RemoteHash';\r\n\t}\r\n\t\r\n}).implement(conbo.ISyncable);\r\n\r\n__denumerate(conbo.HttpService.prototype);\r\n\r\n/**\r\n * Remote List\r\n * Used for syncing remote array data with a local List\r\n * \r\n * @class\t\tRemoteList\r\n * @memberof\tconbo\r\n * @augments\tconbo.List\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options, including HttpService options\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n * @fires\t\tconbo.ConboEvent#ADD\r\n * @fires\t\tconbo.ConboEvent#REMOVE\r\n * @fires\t\tconbo.ConboEvent#RESULT\r\n * @fires\t\tconbo.ConboEvent#FAULT\r\n */\r\nconbo.RemoteList = conbo.List.extend(\r\n/** @lends conbo.RemoteList.prototype */\r\n{\r\n\t//itemClass: conbo.RemoteHash,\r\n\t\r\n\t/**\r\n\t * Constructor\r\n\t * @param {Object}\t[options] - Object containing 'source' (Array, optional), 'rootUrl', 'command' and (optionally) 'itemClass' parameters\r\n\t */\r\n\t__construct: function(options)\r\n\t{\r\n\t\toptions = conbo.defineDefaults(options, this.options);\r\n\t\t\r\n\t\tthis.context = options.context;\r\n\t\t\r\n\t\tthis._httpService = new conbo.HttpService(options);\r\n\t\tthis._command = options.command;\r\n\t\t\r\n\t\tvar resultHandler = function(event)\r\n\t\t{\r\n\t\t\tthis.source = event.result;\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t};\r\n\t\t\r\n\t\tthis._httpService\r\n\t\t\t.addEventListener(conbo.ConboEvent.RESULT, resultHandler, this)\r\n\t\t\t.addEventListener(conbo.ConboEvent.FAULT, this.dispatchEvent, this)\r\n\t\t\t;\r\n\t\t\r\n\t\t__denumerate(this);\r\n\t\t\r\n\t\tconbo.List.prototype.__construct.apply(this, arguments);\r\n\t},\r\n\t\r\n\tload: function()\r\n\t{\r\n\t\tthis._httpService.call(this._command, this.toJSON(), 'GET');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tsave: function()\r\n\t{\r\n\t\tthis._httpService.call(this._command, this.toJSON(), 'POST');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tdestroy: function()\r\n\t{\r\n\t\t// TODO\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.RemoteList';\r\n\t}\r\n\t\r\n}).implement(conbo.ISyncable, conbo.IPreinitialize);\r\n\r\n__denumerate(conbo.HttpService.prototype);\r\n\r\n/**\r\n * Default history manager used by Router, implemented using onhashchange \r\n * event and hash-bang URL fragments\r\n * \r\n * @author \t\tNeil Rackett\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n * @fires\t\tconbo.ConboEvent#FAULT\r\n */\r\nconbo.History = conbo.EventDispatcher.extend(\r\n/** @lends conbo.History.prototype */\r\n{\r\n\t__construct: function(options)\r\n\t{\r\n\t\tthis.handlers = [];\r\n\t\tthis.location = window.location;\r\n\t\tthis.history = window.history;\r\n\t\t\r\n\t\tthis.bindAll('__checkUrl');\r\n\t},\r\n\t\r\n\tstart: function(options)\r\n\t{\r\n\t\toptions || (options = {});\r\n\t\t\r\n\t\twindow.addEventListener('hashchange', this.__checkUrl);\r\n\t\t\r\n\t\tthis.fragment = this.__getFragment();\r\n\t\t\r\n\t\tif (options.trigger !== false)\r\n\t\t{\r\n\t\t\tthis.__loadUrl();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tstop: function()\r\n\t{\r\n\t\twindow.removeEventListener('hashchange', this.__checkUrl);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\taddRoute: function(route, callback)\r\n\t{\r\n\t\tthis.handlers.unshift({route:route, callback:callback});\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * The current path\r\n\t * @returns\t{string}\r\n\t */\r\n\tgetPath: function()\r\n\t{\r\n\t\t// Workaround for bug in Firefox where location.hash will always be decoded\r\n\t\tvar match = this.location.href.match(/#!?(.*)$/);\r\n\t\treturn match ? match[1] : '';\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set the current path\r\n\t * \r\n\t * @param\t{string}\tpath - The path\r\n\t * @param\t{}\r\n\t */\r\n\tsetPath: function(fragment, options)\r\n\t{\r\n\t\toptions || (options = {});\r\n\t\tfragment = this.__getFragment(fragment);\r\n\t\t\r\n\t\tif (this.fragment === fragment) \r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar location = this.location;\r\n\t\t\r\n\t\tthis.fragment = fragment;\r\n\t\t\r\n\t\tif (options.replace)\r\n\t\t{\r\n\t\t\tvar href = location.href.replace(/(javascript:|#).*$/, '');\r\n\t\t\tlocation.replace(href + '#!/' + fragment);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlocation.hash = '#!/' + fragment;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.trigger) \r\n\t\t{\r\n\t\t\tthis.__loadUrl(fragment);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__checkUrl: function(event)\r\n\t{\r\n\t\tvar changed = this.__getFragment() !== this.fragment;\r\n\t\t\r\n\t\tif (changed)\r\n\t\t{\r\n\t\t\tthis.__loadUrl();\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.CHANGE));\r\n\t\t}\r\n\t\t\r\n\t\treturn !changed;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get the cross-browser normalized URL fragment, either from the URL, the hash, or the override.\r\n\t * @private\r\n\t */\r\n\t__getFragment: function(fragment)\r\n\t{\r\n\t\treturn (fragment || this.getPath()).replace(/^#!|^[#\\/]|\\s+$/g, '');\r\n\t},\r\n\t\r\n\t/**\r\n\t * Attempt to load the current URL fragment\r\n\t * @private\r\n\t * @returns \t{boolean}\tWhether or not the path is a valid route\r\n\t */\r\n\t__loadUrl: function(fragmentOverride)\r\n\t{\r\n\t\tvar fragment = this.fragment = this.__getFragment(fragmentOverride);\r\n\t\t\r\n\t\tvar matched = conbo.some(this.handlers, function(handler)\r\n\t\t{\r\n\t\t\tif (handler.route.test(fragment))\r\n\t\t\t{\r\n\t\t\t\thandler.callback(fragment);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (!matched)\r\n\t\t{\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.FAULT));\r\n\t\t}\r\n\t\t\r\n\t\treturn matched;\r\n\t},\r\n\t\r\n});\r\n\r\n/**\r\n * Router\r\n * \r\n * Routers map faux-URLs to actions, and fire events when routes are\r\n * matched. Creating a new one sets its `routes` hash, if not set statically.\r\n * \r\n * Derived from the Backbone.js class of the same name\r\n * \r\n * @class\t\tRouter\r\n * @memberof\tconbo\r\n * @augments\tconbo.EventDispatcher\r\n * @author \t\tNeil Rackett\r\n * @param \t\t{Object} options - Object containing initialisation options\r\n * @fires\t\tconbo.ConboEvent#CHANGE\r\n * @fires\t\tconbo.ConboEvent#FAULT\r\n * @fires\t\tconbo.ConboEvent#ROUTE\r\n * @fires\t\tconbo.ConboEvent#START\r\n * @fires\t\tconbo.ConboEvent#STOP\r\n */\r\nconbo.Router = conbo.EventDispatcher.extend(\r\n/** @lends conbo.Router.prototype */\r\n{\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t__construct: function(options) \r\n\t{\r\n\t\tif (options.routes) \r\n\t\t{\r\n\t\t\tthis.routes = options.routes;\r\n\t\t}\r\n\t\t\r\n\t\tthis.historyClass = conbo.History;\r\n\t\tthis.context = options.context;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Start the router\r\n\t */\r\n\tstart: function(options)\r\n\t{\r\n\t\tif (!this.__history)\r\n\t\t{\r\n\t\t\tthis.__history = new this.historyClass();\r\n\t\t\tthis.__bindRoutes();\r\n\t\t\t\r\n\t\t\tthis.__history\r\n\t\t\t\t.addEventListener(conbo.ConboEvent.FAULT, this.dispatchEvent, this)\r\n\t\t\t\t.addEventListener(conbo.ConboEvent.CHANGE, this.dispatchEvent, this)\r\n\t\t\t\t.start(options)\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.START));\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Stop the router\r\n\t */\r\n\tstop: function()\r\n\t{\r\n\t\tif (this.__history)\r\n\t\t{\r\n\t\t\tthis.__history\r\n\t\t\t\t.removeEventListener()\r\n\t\t\t\t.stop()\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tdelete this.__history;\r\n\t\t\t\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.STOP));\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Adds a named route\r\n\t * \r\n\t * @example\r\n\t * \t\tthis.addRoute('search/:query/p:num', 'search', function(query, num) {\r\n\t * \t\t\t ...\r\n\t * \t\t});\r\n\t */ \r\n\taddRoute: function(route, name, callback) \r\n\t{\r\n\t\tvar regExp = conbo.isRegExp(route) ? route : this.__routeToRegExp(route);\r\n\t\t\r\n\t\tif (!callback) \r\n\t\t{\r\n\t\t\tcallback = this[name];\r\n\t\t}\r\n\t\t\r\n\t\tif (conbo.isFunction(name)) \r\n\t\t{\r\n\t\t\tcallback = name;\r\n\t\t\tname = '';\r\n\t\t}\r\n\t\t\r\n\t\tif (!callback) \r\n\t\t{\r\n\t\t\tcallback = this[name];\r\n\t\t}\r\n\t\t\r\n\t\tthis.__history.addRoute(regExp, (function(path)\r\n\t\t{\r\n\t\t\tvar args = this.__extractParameters(regExp, path);\r\n\t\t\t\r\n\t\t\tvar params = conbo.isString(route) \r\n\t\t\t\t? conbo.object((route.match(/:\\w+/g) || []).map(function(r) { return r.substr(1); }), args) \r\n\t\t\t\t: {}\r\n\t\t\t\t;\r\n\t\t\t\r\n\t\t\tcallback && callback.apply(this, args);\r\n\t\t\t\r\n\t\t\tvar options = \r\n\t\t\t{\r\n\t\t\t\trouter:\t\tthis,\r\n\t\t\t\troute:\t\tregExp,\r\n\t\t\t\tname:\t\tname,\r\n\t\t\t\tparameters:\targs,\r\n\t\t\t\tparams:\t\tparams,\r\n\t\t\t\tpath:\t\tpath\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent('route:'+name, options));\r\n\t\t\tthis.dispatchEvent(new conbo.ConboEvent(conbo.ConboEvent.ROUTE, options));\r\n\t\t\t\r\n\t\t}).bind(this));\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sets the current path, optionally replacing the current path or silently \r\n\t * without triggering a route event\r\n\t * \r\n\t * @param\t{string}\tpath - The path to navigate to\r\n\t * @param\t{Object}\t[options] - Object containing options: trigger (default: true) and replace (default: false)\r\n\t */\r\n\tsetPath: function(path, options) \r\n\t{\r\n\t\toptions = conbo.setDefaults({}, options, {trigger:true});\r\n\t\t\r\n\t\tthis.__history.setPath(path, options);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get or set the current path using the default options\r\n\t * @type\t{string}\r\n\t */\r\n\tget path()\r\n\t{\r\n\t\treturn this.__history ? this.__history.getPath() : '';\r\n\t},\r\n\t\r\n\tset path(value)\r\n\t{\r\n\t\treturn this.setPath(value);\r\n\t},\r\n\t\r\n\ttoString: function()\r\n\t{\r\n\t\treturn 'conbo.Router';\r\n\t},\r\n\t\r\n\t/**\r\n\t * Bind all defined routes. We have to reverse the\r\n\t * order of the routes here to support behavior where the most general\r\n\t * routes can be defined at the bottom of the route map.\r\n\t * \r\n\t * @private\r\n\t */\r\n\t__bindRoutes: function() \r\n\t{\r\n\t\tif (!this.routes) return;\r\n\t\t\r\n\t\tvar route;\r\n\t\tvar routes = conbo.keys(this.routes);\r\n\t\t\r\n\t\twhile ((route = routes.pop()) != null)\r\n\t\t{\r\n\t\t\tthis.addRoute(route, this.routes[route]);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Convert a route string into a regular expression, suitable for matching\r\n\t * against the current location hash.\r\n\t * \r\n\t * @private\r\n\t */\r\n\t__routeToRegExp: function(route) \r\n\t{\r\n\t\tvar rootStripper \t= /^\\/+|\\/+$/g;\r\n\t\tvar optionalParam \t= /\\((.*?)\\)/g;\r\n\t\tvar namedParam\t\t= /(\\(\\?)?:\\w+/g;\r\n\t\tvar splatParam\t\t= /\\*\\w+/g;\r\n\t\tvar escapeRegExp\t= /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\n\t\t\r\n\t\troute = route\r\n\t\t\t.replace(rootStripper, '')\r\n\t\t\t.replace(escapeRegExp, '\\\\$&')\r\n\t\t\t.replace(optionalParam, '(?:$1)?')\r\n\t\t\t.replace(namedParam, function(match, optional)\r\n\t\t\t{\r\n\t\t\t\treturn optional ? match : '([^\\/]+)';\r\n\t\t\t})\r\n\t\t\t.replace(splatParam, '(.*?)');\r\n\t\t\r\n\t\treturn new RegExp('^' + route + '$');\r\n\t},\r\n\r\n\t/**\r\n\t * Given a route, and a URL fragment that it matches, return the array of\r\n\t * extracted decoded parameters. Empty or unmatched parameters will be\r\n\t * treated as `null` to normalize cross-browser behavior.\r\n\t * \r\n\t * @private\r\n\t */\r\n\t__extractParameters: function(route, fragment) \r\n\t{\r\n\t\tvar params = route.exec(fragment).slice(1);\r\n\t\t\r\n\t\treturn conbo.map(params, function(param) \r\n\t\t{\r\n\t\t\tif (param)\r\n\t\t\t{\r\n\t\t\t\t// Fix for Chrome's invalid URI error\r\n\t\t\t\ttry { return decodeURIComponent(param); }\r\n\t\t\t\tcatch (e) { return unescape(param); }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t});\r\n\t}\r\n\t\r\n}).implement(conbo.IInjectable);\r\n\r\n__denumerate(conbo.Router.prototype);\r\n\r\n\r\n\tconbo.ready(function()\r\n\t{\r\n\t\t!conbo.isNode && conbo.info('%c '+conbo.toString()+' ', 'font-weight:bold; background-color:#069; color:white;', 'https://conbo.mesmotronic.com');\r\n\t});\r\n\r\n\treturn conbo;\r\n});\r\n","import { Hash } from 'conbo';\r\n\r\nexport default class MyModel extends Hash\r\n{\r\n\tpublic name:string = 'Conbo via ParcelJS';\r\n}\r\n","import MyModel from '../model/MyModel';\r\nimport { Viewable, View, Inject } from 'conbo';\r\n\r\n@Viewable('conbo.example.typescript', 'View1')\r\nexport default class View1 extends View\r\n{\r\n\t@Inject public myModel:MyModel;\r\n\r\n\tprotected declarations()\r\n\t{\r\n\t\tthis.tagName = 'p';\r\n\t\tthis.template = `View 1`;\r\n\t}\r\n}\r\n","import MyModel from '../model/MyModel';\r\nimport { Viewable, View, Inject } from 'conbo';\r\n\r\n@Viewable('conbo.example.typescript', 'View2')\r\nexport default class View2 extends View\r\n{\r\n\t@Inject public myModel:MyModel;\r\n\r\n\tprotected declarations()\r\n\t{\r\n\t\tthis.tagName = 'p';\r\n\t\tthis.template = `View 2`;\r\n\t}\r\n}\r\n","import { Context, Router, View, ConboEvent, encodeEntities } from 'conbo';\r\nimport View1 from '../view/View1';\r\nimport View2 from '../view/View2';\r\n\r\n\r\nexport default class MyRouter extends Router\r\n{\r\n\tcontainer: View;\r\n\tcontext: Context;\r\n\tcurrentView:View;\r\n\r\n\tdeclarations(options:any)\r\n\t{\r\n\t\tthis.context = options.context;\r\n\t\tthis.container = this.context.app;\r\n\r\n\t\tthis.context.namespace['View1'] = View1;\r\n\t\tthis.context.namespace['View2'] = View2;\r\n\r\n\t\t// Route:Name pairs\r\n\t\tthis.routes =\r\n\t\t{\r\n\t\t\t'/':'',\r\n\t\t\t'View1':'View1',\r\n\t\t\t'View2':'View2',\r\n\t\t};\r\n\t}\r\n\r\n\tprotected initialize()\r\n\t{\r\n\t\tthis\r\n\t\t\t.addEventListener(ConboEvent.FAULT, this.faultHandler, this) // Unrecognised route\r\n\t\t\t.addEventListener(ConboEvent.ROUTE, this.routeHandler, this) // Recognised route\r\n\t\t\t.start();\r\n\r\n\t}\r\n\r\n\tprotected routeHandler(event: ConboEvent): any {\r\n\t\t/* For automatic adding and removing */\r\n\r\n\t\tif(!!this.currentView) {\r\n\t\t\tthis.currentView.remove();\r\n\t\t}\r\n\t\tif(this.context) console.log('this.context.namespace[event.name]', this.context.namespace[event.name]);\r\n\t\tif(this.context && this.context.namespace[event.name]) {\r\n\t\t\tthis.currentView = new this.context.namespace[event.name](this.context);\r\n\t\t} else {\r\n\t\t\tthis.currentView = null;\r\n\t\t}\r\n\r\n\t\tif(!!this.currentView && this.container.body) this.container.appendView(this.currentView);\r\n\t}\r\n\tprotected faultHandler(arg0: any, arg1: any, arg2: any): any {\r\n\t\tconsole.warn('faultHandler Method not implemented.');\r\n\t}\r\n}\r\n","import { Context } from 'conbo';\r\n\r\nimport MyModel from '../model/MyModel';\r\nimport MyRouter from './MyRouter';\r\n\r\nexport default class MyContext extends Context\r\n{\r\n\tprotected initialize()\r\n\t{\r\n\t\tthis.mapSingleton('myModel', MyModel);\r\n\t\tthis.mapSingleton('myRouter', MyRouter, {context:this});\r\n\t}\r\n}\r\n","import MyModel from '../model/MyModel';\r\nimport { Viewable, View, Inject } from 'conbo';\r\n\r\n@Viewable('conbo.example.typescript', 'InputView')\r\nexport default class InputView extends View\r\n{\r\n\t@Inject public myModel:MyModel;\r\n\r\n\tprotected declarations()\r\n\t{\r\n\t\tthis.tagName = 'p';\r\n\t\tthis.template = `My name is <input type=\"text\" placeholder=\"Name\" cb-bind=\"myModel.name\" />\r\n\t\t<a href=\"./#!View1\">view 1</a>\r\n\t\t<a href=\"./#!View2\">view 2</a>\r\n\t\t`;\r\n\t}\r\n}\r\n","import { View, Viewable, Inject } from 'conbo';\r\n\r\nimport MyModel from '../model/MyModel';\r\n\r\n@Viewable('conbo.example.typescript', 'OutputView')\r\nexport default class OutputView extends View\r\n{\r\n\t@Inject public myModel:MyModel;\r\n\r\n\tprotected declarations()\r\n\t{\r\n\t\tthis.tagName = 'h1';\r\n\t\tthis.template = `Hello, {{myModel.name|parseName}}!`;\r\n\t}\r\n\r\n\tpublic parseName(name:string):string\r\n\t{\r\n\t\treturn name || 'Stranger';\r\n\t}\r\n}\r\n","import './TypeScriptExample.scss';\r\n\r\nimport * as conbo from 'conbo';\r\nimport { Application, Viewable, Inject } from 'conbo';\r\n\r\nimport MyContext from './core/MyContext';\r\nimport InputView from './view/InputView';\r\nimport OutputView from './view/OutputView';\r\nimport MyRouter from './core/MyRouter';\r\n\r\n@Viewable('conbo.example.typescript', 'TypeScriptExample')\r\nexport default class TypeScriptExample extends Application\r\n{\r\n\t@Inject public myRouter:MyRouter;\r\n\r\n\tprotected declarations():void\r\n\t{\r\n\t\tthis.namespace = conbo('conbo.example.typescript');\r\n\t\tthis.contextClass = MyContext;\r\n\t}\r\n\r\n\tprotected initialize():void\r\n\t{\r\n\t\tconsole.info('Hello from ConboJS using TypeScript, SASS & Webpack!');\r\n\t\tthis.myRouter.setPath('/');\r\n\r\n\t\tthis.appendView\r\n\t\t(\r\n\t\t\tnew OutputView(this.context),\r\n\t\t\tnew InputView(this.context)\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}